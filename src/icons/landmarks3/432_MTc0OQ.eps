%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: 1611.m10.i306.n016.S.c12.245524051 famous architecture world travel vector landmarks icons.eps
%%Creator: Adobe Illustrator(R) 20.1
%%For: Andrey Magda
%%CreationDate: 11/7/2016
%%BoundingBox: 0 0 386 406
%%HiResBoundingBox: 0 0 385.3704 405.0371
%%CropBox: 0 0 385.3704 405.0371
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 20.1.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 20.1.0 x174 R agm 4.7740 ct 5.3840%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c132 79.159284, 2016/04/19-13:13:40        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Печать</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:MetadataDate>2016-11-07T12:35:40+02:00</xmp:MetadataDate>
         <xmp:ModifyDate>2016-11-07T12:35:40+02:00</xmp:ModifyDate>
         <xmp:CreateDate>2016-11-07T12:35:40+02:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CC 2015.3 (Windows)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>244</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAD0AwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FWK+dfN0+gyRpHEXSazvJQ9K0nhRWgX/ZtUZZCILT&#xA;lyGPyKUfln5svL6z0fSZ4jWDT5BdSsQWE0EwhjU713iXlX3w5IiyWGCZIAPc9BypyXYq7FXkz/mV&#xA;dyeZPLdxPA8NuYbsahEvjPI0cCk9K1t0P+yzI4BRcPxjxR2ejeWdSuNT0CwvrlBHczwqbhBSglGz&#xA;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</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:InstanceID>xmp.iid:f899058e-ead1-f349-9189-76773c823ce3</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:f899058e-ead1-f349-9189-76773c823ce3</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:a9c853fd-e325-4d2d-a5fb-d588ed45c8ea</stRef:instanceID>
            <stRef:documentID>xmp.did:c1904bb2-21ab-ea48-ba06-098974e62779</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:c1904bb2-21ab-ea48-ba06-098974e62779</stEvt:instanceID>
                  <stEvt:when>2016-11-04T00:29:50+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015.3 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:f899058e-ead1-f349-9189-76773c823ce3</stEvt:instanceID>
                  <stEvt:when>2016-11-07T12:35:40+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015.3 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>450.000000</stDim:w>
            <stDim:h>450.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Группа образцов по умолчанию</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Белый</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Черный</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=227 B=108</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>227</xmpG:green>
                           <xmpG:blue>108</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=205 B=2</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>205</xmpG:green>
                           <xmpG:blue>2</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=147 B=39</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>39</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=244 G=127 B=0</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>244</xmpG:red>
                           <xmpG:green>127</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=98 B=0</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=163 G=134 B=113</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>163</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>113</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=142 G=114 B=94</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>142</xmpG:red>
                           <xmpG:green>114</xmpG:green>
                           <xmpG:blue>94</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=122 G=98 B=81</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>122</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>81</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=165 G=198 B=59</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>165</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=142 G=176 B=33</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>142</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=228 G=237 B=239</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>228</xmpG:red>
                           <xmpG:green>237</xmpG:green>
                           <xmpG:blue>239</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=184 G=201 B=241</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>184</xmpG:red>
                           <xmpG:green>201</xmpG:green>
                           <xmpG:blue>241</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=231 G=76 B=60</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>231</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>60</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=192 G=57 B=43</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>192</xmpG:red>
                           <xmpG:green>57</xmpG:green>
                           <xmpG:blue>43</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=43 G=43 B=43</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>43</xmpG:red>
                           <xmpG:green>43</xmpG:green>
                           <xmpG:blue>43</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=52 G=152 B=219</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>52</xmpG:red>
                           <xmpG:green>152</xmpG:green>
                           <xmpG:blue>219</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=149 G=165 B=166</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>149</xmpG:red>
                           <xmpG:green>165</xmpG:green>
                           <xmpG:blue>166</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=127 G=140 B=141</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>127</xmpG:red>
                           <xmpG:green>140</xmpG:green>
                           <xmpG:blue>141</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Оттенки серого</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -405.037 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 405.037 li
385.37 405.037 li
385.37 0 li
cp
clp
58.8902 29.564 mo
58.8902 21.4094 52.2796 14.7988 44.1251 14.7988 cv
35.9706 14.7988 29.36 21.4094 29.36 29.564 cv
29.36 37.7185 35.9706 44.3291 44.1251 44.3291 cv
52.2796 44.3291 58.8902 37.7185 58.8902 29.564 cv
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
.00314336 .753872 1 .00015259 cmyk
f
113.649 61.2209 mo
97.6661 41.3173 li
96.6072 39.9987 94.6 39.9987 93.5411 41.3173 cv
77.5579 61.2209 li
76.1677 62.9521 77.4001 65.5223 79.6204 65.5223 cv
111.587 65.5223 li
113.807 65.5223 115.039 62.9521 113.649 61.2209 cv
cp
.005066 .18265 .997284 0 cmyk
f
97.8641 57.5335 mo
79.7534 34.9805 li
66.0894 34.9805 li
64.3865 34.9805 63.0061 33.6001 63.0061 31.8972 cv
63.0061 30.1944 61.6256 28.8139 59.9227 28.8139 cv
53.8958 28.8139 li
30.8331 57.5335 li
28.2512 60.7487 30.5401 65.5223 34.6636 65.5223 cv
94.0335 65.5223 li
98.1571 65.5223 100.446 60.7487 97.8641 57.5335 cv
cp
f
63.0061 31.8972 mo
63.0061 33.6001 64.3865 34.9805 66.0894 34.9805 cv
79.7534 34.9805 li
68.1792 20.5673 li
66.2125 18.1184 62.4846 18.1184 60.518 20.5673 cv
53.8958 28.8139 li
59.9227 28.8139 li
61.6256 28.8139 63.0061 30.1944 63.0061 31.8972 cv
cp
.0135195 .0729992 .697078 0 cmyk
f
59.1418 59.6812 mo
37.4374 32.6531 li
35.9996 30.8625 33.2738 30.8625 31.836 32.6531 cv
10.1316 59.6812 li
8.24377 62.032 9.9173 65.5223 12.9323 65.5223 cv
56.3411 65.5223 li
59.3561 65.5223 61.0296 62.032 59.1418 59.6812 cv
cp
.005066 .18265 .997284 0 cmyk
f
64.9371 59.6812 mo
47.0228 37.3728 li
44.1251 40.9812 li
59.1418 59.6812 li
61.0296 62.0321 59.3561 65.5223 56.3411 65.5223 cv
62.1364 65.5223 li
65.1514 65.5223 66.8249 62.0321 64.9371 59.6812 cv
cp
.094667 .239139 1 0 cmyk
f
103.659 57.5335 mo
92.0892 43.1253 li
89.1916 46.7337 li
97.8641 57.5335 li
100.446 60.7487 98.1571 65.5223 94.0335 65.5223 cv
99.8288 65.5223 li
103.952 65.5223 106.241 60.7487 103.659 57.5335 cv
cp
f
25.8538 61.2458 mo
23.6828 61.2458 li
23.6828 58.5888 li
23.6828 57.6943 22.9577 56.9693 22.0633 56.9693 cv
19.8131 56.9693 li
19.8131 54.3123 li
19.8131 53.4178 19.088 52.6927 18.1936 52.6927 cv
16.944 52.6927 li
16.944 50.0357 li
16.944 49.1413 16.219 48.4162 15.3245 48.4162 cv
12.1488 48.4162 li
11.2544 48.4162 10.5293 49.1413 10.5293 50.0357 cv
10.5293 52.6927 li
9.27975 52.6927 li
8.38533 52.6927 7.66024 53.4178 7.66024 54.3123 cv
7.66024 56.9693 li
5.41004 56.9693 li
4.51563 56.9693 3.79053 57.6943 3.79053 58.5888 cv
3.79053 61.2458 li
1.61951 61.2458 li
.725042 61.2458 0 61.9708 0 62.8653 cv
0 65.5223 li
27.4733 65.5223 li
27.4733 62.8653 li
27.4733 61.9708 26.7483 61.2458 25.8538 61.2458 cv
cp
.00695811 .613306 1 0 cmyk
f
5.45282 61.2457 mo
7.62384 61.2457 li
7.62384 58.5888 li
7.62384 57.6943 8.34894 56.9692 9.24335 56.9692 cv
11.4936 56.9692 li
11.4936 54.3123 li
11.4936 53.4178 12.2187 52.6928 13.1131 52.6928 cv
14.3626 52.6928 li
14.3626 50.0357 li
14.3626 49.254 14.9166 48.6018 15.6533 48.4498 cv
15.5471 48.4279 15.4372 48.4162 15.3245 48.4162 cv
12.1488 48.4162 li
11.2544 48.4162 10.5293 49.1412 10.5293 50.0357 cv
10.5293 52.6928 li
9.27972 52.6928 li
8.38531 52.6928 7.66022 53.4178 7.66022 54.3123 cv
7.66022 56.9692 li
5.41003 56.9692 li
4.51563 56.9692 3.79053 57.6943 3.79053 58.5888 cv
3.79053 61.2457 li
1.61951 61.2457 li
.725037 61.2457 0 61.9708 0 62.8652 cv
0 65.5223 li
3.83331 65.5223 li
3.83331 62.8652 li
3.83331 61.9708 4.55835 61.2457 5.45282 61.2457 cv
cp
0 .5093 .930571 0 cmyk
f
56.1847 61.2458 mo
54.0137 61.2458 li
54.0137 58.5888 li
54.0137 57.6943 53.2886 56.9693 52.3942 56.9693 cv
50.144 56.9693 li
50.144 54.3123 li
50.144 53.4178 49.4189 52.6927 48.5245 52.6927 cv
47.2749 52.6927 li
47.2749 50.0357 li
47.2749 49.1413 46.5498 48.4162 45.6554 48.4162 cv
42.4797 48.4162 li
41.5853 48.4162 40.8602 49.1413 40.8602 50.0357 cv
40.8602 52.6927 li
39.6106 52.6927 li
38.7162 52.6927 37.9911 53.4178 37.9911 54.3123 cv
37.9911 56.9693 li
35.7409 56.9693 li
34.8465 56.9693 34.1214 57.6943 34.1214 58.5888 cv
34.1214 61.2458 li
31.9503 61.2458 li
31.0559 61.2458 30.3308 61.9708 30.3308 62.8653 cv
30.3308 65.5223 li
57.8042 65.5223 li
57.8042 62.8653 li
57.8042 61.9708 57.0791 61.2458 56.1847 61.2458 cv
cp
.00695811 .613306 1 0 cmyk
f
35.7837 61.2457 mo
37.9548 61.2457 li
37.9548 58.5888 li
37.9548 57.6943 38.6798 56.9692 39.5743 56.9692 cv
41.8245 56.9692 li
41.8245 54.3123 li
41.8245 53.4178 42.5495 52.6928 43.444 52.6928 cv
44.6935 52.6928 li
44.6935 50.0357 li
44.6935 49.2539 45.2475 48.6018 45.9843 48.4498 cv
45.8781 48.4279 45.7681 48.4162 45.6555 48.4162 cv
42.4797 48.4162 li
41.5853 48.4162 40.8602 49.1412 40.8602 50.0357 cv
40.8602 52.6928 li
39.6107 52.6928 li
38.7162 52.6928 37.9911 53.4178 37.9911 54.3123 cv
37.9911 56.9692 li
35.7409 56.9692 li
34.8464 56.9692 34.1214 57.6943 34.1214 58.5888 cv
34.1214 61.2457 li
31.9504 61.2457 li
31.0559 61.2457 30.3308 61.9708 30.3308 62.8652 cv
30.3308 65.5223 li
34.1642 65.5223 li
34.1642 62.8652 li
34.1642 61.9708 34.8893 61.2457 35.7837 61.2457 cv
cp
0 .5093 .930571 0 cmyk
f
85.9282 62.774 mo
75.7162 50.0572 li
75.0396 49.2147 73.7572 49.2147 73.0807 50.0572 cv
62.8687 62.774 li
61.9805 63.8801 62.7679 65.5223 64.1864 65.5223 cv
84.6104 65.5223 li
86.029 65.5223 86.8164 63.8801 85.9282 62.774 cv
cp
.00695811 .613306 1 0 cmyk
f
66.702 62.774 mo
76.3151 50.803 li
75.7162 50.0572 li
75.0397 49.2147 73.7572 49.2147 73.0807 50.0572 cv
62.8687 62.774 li
61.9805 63.8801 62.7679 65.5223 64.1864 65.5223 cv
68.0198 65.5223 li
66.6012 65.5223 65.8138 63.8801 66.702 62.774 cv
cp
0 .5093 .930571 0 cmyk
f
63.7971 40.8141 mo
57.1306 40.8141 li
56.5783 40.8141 56.1306 40.3663 56.1306 39.8141 cv
56.1306 39.2618 56.5783 38.8141 57.1306 38.8141 cv
63.7971 38.8141 li
64.3493 38.8141 64.7971 39.2618 64.7971 39.8141 cv
64.7971 40.3663 64.3493 40.8141 63.7971 40.8141 cv
cp
.0135195 .0729992 .697078 0 cmyk
f
77.7317 45.8971 mo
71.0652 45.8971 li
70.5129 45.8971 70.0652 45.4493 70.0652 44.8971 cv
70.0652 44.3448 70.5129 43.8971 71.0652 43.8971 cv
77.7317 43.8971 li
78.2839 43.8971 78.7317 44.3448 78.7317 44.8971 cv
78.7317 45.4493 78.2839 45.8971 77.7317 45.8971 cv
cp
f
32.6931 48.6471 mo
26.0266 48.6471 li
25.4743 48.6471 25.0266 48.1993 25.0266 47.6471 cv
25.0266 47.0948 25.4743 46.6471 26.0266 46.6471 cv
32.6931 46.6471 li
33.2453 46.6471 33.6931 47.0948 33.6931 47.6471 cv
33.6931 48.1993 33.2453 48.6471 32.6931 48.6471 cv
cp
f
217.363 39.8226 mo
217.363 39.8226 li
217.363 38.0622 215.936 36.6351 214.176 36.6351 cv
186.801 36.6351 li
185.04 36.6351 183.613 38.0622 183.613 39.8226 cv
183.613 39.8226 li
183.613 41.583 185.04 43.0101 186.801 43.0101 cv
195.426 43.0101 li
197.186 43.0101 198.613 44.4372 198.613 46.1976 cv
198.613 46.1976 li
198.613 47.958 197.186 49.3851 195.426 49.3851 cv
190.426 49.3851 li
188.665 49.3851 187.238 50.8122 187.238 52.5726 cv
187.238 52.5726 li
187.238 54.333 188.665 55.7601 190.426 55.7601 cv
217.801 55.7601 li
219.561 55.7601 220.988 54.333 220.988 52.5726 cv
220.988 52.5726 li
220.988 50.8122 222.415 49.3851 224.176 49.3851 cv
229.176 49.3851 li
230.936 49.3851 232.363 47.958 232.363 46.1976 cv
232.363 46.1976 li
232.363 44.4372 230.936 43.0101 229.176 43.0101 cv
220.551 43.0101 li
218.79 43.0101 217.363 41.583 217.363 39.8226 cv
cp
.0951247 .0242008 .0411383 0 cmyk
f
163.098 30.9978 mo
163.098 30.9977 li
163.098 29.2373 161.671 27.8103 159.911 27.8103 cv
132.536 27.8103 li
130.775 27.8103 129.348 29.2373 129.348 30.9977 cv
129.348 30.9978 li
129.348 32.7582 130.775 34.1853 132.536 34.1853 cv
141.161 34.1853 li
142.921 34.1853 144.348 35.6123 144.348 37.3727 cv
144.348 37.3728 li
144.348 39.1332 142.921 40.5603 141.161 40.5603 cv
136.161 40.5603 li
134.4 40.5603 132.973 41.9873 132.973 43.7477 cv
132.973 43.7478 li
132.973 45.5082 134.4 46.9353 136.161 46.9353 cv
163.536 46.9353 li
165.296 46.9353 166.723 45.5082 166.723 43.7478 cv
166.723 43.7477 li
166.723 41.9873 168.15 40.5603 169.911 40.5603 cv
174.911 40.5603 li
176.671 40.5603 178.098 39.1332 178.098 37.3728 cv
178.098 37.3727 li
178.098 35.6123 176.671 34.1853 174.911 34.1853 cv
166.286 34.1853 li
164.525 34.1853 163.098 32.7582 163.098 30.9978 cv
cp
f
234.628 61.9665 mo
132.598 61.9665 li
132.598 61.9665 li
132.598 58.284 135.233 55.1343 138.858 54.4903 cv
146.369 53.1565 160.87 51.3106 183.613 51.3106 cv
206.356 51.3106 220.858 53.1565 228.368 54.4903 cv
231.994 55.1343 234.628 58.284 234.628 61.9665 cv
234.628 61.9665 li
cp
.406989 .0413214 .995636 0 cmyk
f
203.911 31.0727 mo
170.869 31.0727 li
169.454 31.0727 168.307 29.9254 168.307 28.5102 cv
168.307 24.5848 li
168.307 23.1696 169.454 22.0223 170.869 22.0223 cv
203.911 22.0223 li
205.326 22.0223 206.473 23.1696 206.473 24.5848 cv
206.473 28.5102 li
206.473 29.9254 205.326 31.0727 203.911 31.0727 cv
cp
.406775 .508873 .617395 .149355 cmyk
f
162.411 31.0727 mo
145.036 31.0727 li
143.62 31.0727 142.473 29.9254 142.473 28.5102 cv
142.473 24.5848 li
142.473 23.1696 143.62 22.0223 145.036 22.0223 cv
162.411 22.0223 li
163.826 22.0223 164.973 23.1696 164.973 24.5848 cv
164.973 28.5102 li
164.973 29.9254 163.826 31.0727 162.411 31.0727 cv
cp
f
142.661 58.1416 mo
135.161 58.1416 li
133.745 58.1416 132.598 56.9944 132.598 55.5791 cv
132.598 51.6538 li
132.598 50.2385 133.745 49.0913 135.161 49.0913 cv
142.661 49.0913 li
144.076 49.0913 145.223 50.2385 145.223 51.6538 cv
145.223 55.5791 li
145.223 56.9944 144.076 58.1416 142.661 58.1416 cv
cp
f
218.503 33.6352 mo
218.503 55.5791 li
218.503 56.9944 217.356 58.1416 215.941 58.1416 cv
212.015 58.1416 li
210.6 58.1416 209.453 56.9944 209.453 55.5791 cv
209.453 33.6352 li
209.453 32.2199 210.6 31.0727 212.015 31.0727 cv
215.941 31.0727 li
217.356 31.0727 218.503 32.2199 218.503 33.6352 cv
cp
f
227.185 32.0202 mo
234.484 52.7145 li
234.955 54.0491 234.255 55.5127 232.92 55.9834 cv
229.219 57.2892 li
227.884 57.76 226.42 57.0597 225.95 55.7251 cv
218.65 35.0308 li
218.179 33.6962 218.879 32.2326 220.214 31.7618 cv
223.916 30.456 li
225.251 29.9853 226.714 30.6856 227.185 32.0202 cv
cp
f
203.911 31.0727 mo
170.869 31.0727 li
169.454 31.0727 168.307 29.9254 168.307 28.5102 cv
168.307 24.5848 li
168.307 23.1696 169.454 22.0223 170.869 22.0223 cv
203.911 22.0223 li
205.326 22.0223 206.473 23.1696 206.473 24.5848 cv
206.473 28.5102 li
206.473 29.9254 205.326 31.0727 203.911 31.0727 cv
cp
f
162.411 31.0727 mo
145.036 31.0727 li
143.62 31.0727 142.473 29.9254 142.473 28.5102 cv
142.473 24.5848 li
142.473 23.1696 143.62 22.0223 145.036 22.0223 cv
162.411 22.0223 li
163.826 22.0223 164.973 23.1696 164.973 24.5848 cv
164.973 28.5102 li
164.973 29.9254 163.826 31.0727 162.411 31.0727 cv
cp
f
142.661 58.1416 mo
135.161 58.1416 li
133.745 58.1416 132.598 56.9944 132.598 55.5791 cv
132.598 51.6538 li
132.598 50.2385 133.745 49.0913 135.161 49.0913 cv
142.661 49.0913 li
144.076 49.0913 145.223 50.2385 145.223 51.6538 cv
145.223 55.5791 li
145.223 56.9944 144.076 58.1416 142.661 58.1416 cv
cp
f
218.503 33.6352 mo
218.503 55.5791 li
218.503 56.9944 217.356 58.1416 215.941 58.1416 cv
212.015 58.1416 li
210.6 58.1416 209.453 56.9944 209.453 55.5791 cv
209.453 33.6352 li
209.453 32.2199 210.6 31.0727 212.015 31.0727 cv
215.941 31.0727 li
217.356 31.0727 218.503 32.2199 218.503 33.6352 cv
cp
f
227.185 32.0202 mo
234.484 52.7145 li
234.955 54.0491 234.255 55.5127 232.92 55.9834 cv
229.219 57.2892 li
227.884 57.76 226.42 57.0597 225.95 55.7251 cv
218.65 35.0308 li
218.179 33.6962 218.879 32.2326 220.214 31.7618 cv
223.916 30.456 li
225.251 29.9853 226.714 30.6856 227.185 32.0202 cv
cp
f
203.911 22.0223 mo
170.869 22.0223 li
169.454 22.0223 168.306 23.1696 168.306 24.5848 cv
168.306 27.5848 li
168.306 26.1696 169.454 25.0223 170.869 25.0223 cv
203.911 25.0223 li
205.326 25.0223 206.473 26.1696 206.473 27.5848 cv
206.473 24.5848 li
206.473 23.1696 205.326 22.0223 203.911 22.0223 cv
cp
.353704 .445655 .551232 .0619516 cmyk
f
162.411 22.0223 mo
145.036 22.0223 li
143.62 22.0223 142.473 23.1696 142.473 24.5848 cv
142.473 27.5848 li
142.473 26.1696 143.62 25.0223 145.036 25.0223 cv
162.411 25.0223 li
163.826 25.0223 164.973 26.1696 164.973 27.5848 cv
164.973 24.5848 li
164.973 23.1696 163.826 22.0223 162.411 22.0223 cv
cp
f
142.661 49.0913 mo
135.161 49.0913 li
133.745 49.0913 132.598 50.2385 132.598 51.6538 cv
132.598 54.6538 li
132.598 53.2385 133.745 52.0913 135.161 52.0913 cv
142.661 52.0913 li
144.076 52.0913 145.223 53.2385 145.223 54.6538 cv
145.223 51.6538 li
145.223 50.2385 144.076 49.0913 142.661 49.0913 cv
cp
f
215.941 31.0726 mo
212.015 31.0726 li
210.6 31.0726 209.453 32.2199 209.453 33.6351 cv
209.453 36.6351 li
209.453 35.2199 210.6 34.0726 212.015 34.0726 cv
215.941 34.0726 li
217.356 34.0726 218.503 35.2199 218.503 36.6351 cv
218.503 33.6351 li
218.503 32.2199 217.356 31.0726 215.941 31.0726 cv
cp
f
218.92 35.7976 mo
219.217 35.3351 219.656 34.9588 220.214 34.7618 cv
223.916 33.456 li
225.251 32.9852 226.714 33.6856 227.185 35.0202 cv
234.214 54.9477 li
234.627 54.3049 234.758 53.4906 234.484 52.7144 cv
227.185 32.0202 li
226.714 30.6856 225.251 29.9852 223.916 30.456 cv
220.214 31.7618 li
218.879 32.2326 218.179 33.6961 218.65 35.0308 cv
218.92 35.7976 li
cp
f
171.865 55.5791 mo
171.865 56.9943 173.012 58.1416 174.427 58.1416 cv
178.353 58.1416 li
179.768 58.1416 180.915 56.9943 180.915 55.5791 cv
180.915 35.6351 li
171.865 35.6351 li
171.865 55.5791 li
cp
.406775 .508873 .617395 .149355 cmyk
f
178.353 31.0726 mo
174.427 31.0726 li
173.012 31.0726 171.865 32.2199 171.865 33.6351 cv
171.865 35.6351 li
180.915 35.6351 li
180.915 33.6351 li
180.915 32.2199 179.768 31.0726 178.353 31.0726 cv
cp
.459113 .545952 .651026 .239872 cmyk
f
154.974 31.0726 mo
151.048 31.0726 li
149.633 31.0726 148.486 32.2199 148.486 33.6351 cv
148.486 35.6351 li
157.536 35.6351 li
157.536 33.6351 li
157.536 32.2199 156.389 31.0726 154.974 31.0726 cv
cp
f
148.486 55.5791 mo
148.486 56.9943 149.633 58.1416 151.048 58.1416 cv
154.974 58.1416 li
156.389 58.1416 157.536 56.9943 157.536 55.5791 cv
157.536 35.6351 li
148.486 35.6351 li
148.486 55.5791 li
cp
.406775 .508873 .617395 .149355 cmyk
f
202.915 33.6351 mo
202.915 32.2199 201.768 31.0726 200.353 31.0726 cv
196.427 31.0726 li
195.012 31.0726 193.865 32.2199 193.865 33.6351 cv
193.865 35.6351 li
202.915 35.6351 li
202.915 33.6351 li
cp
.459113 .545952 .651026 .239872 cmyk
f
193.865 35.6351 mo
193.865 55.5791 li
193.865 56.9943 195.012 58.1416 196.427 58.1416 cv
200.353 58.1416 li
201.768 58.1416 202.915 56.9943 202.915 55.5791 cv
202.915 35.6351 li
193.865 35.6351 li
cp
.406775 .508873 .617395 .149355 cmyk
f
175.777 28.5997 mo
174.11 28.5997 li
173.558 28.5997 173.11 28.152 173.11 27.5997 cv
173.11 27.0475 173.558 26.5997 174.11 26.5997 cv
175.777 26.5997 li
176.329 26.5997 176.777 27.0475 176.777 27.5997 cv
176.777 28.152 176.329 28.5997 175.777 28.5997 cv
cp
.353704 .445655 .551232 .0619516 cmyk
f
180.215 29.8971 mo
178.548 29.8971 li
177.995 29.8971 177.548 29.4493 177.548 28.8971 cv
177.548 28.3448 177.995 27.8971 178.548 27.8971 cv
180.215 27.8971 li
180.767 27.8971 181.215 28.3448 181.215 28.8971 cv
181.215 29.4493 180.767 29.8971 180.215 29.8971 cv
cp
f
177.223 41.1471 mo
175.556 41.1471 li
175.004 41.1471 174.556 40.6993 174.556 40.1471 cv
174.556 39.5948 175.004 39.1471 175.556 39.1471 cv
177.223 39.1471 li
177.776 39.1471 178.223 39.5948 178.223 40.1471 cv
178.223 40.6993 177.776 41.1471 177.223 41.1471 cv
cp
f
197.66 53.8854 mo
195.994 53.8854 li
195.442 53.8854 194.994 53.4376 194.994 52.8854 cv
194.994 52.3331 195.442 51.8854 195.994 51.8854 cv
197.66 51.8854 li
198.213 51.8854 198.66 52.3331 198.66 52.8854 cv
198.66 53.4376 198.213 53.8854 197.66 53.8854 cv
cp
f
229.598 53.8854 mo
227.932 53.8854 li
227.379 53.8854 226.932 53.4376 226.932 52.8854 cv
226.932 52.3331 227.379 51.8854 227.932 51.8854 cv
229.598 51.8854 li
230.151 51.8854 230.598 52.3331 230.598 52.8854 cv
230.598 53.4376 230.151 53.8854 229.598 53.8854 cv
cp
f
216.41 40.1471 mo
214.744 40.1471 li
214.192 40.1471 213.744 39.6993 213.744 39.1471 cv
213.744 38.5948 214.192 38.1471 214.744 38.1471 cv
216.41 38.1471 li
216.963 38.1471 217.41 38.5948 217.41 39.1471 cv
217.41 39.6993 216.963 40.1471 216.41 40.1471 cv
cp
f
153.723 53.2721 mo
152.056 53.2721 li
151.504 53.2721 151.056 52.8243 151.056 52.2721 cv
151.056 51.7198 151.504 51.2721 152.056 51.2721 cv
153.723 51.2721 li
154.276 51.2721 154.723 51.7198 154.723 52.2721 cv
154.723 52.8243 154.276 53.2721 153.723 53.2721 cv
cp
f
137.973 56.2721 mo
136.306 56.2721 li
135.754 56.2721 135.306 55.8243 135.306 55.2721 cv
135.306 54.7198 135.754 54.2721 136.306 54.2721 cv
137.973 54.2721 li
138.526 54.2721 138.973 54.7198 138.973 55.2721 cv
138.973 55.8243 138.526 56.2721 137.973 56.2721 cv
cp
f
137.973 56.2721 mo
136.306 56.2721 li
135.754 56.2721 135.306 55.8243 135.306 55.2721 cv
135.306 54.7198 135.754 54.2721 136.306 54.2721 cv
137.973 54.2721 li
138.526 54.2721 138.973 54.7198 138.973 55.2721 cv
138.973 55.8243 138.526 56.2721 137.973 56.2721 cv
cp
f
152.056 43.5221 mo
150.39 43.5221 li
149.838 43.5221 149.39 43.0743 149.39 42.5221 cv
149.39 41.9698 149.838 41.5221 150.39 41.5221 cv
152.056 41.5221 li
152.609 41.5221 153.056 41.9698 153.056 42.5221 cv
153.056 43.0743 152.609 43.5221 152.056 43.5221 cv
cp
f
147.994 29.4596 mo
146.327 29.4596 li
145.775 29.4596 145.327 29.0118 145.327 28.4596 cv
145.327 27.9073 145.775 27.4596 146.327 27.4596 cv
147.994 27.4596 li
148.546 27.4596 148.994 27.9073 148.994 28.4596 cv
148.994 29.0118 148.546 29.4596 147.994 29.4596 cv
cp
f
231.073 65.5223 mo
136.154 65.5223 li
134.19 65.5223 132.598 63.9303 132.598 61.9665 cv
132.598 61.9665 li
234.628 61.9665 li
234.628 61.9665 li
234.628 63.9303 233.036 65.5223 231.073 65.5223 cv
cp
.507591 .134707 1 .00463874 cmyk
f
67.4495 267.928 mo
67.4495 267.928 li
67.4495 269.689 68.8766 271.116 70.637 271.116 cv
98.012 271.116 li
99.7724 271.116 101.199 269.689 101.199 267.928 cv
101.199 266.168 99.7724 264.741 98.012 264.741 cv
89.387 264.741 li
87.6266 264.741 86.1995 263.314 86.1995 261.553 cv
86.1995 259.793 87.6266 258.366 89.387 258.366 cv
90.387 258.366 li
92.1474 258.366 93.5745 256.939 93.5745 255.178 cv
93.5745 253.418 92.1474 251.991 90.387 251.991 cv
67.012 251.991 li
65.2516 251.991 63.8245 253.418 63.8245 255.178 cv
63.8245 256.939 62.3974 258.366 60.637 258.366 cv
55.637 258.366 li
53.8766 258.366 52.4495 259.793 52.4495 261.553 cv
52.4495 263.314 53.8766 264.741 55.637 264.741 cv
64.262 264.741 li
66.0224 264.741 67.4495 266.168 67.4495 267.928 cv
cp
.254276 .154055 0 0 cmyk
f
75.255 267.283 mo
70.1906 267.283 li
68.5176 267.283 67.0667 266.126 66.6938 264.495 cv
63.1706 249.085 li
62.74 247.202 61.0647 245.866 59.1328 245.866 cv
21.044 245.866 li
19.1121 245.866 17.4367 247.202 17.0062 249.085 cv
6.81724 293.65 li
6.35305 295.681 7.89579 297.616 9.9785 297.616 cv
82.1901 297.616 li
75.255 267.283 li
cp
.0679637 .606958 1 .00204471 cmyk
f
92.8165 267.283 mo
75.255 267.283 li
82.1901 297.616 li
95.6836 297.616 li
97.7663 297.616 99.3091 295.681 98.8449 293.65 cv
92.8165 267.283 li
cp
.0948196 .706935 1 .0103151 cmyk
f
23.2968 280.491 mo
15.8838 280.491 li
15.8838 273.239 li
15.8838 271.192 17.5432 269.533 19.5903 269.533 cv
19.5903 269.533 li
21.6373 269.533 23.2968 271.192 23.2968 273.239 cv
23.2968 280.491 li
cp
.704799 .642542 .634211 .652674 cmyk
f
25.3828 257.658 mo
21.2108 257.658 li
21.2108 254.702 li
21.2108 253.55 22.1447 252.616 23.2968 252.616 cv
23.2968 252.616 li
24.4488 252.616 25.3828 253.55 25.3828 254.702 cv
25.3828 257.658 li
cp
f
36.3358 257.658 mo
32.1639 257.658 li
32.1639 254.702 li
32.1639 253.55 33.0978 252.616 34.2498 252.616 cv
34.2498 252.616 li
35.4019 252.616 36.3358 253.55 36.3358 254.702 cv
36.3358 257.658 li
cp
f
47.2889 257.658 mo
43.1169 257.658 li
43.1169 254.702 li
43.1169 253.55 44.0508 252.616 45.2029 252.616 cv
45.2029 252.616 li
46.355 252.616 47.2889 253.55 47.2889 254.702 cv
47.2889 257.658 li
cp
f
58.2419 257.658 mo
54.07 257.658 li
54.07 254.702 li
54.07 253.55 55.0039 252.616 56.156 252.616 cv
56.156 252.616 li
57.308 252.616 58.2419 253.55 58.2419 254.702 cv
58.2419 257.658 li
cp
f
35.4853 280.491 mo
28.0724 280.491 li
28.0724 273.239 li
28.0724 271.192 29.7318 269.533 31.7788 269.533 cv
31.7789 269.533 li
33.8259 269.533 35.4853 271.192 35.4853 273.239 cv
35.4853 280.491 li
cp
f
47.6739 280.491 mo
40.2609 280.491 li
40.2609 273.239 li
40.2609 271.192 41.9204 269.533 43.9674 269.533 cv
43.9674 269.533 li
46.0144 269.533 47.6739 271.192 47.6739 273.239 cv
47.6739 280.491 li
cp
f
59.8625 280.491 mo
52.4495 280.491 li
52.4495 273.239 li
52.4495 271.192 54.1089 269.533 56.156 269.533 cv
56.156 269.533 li
58.203 269.533 59.8625 271.192 59.8625 273.239 cv
59.8625 280.491 li
cp
f
72.051 280.491 mo
64.638 280.491 li
64.638 273.239 li
64.638 271.192 66.2975 269.533 68.3445 269.533 cv
68.3445 269.533 li
70.3916 269.533 72.051 271.192 72.051 273.239 cv
72.051 280.491 li
cp
f
18.9635 297.616 mo
11.5505 297.616 li
11.5505 290.364 li
11.5505 288.317 13.2099 286.658 15.257 286.658 cv
15.257 286.658 li
17.304 286.658 18.9635 288.317 18.9635 290.364 cv
18.9635 297.616 li
cp
f
30.731 297.616 mo
23.318 297.616 li
23.318 290.364 li
23.318 288.317 24.9774 286.658 27.0245 286.658 cv
27.0245 286.658 li
29.0715 286.658 30.731 288.317 30.731 290.364 cv
30.731 297.616 li
cp
f
42.4985 297.616 mo
35.0855 297.616 li
35.0855 290.364 li
35.0855 288.317 36.7449 286.658 38.792 286.658 cv
38.792 286.658 li
40.839 286.658 42.4985 288.317 42.4985 290.364 cv
42.4985 297.616 li
cp
f
54.266 297.616 mo
46.853 297.616 li
46.853 290.364 li
46.853 288.317 48.5124 286.658 50.5595 286.658 cv
50.5595 286.658 li
52.6065 286.658 54.266 288.317 54.266 290.364 cv
54.266 297.616 li
cp
f
66.0335 297.616 mo
58.6205 297.616 li
58.6205 290.364 li
58.6205 288.317 60.28 286.658 62.327 286.658 cv
62.327 286.658 li
64.374 286.658 66.0335 288.317 66.0335 290.364 cv
66.0335 297.616 li
cp
f
77.801 297.616 mo
70.388 297.616 li
70.388 290.364 li
70.388 288.317 72.0475 286.658 74.0945 286.658 cv
74.0945 286.658 li
76.1416 286.658 77.801 288.317 77.801 290.364 cv
77.801 297.616 li
cp
f
92.9677 297.616 mo
85.5547 297.616 li
85.5547 290.364 li
85.5547 288.317 87.2141 286.658 89.2612 286.658 cv
89.2612 286.658 li
91.3082 286.658 92.9677 288.317 92.9677 290.364 cv
92.9677 297.616 li
cp
f
88.551 280.491 mo
81.138 280.491 li
81.138 273.239 li
81.138 271.192 82.7975 269.533 84.8445 269.533 cv
84.8445 269.533 li
86.8916 269.533 88.551 271.192 88.551 273.239 cv
88.551 280.491 li
cp
f
95.9065 282.991 mo
9.8259 282.991 li
9.27365 282.991 8.8259 282.544 8.8259 281.991 cv
8.8259 281.438 9.27365 280.991 9.8259 280.991 cv
95.9065 280.991 li
96.4587 280.991 96.9065 281.438 96.9065 281.991 cv
96.9065 282.544 96.4587 282.991 95.9065 282.991 cv
cp
.00314336 .753872 1 .00015259 cmyk
f
95.9065 281.491 mo
9.8259 281.491 li
9.27365 281.491 8.8259 281.044 8.8259 280.491 cv
8.8259 279.938 9.27365 279.491 9.8259 279.491 cv
95.9065 279.491 li
96.4587 279.491 96.9065 279.938 96.9065 280.491 cv
96.9065 281.044 96.4587 281.491 95.9065 281.491 cv
cp
0 .5093 .930571 0 cmyk
f
66.4738 265.116 mo
13.9128 265.116 li
13.3606 265.116 12.9128 264.669 12.9128 264.116 cv
12.9128 263.563 13.3606 263.116 13.9128 263.116 cv
66.4738 263.116 li
67.0261 263.116 67.4738 263.563 67.4738 264.116 cv
67.4738 264.669 67.0261 265.116 66.4738 265.116 cv
cp
.00314336 .753872 1 .00015259 cmyk
f
66.4738 263.616 mo
13.9128 263.616 li
13.3606 263.616 12.9128 263.169 12.9128 262.616 cv
12.9128 262.063 13.3606 261.616 13.9128 261.616 cv
66.4738 261.616 li
67.0261 261.616 67.4738 262.063 67.4738 262.616 cv
67.4738 263.169 67.0261 263.616 66.4738 263.616 cv
cp
0 .5093 .930571 0 cmyk
f
145.322 107.449 mo
144.77 107.449 144.322 107.001 144.322 106.449 cv
144.322 93.34 li
144.322 92.7877 144.77 92.34 145.322 92.34 cv
145.875 92.34 146.322 92.7877 146.322 93.34 cv
146.322 106.449 li
146.322 107.001 145.875 107.449 145.322 107.449 cv
cp
.533043 .369696 .397864 .0384527 cmyk
f
123.923 196.986 mo
119.893 194.025 li
126.588 184.916 131.886 174.979 135.641 164.492 cv
142.826 144.418 142.824 124.689 142.822 107.282 cv
142.822 106.449 li
147.822 106.449 li
147.822 107.281 li
147.824 125.095 147.826 145.286 140.348 166.177 cv
136.43 177.121 130.903 187.486 123.923 196.986 cv
cp
f
166.722 196.986 mo
159.741 187.486 154.215 177.121 150.297 166.177 cv
142.819 145.286 142.82 125.095 142.822 107.281 cv
142.822 106.449 li
147.822 106.449 li
147.822 107.282 li
147.82 124.689 147.819 144.418 155.004 164.492 cv
158.759 174.979 164.057 184.916 170.752 194.025 cv
166.722 196.986 li
cp
f
147.824 109.205 mo
142.824 109.205 li
142.825 109.976 142.828 111.675 142.83 112.455 cv
147.831 112.455 li
147.828 111.675 147.824 109.976 147.824 109.205 cv
cp
.592798 .429999 .457954 .105287 cmyk
f
146.606 102.773 mo
144.039 102.773 li
143.1 102.773 142.339 103.534 142.339 104.473 cv
142.339 108.425 li
142.339 109.364 143.1 110.125 144.039 110.125 cv
146.606 110.125 li
147.545 110.125 148.306 109.364 148.306 108.425 cv
148.306 104.473 li
148.306 103.534 147.545 102.773 146.606 102.773 cv
cp
.442603 .273442 .315129 .00299077 cmyk
f
153.197 161.3 mo
137.447 161.3 li
136.343 161.3 135.447 160.405 135.447 159.3 cv
135.447 158.196 136.343 157.3 137.447 157.3 cv
153.197 157.3 li
154.302 157.3 155.197 158.196 155.197 159.3 cv
155.197 160.405 154.302 161.3 153.197 161.3 cv
cp
f
159.68 200.53 mo
159.68 200.53 li
159.68 199.871 159.146 199.337 158.487 199.337 cv
132.158 199.337 li
131.499 199.337 130.965 199.871 130.965 200.53 cv
130.965 201.189 131.499 201.723 132.158 201.723 cv
137.887 201.723 li
138.546 201.723 139.08 202.257 139.08 202.916 cv
139.08 202.916 li
139.08 203.575 138.546 204.109 137.887 204.109 cv
132.158 204.109 li
131.499 204.109 130.965 204.643 130.965 205.302 cv
130.965 205.961 131.499 206.495 132.158 206.495 cv
134.281 206.495 li
134.939 206.495 135.474 207.029 135.474 207.688 cv
135.474 207.688 li
135.474 208.347 136.008 208.881 136.666 208.881 cv
138.928 208.881 li
139.586 208.881 140.121 209.415 140.121 210.074 cv
140.121 210.733 140.655 211.267 141.313 211.267 cv
154.672 211.267 li
155.331 211.267 155.865 210.733 155.865 210.074 cv
155.865 209.415 155.331 208.881 154.672 208.881 cv
149.983 208.881 li
149.324 208.881 148.79 208.347 148.79 207.688 cv
148.79 207.688 li
148.79 207.029 149.324 206.495 149.983 206.495 cv
156.129 206.495 li
156.787 206.495 157.322 205.961 157.322 205.302 cv
157.322 204.643 156.787 204.109 156.129 204.109 cv
154.7 204.109 li
154.041 204.109 153.507 203.575 153.507 202.916 cv
153.507 202.916 li
153.507 202.257 154.041 201.723 154.7 201.723 cv
158.487 201.723 li
159.146 201.723 159.68 201.189 159.68 200.53 cv
cp
.712856 .280552 0 0 cmyk
f
131.437 208.881 mo
131.437 208.881 li
130.778 208.881 130.244 209.415 130.244 210.074 cv
130.244 210.733 130.778 211.267 131.437 211.267 cv
132.096 211.267 132.63 210.733 132.63 210.074 cv
132.63 209.415 132.096 208.881 131.437 208.881 cv
cp
f
160.526 204.109 mo
160.526 204.109 li
159.867 204.109 159.333 204.643 159.333 205.302 cv
159.333 205.302 li
159.333 205.961 159.867 206.495 160.526 206.495 cv
161.185 206.495 161.719 205.961 161.719 205.302 cv
161.719 205.302 li
161.719 204.643 161.185 204.109 160.526 204.109 cv
cp
f
167.704 196.593 mo
159.287 188.601 153.703 183.702 145.322 183.702 cv
136.942 183.702 131.358 188.601 122.941 196.593 cv
120.875 194.417 li
129.83 185.914 135.802 180.702 145.322 180.702 cv
154.842 180.702 160.815 185.914 169.77 194.417 cv
167.704 196.593 li
cp
.533043 .369696 .397864 .0384527 cmyk
f
133.878 200.378 mo
133.878 197.543 128.519 193.789 121.908 193.789 cv
115.297 193.789 109.937 197.543 109.937 200.378 cv
109.937 203.212 115.297 203.36 121.908 203.36 cv
128.519 203.36 133.878 203.212 133.878 200.378 cv
cp
.781888 .0321965 .854429 0 cmyk
f
156.767 200.378 mo
156.767 197.543 162.126 193.789 168.737 193.789 cv
175.348 193.789 180.707 197.543 180.707 200.378 cv
180.707 203.212 175.348 203.36 168.737 203.36 cv
162.126 203.36 156.767 203.212 156.767 200.378 cv
cp
f
160.861 179.611 mo
129.784 179.611 li
128.679 179.611 127.784 178.715 127.784 177.611 cv
127.784 176.506 128.679 175.611 129.784 175.611 cv
160.861 175.611 li
161.966 175.611 162.861 176.506 162.861 177.611 cv
162.861 178.715 161.966 179.611 160.861 179.611 cv
cp
.442603 .273442 .315129 .00299077 cmyk
f
133.878 200.378 mo
133.878 197.543 128.519 193.789 121.908 193.789 cv
115.297 193.789 109.937 197.543 109.937 200.378 cv
109.937 203.212 115.297 203.36 121.908 203.36 cv
128.519 203.36 133.878 203.212 133.878 200.378 cv
cp
.781888 .0321965 .854429 0 cmyk
f
121.908 193.789 mo
121.143 193.789 120.396 193.844 119.671 193.937 cv
125.212 194.65 129.405 197.871 129.405 200.378 cv
129.405 202.884 125.212 203.289 119.671 203.35 cv
120.396 203.358 121.143 203.36 121.908 203.36 cv
128.519 203.36 133.878 203.212 133.878 200.378 cv
133.878 197.543 128.519 193.789 121.908 193.789 cv
cp
.686061 0 .766995 0 cmyk
f
168.737 193.789 mo
169.502 193.789 170.248 193.844 170.974 193.937 cv
165.433 194.65 161.24 197.871 161.24 200.378 cv
161.24 202.884 165.433 203.289 170.974 203.35 cv
170.248 203.358 169.502 203.36 168.737 203.36 cv
162.126 203.36 156.767 203.212 156.767 200.378 cv
156.767 197.543 162.126 193.789 168.737 193.789 cv
cp
f
148.306 107.449 mo
142.339 107.449 li
141.787 107.449 141.339 107.001 141.339 106.449 cv
141.339 105.897 141.787 105.449 142.339 105.449 cv
148.306 105.449 li
148.858 105.449 149.306 105.897 149.306 106.449 cv
149.306 107.001 148.858 107.449 148.306 107.449 cv
cp
.293309 .149722 .198978 0 cmyk
f
153.93 161.3 mo
148.694 161.3 li
148.913 162.017 149.144 162.735 149.38 163.455 cv
154.655 163.455 li
154.407 162.736 154.161 162.018 153.93 161.3 cv
cp
.592798 .429999 .457954 .105287 cmyk
f
156.08 179.611 mo
156.442 180.331 156.801 181.052 157.178 181.765 cv
162.883 181.765 li
162.483 181.048 162.076 180.335 161.692 179.611 cv
156.08 179.611 li
cp
f
141.951 161.3 mo
136.715 161.3 li
136.484 162.018 136.238 162.736 135.99 163.455 cv
141.265 163.455 li
141.501 162.735 141.732 162.017 141.951 161.3 cv
cp
f
134.565 179.611 mo
128.953 179.611 li
128.569 180.335 128.162 181.048 127.762 181.765 cv
133.466 181.765 li
133.844 181.052 134.203 180.331 134.565 179.611 cv
cp
f
302.615 201.024 mo
302.615 145.15 li
283.276 145.15 li
283.276 201.024 li
302.615 201.024 li
cp
.203647 .556023 .933532 .0466621 cmyk
f
303.715 113.23 mo
282.177 113.23 li
282.177 108.501 li
303.715 108.501 li
303.715 113.23 li
cp
f
282.177 111.178 mo
282.177 113.23 li
303.715 113.23 li
303.715 111.178 li
282.177 111.178 li
cp
.244755 .626642 1 .1037 cmyk
f
302.615 147.281 mo
302.615 145.151 li
283.277 145.151 li
283.277 147.281 li
302.615 147.281 li
cp
f
282.177 140.668 mo
303.715 140.668 li
303.715 143.659 li
303.715 144.655 302.907 145.463 301.91 145.463 cv
283.982 145.463 li
282.985 145.463 282.177 144.655 282.177 143.659 cv
282.177 140.668 li
cp
.203647 .556023 .933532 .0466621 cmyk
f
303.715 142.786 mo
303.715 140.668 li
282.177 140.668 li
282.177 142.786 li
303.715 142.786 li
cp
.244755 .626642 1 .1037 cmyk
f
286.851 184.085 mo
286.574 184.085 286.351 183.861 286.351 183.585 cv
286.351 175.522 li
286.351 175.246 286.574 175.022 286.851 175.022 cv
287.127 175.022 287.351 175.246 287.351 175.522 cv
287.351 183.585 li
287.351 183.861 287.127 184.085 286.851 184.085 cv
cp
.297551 .685786 1 .210391 cmyk
f
290.914 184.085 mo
290.638 184.085 290.414 183.861 290.414 183.585 cv
290.414 178.126 li
290.414 177.85 290.638 177.626 290.914 177.626 cv
291.191 177.626 291.414 177.85 291.414 178.126 cv
291.414 183.585 li
291.414 183.861 291.191 184.085 290.914 184.085 cv
cp
f
294.978 184.085 mo
294.701 184.085 294.478 183.861 294.478 183.585 cv
294.478 178.126 li
294.478 177.85 294.701 177.626 294.978 177.626 cv
295.254 177.626 295.478 177.85 295.478 178.126 cv
295.478 183.585 li
295.478 183.861 295.254 184.085 294.978 184.085 cv
cp
f
299.042 184.085 mo
298.766 184.085 298.542 183.861 298.542 183.585 cv
298.542 175.522 li
298.542 175.246 298.766 175.022 299.042 175.022 cv
299.319 175.022 299.542 175.246 299.542 175.522 cv
299.542 183.585 li
299.542 183.861 299.319 184.085 299.042 184.085 cv
cp
f
286.851 172.251 mo
286.574 172.251 286.351 172.027 286.351 171.751 cv
286.351 163.689 li
286.351 163.412 286.574 163.189 286.851 163.189 cv
287.127 163.189 287.351 163.412 287.351 163.689 cv
287.351 171.751 li
287.351 172.027 287.127 172.251 286.851 172.251 cv
cp
f
290.914 172.251 mo
290.638 172.251 290.414 172.027 290.414 171.751 cv
290.414 166.293 li
290.414 166.016 290.638 165.793 290.914 165.793 cv
291.191 165.793 291.414 166.016 291.414 166.293 cv
291.414 171.751 li
291.414 172.027 291.191 172.251 290.914 172.251 cv
cp
f
294.978 172.251 mo
294.701 172.251 294.478 172.027 294.478 171.751 cv
294.478 166.293 li
294.478 166.016 294.701 165.793 294.978 165.793 cv
295.254 165.793 295.478 166.016 295.478 166.293 cv
295.478 171.751 li
295.478 172.027 295.254 172.251 294.978 172.251 cv
cp
f
299.042 172.251 mo
298.766 172.251 298.542 172.027 298.542 171.751 cv
298.542 163.689 li
298.542 163.412 298.766 163.189 299.042 163.189 cv
299.319 163.189 299.542 163.412 299.542 163.689 cv
299.542 171.751 li
299.542 172.027 299.319 172.251 299.042 172.251 cv
cp
f
286.851 160.418 mo
286.574 160.418 286.351 160.194 286.351 159.918 cv
286.351 151.855 li
286.351 151.579 286.574 151.355 286.851 151.355 cv
287.127 151.355 287.351 151.579 287.351 151.855 cv
287.351 159.918 li
287.351 160.194 287.127 160.418 286.851 160.418 cv
cp
f
290.914 160.418 mo
290.638 160.418 290.414 160.194 290.414 159.918 cv
290.414 154.46 li
290.414 154.183 290.638 153.96 290.914 153.96 cv
291.191 153.96 291.414 154.183 291.414 154.46 cv
291.414 159.918 li
291.414 160.194 291.191 160.418 290.914 160.418 cv
cp
f
294.978 160.418 mo
294.701 160.418 294.478 160.194 294.478 159.918 cv
294.478 154.46 li
294.478 154.183 294.701 153.96 294.978 153.96 cv
295.254 153.96 295.478 154.183 295.478 154.46 cv
295.478 159.918 li
295.478 160.194 295.254 160.418 294.978 160.418 cv
cp
f
299.042 160.418 mo
298.766 160.418 298.542 160.194 298.542 159.918 cv
298.542 151.855 li
298.542 151.579 298.766 151.355 299.042 151.355 cv
299.319 151.355 299.542 151.579 299.542 151.855 cv
299.542 159.918 li
299.542 160.194 299.319 160.418 299.042 160.418 cv
cp
f
302.311 112.88 mo
283.582 112.88 li
280.965 112.88 278.844 115.001 278.844 117.618 cv
278.844 136.347 li
278.844 138.963 280.965 141.084 283.582 141.084 cv
302.311 141.084 li
304.927 141.084 307.048 138.963 307.048 136.347 cv
307.048 117.618 li
307.048 115.001 304.927 112.88 302.311 112.88 cv
cp
.150362 .53521 .865995 .0144045 cmyk
f
303.715 126.982 mo
303.715 121.035 298.894 116.213 292.946 116.213 cv
286.999 116.213 282.177 121.035 282.177 126.982 cv
282.177 132.93 286.999 137.751 292.946 137.751 cv
298.894 137.751 303.715 132.93 303.715 126.982 cv
cp
.0567941 .103975 .322393 0 cmyk
f
293.447 121.001 mo
292.447 121.001 li
292.447 118.168 li
293.447 118.168 li
293.447 121.001 li
cp
.704799 .642542 .634211 .652674 cmyk
f
289.523 122.052 mo
288.107 119.599 li
288.972 119.099 li
290.388 121.552 li
289.523 122.052 li
cp
f
287.517 124.425 mo
285.063 123.008 li
285.563 122.142 li
288.017 123.559 li
287.517 124.425 li
cp
f
286.965 127.482 mo
284.132 127.482 li
284.132 126.482 li
286.965 126.482 li
286.965 127.482 li
cp
f
285.563 131.823 mo
285.063 130.957 li
287.517 129.54 li
288.017 130.406 li
285.563 131.823 li
cp
f
288.972 134.866 mo
288.107 134.366 li
289.523 131.912 li
290.388 132.412 li
288.972 134.866 li
cp
f
293.447 135.797 mo
292.447 135.797 li
292.447 132.963 li
293.447 132.963 li
293.447 135.797 li
cp
f
296.921 134.866 mo
295.504 132.412 li
296.369 131.912 li
297.786 134.366 li
296.921 134.866 li
cp
f
300.329 131.823 mo
297.876 130.406 li
298.376 129.54 li
300.829 130.957 li
300.329 131.823 li
cp
f
301.761 127.482 mo
298.927 127.482 li
298.927 126.482 li
301.761 126.482 li
301.761 127.482 li
cp
f
298.376 124.425 mo
297.876 123.559 li
300.329 122.142 li
300.829 123.008 li
298.376 124.425 li
cp
f
296.369 122.052 mo
295.504 121.552 li
296.921 119.099 li
297.786 119.599 li
296.369 122.052 li
cp
f
296.815 101.334 mo
289.077 101.334 li
289.077 96.9554 li
296.815 96.9554 li
296.815 101.334 li
cp
.203647 .556023 .933532 .0466621 cmyk
f
303.715 108.501 mo
282.177 108.501 li
289.077 101.334 li
296.815 101.334 li
303.715 108.501 li
cp
.603265 .437995 .336004 .0462654 cmyk
f
296.692 96.9554 mo
289.2 96.9554 li
291.6 92.1469 li
294.292 92.1469 li
296.692 96.9554 li
cp
f
293.68 92.1469 mo
292.212 92.1469 li
292.212 89.0038 li
292.212 88.6513 292.54 88.3657 292.946 88.3657 cv
293.351 88.3657 293.68 88.6513 293.68 89.0038 cv
293.68 92.1469 li
cp
.203647 .556023 .933532 .0466621 cmyk
f
302.615 160.918 mo
283.278 160.918 li
282.725 160.918 282.278 160.47 282.278 159.918 cv
282.278 159.365 282.725 158.918 283.278 158.918 cv
302.615 158.918 li
303.168 158.918 303.615 159.365 303.615 159.918 cv
303.615 160.47 303.168 160.918 302.615 160.918 cv
cp
0 .375525 1 0 cmyk
f
302.615 172.751 mo
283.278 172.751 li
282.725 172.751 282.278 172.303 282.278 171.751 cv
282.278 171.199 282.725 170.751 283.278 170.751 cv
302.615 170.751 li
303.168 170.751 303.615 171.199 303.615 171.751 cv
303.615 172.303 303.168 172.751 302.615 172.751 cv
cp
f
302.615 184.585 mo
283.278 184.585 li
282.725 184.585 282.278 184.137 282.278 183.585 cv
282.278 183.032 282.725 182.585 283.278 182.585 cv
302.615 182.585 li
303.168 182.585 303.615 183.032 303.615 183.585 cv
303.615 184.137 303.168 184.585 302.615 184.585 cv
cp
f
302.615 190.21 mo
283.278 190.21 li
282.725 190.21 282.278 189.762 282.278 189.21 cv
282.278 188.657 282.725 188.21 283.278 188.21 cv
302.615 188.21 li
303.168 188.21 303.615 188.657 303.615 189.21 cv
303.615 189.762 303.168 190.21 302.615 190.21 cv
cp
f
291.414 201.024 mo
290.414 201.024 li
290.414 199.49 li
291.414 199.49 li
291.414 201.024 li
cp
.297551 .685786 1 .210391 cmyk
f
290.914 199.99 mo
290.638 199.99 290.414 199.767 290.414 199.49 cv
290.414 195.565 li
290.414 195.289 290.638 195.065 290.914 195.065 cv
291.191 195.065 291.414 195.289 291.414 195.565 cv
291.414 199.49 li
291.414 199.767 291.191 199.99 290.914 199.99 cv
cp
f
295.478 201.024 mo
294.478 201.024 li
294.478 199.49 li
295.478 199.49 li
295.478 201.024 li
cp
f
294.978 199.99 mo
294.701 199.99 294.478 199.767 294.478 199.49 cv
294.478 195.565 li
294.478 195.289 294.701 195.065 294.978 195.065 cv
295.254 195.065 295.478 195.289 295.478 195.565 cv
295.478 199.49 li
295.478 199.767 295.254 199.99 294.978 199.99 cv
cp
f
299.542 201.024 mo
298.542 201.024 li
298.542 199.49 li
299.542 199.49 li
299.542 201.024 li
cp
f
299.042 199.99 mo
298.766 199.99 298.542 199.767 298.542 199.49 cv
298.542 195.565 li
298.542 195.289 298.766 195.065 299.042 195.065 cv
299.319 195.065 299.542 195.289 299.542 195.565 cv
299.542 199.49 li
299.542 199.767 299.319 199.99 299.042 199.99 cv
cp
f
287.351 201.024 mo
286.351 201.024 li
286.351 199.49 li
287.351 199.49 li
287.351 201.024 li
cp
f
286.851 199.99 mo
286.574 199.99 286.351 199.767 286.351 199.49 cv
286.351 195.565 li
286.351 195.289 286.574 195.065 286.851 195.065 cv
287.127 195.065 287.351 195.289 287.351 195.565 cv
287.351 199.49 li
287.351 199.767 287.127 199.99 286.851 199.99 cv
cp
f
327.614 298.975 mo
288.976 298.975 li
288.976 275.5 li
327.614 275.5 li
327.614 298.975 li
cp
.353704 .445655 .551232 .0619516 cmyk
f
293.993 275.5 mo
288.976 275.5 li
288.976 272.432 li
293.993 272.432 li
293.993 275.5 li
cp
.447272 .562036 .667903 .253819 cmyk
f
302.398 275.5 mo
297.381 275.5 li
297.381 272.432 li
302.398 272.432 li
302.398 275.5 li
cp
f
310.803 275.5 mo
305.786 275.5 li
305.786 272.432 li
310.803 272.432 li
310.803 275.5 li
cp
f
250.338 275.5 mo
245.32 275.5 li
245.32 272.432 li
250.338 272.432 li
250.338 275.5 li
cp
f
258.743 275.5 mo
253.725 275.5 li
253.725 272.432 li
258.743 272.432 li
258.743 275.5 li
cp
f
319.208 275.5 mo
314.191 275.5 li
314.191 272.432 li
319.208 272.432 li
319.208 275.5 li
cp
f
327.614 275.5 mo
322.596 275.5 li
322.596 272.432 li
327.614 272.432 li
327.614 275.5 li
cp
f
258.743 298.975 mo
241.955 298.975 li
241.955 275.5 li
258.743 275.5 li
258.743 298.975 li
cp
.353704 .445655 .551232 .0619516 cmyk
f
298.725 281.238 mo
296.036 281.238 li
295.76 281.238 295.536 281.014 295.536 280.738 cv
295.536 280.462 295.76 280.238 296.036 280.238 cv
298.725 280.238 li
299.001 280.238 299.225 280.462 299.225 280.738 cv
299.225 281.014 299.001 281.238 298.725 281.238 cv
cp
.447272 .562036 .667903 .253819 cmyk
f
256.86 283.349 mo
254.171 283.349 li
253.895 283.349 253.671 283.126 253.671 282.849 cv
253.671 282.573 253.895 282.349 254.171 282.349 cv
256.86 282.349 li
257.136 282.349 257.36 282.573 257.36 282.849 cv
257.36 283.126 257.136 283.349 256.86 283.349 cv
cp
f
253.192 284.906 mo
250.503 284.906 li
250.227 284.906 250.003 284.682 250.003 284.406 cv
250.003 284.13 250.227 283.906 250.503 283.906 cv
253.192 283.906 li
253.468 283.906 253.692 284.13 253.692 284.406 cv
253.692 284.682 253.468 284.906 253.192 284.906 cv
cp
f
308.84 288.556 mo
306.152 288.556 li
305.875 288.556 305.652 288.333 305.652 288.056 cv
305.652 287.78 305.875 287.556 306.152 287.556 cv
308.84 287.556 li
309.116 287.556 309.34 287.78 309.34 288.056 cv
309.34 288.333 309.116 288.556 308.84 288.556 cv
cp
f
318.738 293.42 mo
316.05 293.42 li
315.774 293.42 315.55 293.196 315.55 292.92 cv
315.55 292.643 315.774 292.42 316.05 292.42 cv
318.738 292.42 li
319.014 292.42 319.238 292.643 319.238 292.92 cv
319.238 293.196 319.014 293.42 318.738 293.42 cv
cp
f
320.733 291.868 mo
318.044 291.868 li
317.768 291.868 317.544 291.644 317.544 291.368 cv
317.544 291.091 317.768 290.868 318.044 290.868 cv
320.733 290.868 li
321.009 290.868 321.233 291.091 321.233 291.368 cv
321.233 291.644 321.009 291.868 320.733 291.868 cv
cp
f
326.448 287.396 mo
323.76 287.396 li
323.484 287.396 323.26 287.172 323.26 286.896 cv
323.26 286.62 323.484 286.396 323.76 286.396 cv
326.448 286.396 li
326.725 286.396 326.948 286.62 326.948 286.896 cv
326.948 287.172 326.725 287.396 326.448 287.396 cv
cp
f
318.044 281.782 mo
315.356 281.782 li
315.079 281.782 314.856 281.558 314.856 281.282 cv
314.856 281.005 315.079 280.782 315.356 280.782 cv
318.044 280.782 li
318.321 280.782 318.544 281.005 318.544 281.282 cv
318.544 281.558 318.321 281.782 318.044 281.782 cv
cp
f
307.13 286.459 mo
304.442 286.459 li
304.165 286.459 303.942 286.235 303.942 285.959 cv
303.942 285.682 304.165 285.459 304.442 285.459 cv
307.13 285.459 li
307.406 285.459 307.63 285.682 307.63 285.959 cv
307.63 286.235 307.406 286.459 307.13 286.459 cv
cp
f
299.516 294.671 mo
296.827 294.671 li
296.551 294.671 296.327 294.447 296.327 294.171 cv
296.327 293.894 296.551 293.671 296.827 293.671 cv
299.516 293.671 li
299.792 293.671 300.016 293.894 300.016 294.171 cv
300.016 294.447 299.792 294.671 299.516 294.671 cv
cp
f
246.141 281.573 mo
243.452 281.573 li
243.176 281.573 242.952 281.349 242.952 281.073 cv
242.952 280.797 243.176 280.573 243.452 280.573 cv
246.141 280.573 li
246.417 280.573 246.641 280.797 246.641 281.073 cv
246.641 281.349 246.417 281.573 246.141 281.573 cv
cp
f
258.203 294.099 mo
255.515 294.099 li
255.238 294.099 255.015 293.876 255.015 293.599 cv
255.015 293.323 255.238 293.099 255.515 293.099 cv
258.203 293.099 li
258.48 293.099 258.703 293.323 258.703 293.599 cv
258.703 293.876 258.48 294.099 258.203 294.099 cv
cp
f
292.203 290.991 mo
289.515 290.991 li
289.238 290.991 289.015 290.767 289.015 290.491 cv
289.015 290.214 289.238 289.991 289.515 289.991 cv
292.203 289.991 li
292.48 289.991 292.703 290.214 292.703 290.491 cv
292.703 290.767 292.48 290.991 292.203 290.991 cv
cp
f
248.008 295.868 mo
245.32 295.868 li
245.043 295.868 244.82 295.644 244.82 295.368 cv
244.82 295.091 245.043 294.868 245.32 294.868 cv
248.008 294.868 li
248.284 294.868 248.508 295.091 248.508 295.368 cv
248.508 295.644 248.284 295.868 248.008 295.868 cv
cp
f
366.252 275.5 mo
371.269 275.5 li
371.269 272.432 li
366.252 272.432 li
366.252 275.5 li
cp
f
357.846 275.5 mo
362.864 275.5 li
362.864 272.432 li
357.846 272.432 li
357.846 275.5 li
cp
f
357.846 298.975 mo
374.634 298.975 li
374.634 275.5 li
357.846 275.5 li
357.846 298.975 li
cp
.353704 .445655 .551232 .0619516 cmyk
f
362.418 283.349 mo
359.73 283.349 li
359.453 283.349 359.23 283.126 359.23 282.849 cv
359.23 282.573 359.453 282.349 359.73 282.349 cv
362.418 282.349 li
362.695 282.349 362.918 282.573 362.918 282.849 cv
362.918 283.126 362.695 283.349 362.418 283.349 cv
cp
.447272 .562036 .667903 .253819 cmyk
f
366.086 284.906 mo
363.398 284.906 li
363.121 284.906 362.898 284.682 362.898 284.406 cv
362.898 284.13 363.121 283.906 363.398 283.906 cv
366.086 283.906 li
366.363 283.906 366.586 284.13 366.586 284.406 cv
366.586 284.682 366.363 284.906 366.086 284.906 cv
cp
f
373.137 281.573 mo
370.448 281.573 li
370.172 281.573 369.948 281.349 369.948 281.073 cv
369.948 280.797 370.172 280.573 370.448 280.573 cv
373.137 280.573 li
373.413 280.573 373.637 280.797 373.637 281.073 cv
373.637 281.349 373.413 281.573 373.137 281.573 cv
cp
f
361.073 294.099 mo
358.385 294.099 li
358.109 294.099 357.885 293.876 357.885 293.599 cv
357.885 293.323 358.109 293.099 358.385 293.099 cv
361.073 293.099 li
361.35 293.099 361.573 293.323 361.573 293.599 cv
361.573 293.876 361.35 294.099 361.073 294.099 cv
cp
f
371.27 295.868 mo
368.581 295.868 li
368.305 295.868 368.081 295.644 368.081 295.368 cv
368.081 295.091 368.305 294.868 368.581 294.868 cv
371.27 294.868 li
371.546 294.868 371.77 295.091 371.77 295.368 cv
371.77 295.644 371.546 295.868 371.27 295.868 cv
cp
f
283.958 248.107 mo
263.76 248.107 li
266.121 241.418 li
281.597 241.418 li
283.958 248.107 li
cp
.216098 .367163 .478767 .00329595 cmyk
f
281.918 254.135 mo
265.8 254.135 li
265.8 248.107 li
281.918 248.107 li
281.918 254.135 li
cp
.353704 .445655 .551232 .0619516 cmyk
f
263.76 254.135 mo
258.743 254.135 li
258.743 251.067 li
263.76 251.067 li
263.76 254.135 li
cp
.447272 .562036 .667903 .253819 cmyk
f
272.165 254.135 mo
267.148 254.135 li
267.148 251.067 li
272.165 251.067 li
272.165 254.135 li
cp
f
280.571 254.135 mo
275.553 254.135 li
275.553 251.067 li
280.571 251.067 li
280.571 254.135 li
cp
f
288.976 254.135 mo
283.958 254.135 li
283.958 251.067 li
288.976 251.067 li
288.976 254.135 li
cp
f
288.976 257.992 mo
258.743 257.992 li
258.743 254.135 li
288.976 254.135 li
288.976 257.992 li
cp
f
288.976 275.5 mo
258.743 275.5 li
258.743 259.92 li
288.976 259.92 li
288.976 275.5 li
cp
.353704 .445655 .551232 .0619516 cmyk
f
289.941 298.975 mo
257.777 298.975 li
257.777 277.139 li
289.941 277.139 li
289.941 298.975 li
cp
.447272 .562036 .667903 .253819 cmyk
f
289.907 259.92 mo
257.811 259.92 li
257.285 259.92 256.859 259.494 256.859 258.969 cv
256.859 258.943 li
256.859 258.418 257.285 257.992 257.811 257.992 cv
289.907 257.992 li
290.433 257.992 290.859 258.418 290.859 258.943 cv
290.859 258.969 li
290.859 259.494 290.433 259.92 289.907 259.92 cv
cp
.216098 .367163 .478767 .00329595 cmyk
f
289.941 277.139 mo
257.777 277.139 li
258.743 275.5 li
288.976 275.5 li
289.941 277.139 li
cp
f
288.976 259.92 mo
258.743 259.92 li
258.743 261.074 li
288.976 261.074 li
288.976 259.92 li
cp
.406775 .508873 .617395 .149355 cmyk
f
273.859 265.671 mo
273.859 265.671 li
272.733 265.671 271.82 266.584 271.82 267.71 cv
271.82 271.516 li
275.899 271.516 li
275.899 267.71 li
275.899 266.584 274.985 265.671 273.859 265.671 cv
cp
.704799 .642542 .634211 .652674 cmyk
f
265.8 265.671 mo
265.8 265.671 li
264.674 265.671 263.76 266.584 263.76 267.71 cv
263.76 271.516 li
267.839 271.516 li
267.839 267.71 li
267.839 266.584 266.926 265.671 265.8 265.671 cv
cp
f
281.918 265.671 mo
281.918 265.671 li
283.044 265.671 283.958 266.584 283.958 267.71 cv
283.958 271.516 li
279.879 271.516 li
279.879 267.71 li
279.879 266.584 280.792 265.671 281.918 265.671 cv
cp
f
262.925 282.819 mo
260.237 282.819 li
259.96 282.819 259.737 282.595 259.737 282.319 cv
259.737 282.043 259.96 281.819 260.237 281.819 cv
262.925 281.819 li
263.201 281.819 263.425 282.043 263.425 282.319 cv
263.425 282.595 263.201 282.819 262.925 282.819 cv
cp
.353704 .445655 .551232 .0619516 cmyk
f
267.839 290.097 mo
265.151 290.097 li
264.874 290.097 264.651 289.874 264.651 289.597 cv
264.651 289.321 264.874 289.097 265.151 289.097 cv
267.839 289.097 li
268.115 289.097 268.339 289.321 268.339 289.597 cv
268.339 289.874 268.115 290.097 267.839 290.097 cv
cp
f
273.164 280.261 mo
270.476 280.261 li
270.199 280.261 269.976 280.038 269.976 279.761 cv
269.976 279.485 270.199 279.261 270.476 279.261 cv
273.164 279.261 li
273.441 279.261 273.664 279.485 273.664 279.761 cv
273.664 280.038 273.441 280.261 273.164 280.261 cv
cp
f
272.482 257.18 mo
269.793 257.18 li
269.517 257.18 269.293 256.957 269.293 256.68 cv
269.293 256.404 269.517 256.18 269.793 256.18 cv
272.482 256.18 li
272.758 256.18 272.982 256.404 272.982 256.68 cv
272.982 256.957 272.758 257.18 272.482 257.18 cv
cp
f
265.105 292.983 mo
262.416 292.983 li
262.14 292.983 261.916 292.759 261.916 292.483 cv
261.916 292.207 262.14 291.983 262.416 291.983 cv
265.105 291.983 li
265.381 291.983 265.605 292.207 265.605 292.483 cv
265.605 292.759 265.381 292.983 265.105 292.983 cv
cp
f
262.596 296.851 mo
259.907 296.851 li
259.631 296.851 259.407 296.628 259.407 296.351 cv
259.407 296.075 259.631 295.851 259.907 295.851 cv
262.596 295.851 li
262.872 295.851 263.096 296.075 263.096 296.351 cv
263.096 296.628 262.872 296.851 262.596 296.851 cv
cp
f
273.825 295.868 mo
271.137 295.868 li
270.861 295.868 270.637 295.644 270.637 295.368 cv
270.637 295.091 270.861 294.868 271.137 294.868 cv
273.825 294.868 li
274.102 294.868 274.325 295.091 274.325 295.368 cv
274.325 295.644 274.102 295.868 273.825 295.868 cv
cp
f
263.94 274.007 mo
261.251 274.007 li
260.975 274.007 260.751 273.784 260.751 273.507 cv
260.751 273.231 260.975 273.007 261.251 273.007 cv
263.94 273.007 li
264.216 273.007 264.44 273.231 264.44 273.507 cv
264.44 273.784 264.216 274.007 263.94 274.007 cv
cp
.447272 .562036 .667903 .253819 cmyk
f
270.528 264.524 mo
267.839 264.524 li
267.563 264.524 267.339 264.3 267.339 264.024 cv
267.339 263.748 267.563 263.524 267.839 263.524 cv
270.528 263.524 li
270.804 263.524 271.028 263.748 271.028 264.024 cv
271.028 264.3 270.804 264.524 270.528 264.524 cv
cp
f
282.824 274.828 mo
280.136 274.828 li
279.86 274.828 279.636 274.604 279.636 274.328 cv
279.636 274.051 279.86 273.828 280.136 273.828 cv
282.824 273.828 li
283.101 273.828 283.324 274.051 283.324 274.328 cv
283.324 274.604 283.101 274.828 282.824 274.828 cv
cp
f
286.365 263.872 mo
283.677 263.872 li
283.401 263.872 283.177 263.648 283.177 263.372 cv
283.177 263.095 283.401 262.872 283.677 262.872 cv
286.365 262.872 li
286.642 262.872 286.865 263.095 286.865 263.372 cv
286.865 263.648 286.642 263.872 286.365 263.872 cv
cp
f
281.039 283.934 mo
278.351 283.934 li
278.074 283.934 277.851 283.711 277.851 283.434 cv
277.851 283.158 278.074 282.934 278.351 282.934 cv
281.039 282.934 li
281.316 282.934 281.539 283.158 281.539 283.434 cv
281.539 283.711 281.316 283.934 281.039 283.934 cv
cp
.353704 .445655 .551232 .0619516 cmyk
f
286.646 280.589 mo
283.957 280.589 li
283.681 280.589 283.457 280.366 283.457 280.089 cv
283.457 279.813 283.681 279.589 283.957 279.589 cv
286.646 279.589 li
286.922 279.589 287.146 279.813 287.146 280.089 cv
287.146 280.366 286.922 280.589 286.646 280.589 cv
cp
f
287.71 256.563 mo
285.022 256.563 li
284.745 256.563 284.522 256.339 284.522 256.063 cv
284.522 255.787 284.745 255.563 285.022 255.563 cv
287.71 255.563 li
287.987 255.563 288.21 255.787 288.21 256.063 cv
288.21 256.339 287.987 256.563 287.71 256.563 cv
cp
f
282.383 291.868 mo
279.695 291.868 li
279.418 291.868 279.195 291.644 279.195 291.368 cv
279.195 291.091 279.418 290.868 279.695 290.868 cv
282.383 290.868 li
282.659 290.868 282.883 291.091 282.883 291.368 cv
282.883 291.644 282.659 291.868 282.383 291.868 cv
cp
f
287.236 295.868 mo
284.547 295.868 li
284.271 295.868 284.047 295.644 284.047 295.368 cv
284.047 295.091 284.271 294.868 284.547 294.868 cv
287.236 294.868 li
287.512 294.868 287.736 295.091 287.736 295.368 cv
287.736 295.644 287.512 295.868 287.236 295.868 cv
cp
f
332.631 248.107 mo
352.829 248.107 li
350.468 241.418 li
334.992 241.418 li
332.631 248.107 li
cp
.216098 .367163 .478767 .00329595 cmyk
f
334.671 254.135 mo
350.789 254.135 li
350.789 248.107 li
334.671 248.107 li
334.671 254.135 li
cp
.353704 .445655 .551232 .0619516 cmyk
f
352.829 254.135 mo
357.846 254.135 li
357.846 251.067 li
352.829 251.067 li
352.829 254.135 li
cp
.447272 .562036 .667903 .253819 cmyk
f
344.424 254.135 mo
349.441 254.135 li
349.441 251.067 li
344.424 251.067 li
344.424 254.135 li
cp
f
336.019 254.135 mo
341.036 254.135 li
341.036 251.067 li
336.019 251.067 li
336.019 254.135 li
cp
f
327.614 254.135 mo
332.631 254.135 li
332.631 251.067 li
327.614 251.067 li
327.614 254.135 li
cp
f
327.614 257.992 mo
357.846 257.992 li
357.846 254.135 li
327.614 254.135 li
327.614 257.992 li
cp
f
327.614 275.5 mo
357.846 275.5 li
357.846 259.92 li
327.614 259.92 li
327.614 275.5 li
cp
.353704 .445655 .551232 .0619516 cmyk
f
326.648 298.975 mo
358.812 298.975 li
358.812 277.139 li
326.648 277.139 li
326.648 298.975 li
cp
.447272 .562036 .667903 .253819 cmyk
f
326.682 259.92 mo
358.778 259.92 li
359.304 259.92 359.73 259.494 359.73 258.969 cv
359.73 258.943 li
359.73 258.418 359.304 257.992 358.778 257.992 cv
326.682 257.992 li
326.156 257.992 325.73 258.418 325.73 258.943 cv
325.73 258.969 li
325.73 259.494 326.156 259.92 326.682 259.92 cv
cp
.216098 .367163 .478767 .00329595 cmyk
f
326.648 277.139 mo
358.812 277.139 li
357.846 275.5 li
327.614 275.5 li
326.648 277.139 li
cp
f
327.614 259.92 mo
357.846 259.92 li
357.846 261.074 li
327.614 261.074 li
327.614 259.92 li
cp
.406775 .508873 .617395 .149355 cmyk
f
342.73 265.671 mo
342.73 265.671 li
343.856 265.671 344.77 266.584 344.77 267.71 cv
344.77 271.516 li
340.691 271.516 li
340.691 267.71 li
340.691 266.584 341.604 265.671 342.73 265.671 cv
cp
.704799 .642542 .634211 .652674 cmyk
f
350.789 265.671 mo
350.789 265.671 li
351.915 265.671 352.829 266.584 352.829 267.71 cv
352.829 271.516 li
348.75 271.516 li
348.75 267.71 li
348.75 266.584 349.663 265.671 350.789 265.671 cv
cp
f
334.671 265.671 mo
334.671 265.671 li
333.545 265.671 332.631 266.584 332.631 267.71 cv
332.631 271.516 li
336.71 271.516 li
336.71 267.71 li
336.71 266.584 335.797 265.671 334.671 265.671 cv
cp
f
356.353 282.819 mo
353.664 282.819 li
353.388 282.819 353.164 282.595 353.164 282.319 cv
353.164 282.043 353.388 281.819 353.664 281.819 cv
356.353 281.819 li
356.629 281.819 356.853 282.043 356.853 282.319 cv
356.853 282.595 356.629 282.819 356.353 282.819 cv
cp
.353704 .445655 .551232 .0619516 cmyk
f
351.438 290.097 mo
348.749 290.097 li
348.473 290.097 348.249 289.874 348.249 289.597 cv
348.249 289.321 348.473 289.097 348.749 289.097 cv
351.438 289.097 li
351.714 289.097 351.938 289.321 351.938 289.597 cv
351.938 289.874 351.714 290.097 351.438 290.097 cv
cp
f
346.113 280.261 mo
343.425 280.261 li
343.149 280.261 342.925 280.038 342.925 279.761 cv
342.925 279.485 343.149 279.261 343.425 279.261 cv
346.113 279.261 li
346.39 279.261 346.613 279.485 346.613 279.761 cv
346.613 280.038 346.39 280.261 346.113 280.261 cv
cp
f
346.796 257.18 mo
344.108 257.18 li
343.831 257.18 343.608 256.957 343.608 256.68 cv
343.608 256.404 343.831 256.18 344.108 256.18 cv
346.796 256.18 li
347.072 256.18 347.296 256.404 347.296 256.68 cv
347.296 256.957 347.072 257.18 346.796 257.18 cv
cp
f
354.173 292.983 mo
351.485 292.983 li
351.208 292.983 350.985 292.759 350.985 292.483 cv
350.985 292.207 351.208 291.983 351.485 291.983 cv
354.173 291.983 li
354.449 291.983 354.673 292.207 354.673 292.483 cv
354.673 292.759 354.449 292.983 354.173 292.983 cv
cp
f
356.682 296.851 mo
353.993 296.851 li
353.717 296.851 353.493 296.628 353.493 296.351 cv
353.493 296.075 353.717 295.851 353.993 295.851 cv
356.682 295.851 li
356.958 295.851 357.182 296.075 357.182 296.351 cv
357.182 296.628 356.958 296.851 356.682 296.851 cv
cp
f
345.451 295.868 mo
342.763 295.868 li
342.487 295.868 342.263 295.644 342.263 295.368 cv
342.263 295.091 342.487 294.868 342.763 294.868 cv
345.451 294.868 li
345.728 294.868 345.951 295.091 345.951 295.368 cv
345.951 295.644 345.728 295.868 345.451 295.868 cv
cp
f
355.337 274.007 mo
352.649 274.007 li
352.372 274.007 352.149 273.784 352.149 273.507 cv
352.149 273.231 352.372 273.007 352.649 273.007 cv
355.337 273.007 li
355.613 273.007 355.837 273.231 355.837 273.507 cv
355.837 273.784 355.613 274.007 355.337 274.007 cv
cp
.447272 .562036 .667903 .253819 cmyk
f
348.749 264.524 mo
346.061 264.524 li
345.784 264.524 345.561 264.3 345.561 264.024 cv
345.561 263.748 345.784 263.524 346.061 263.524 cv
348.749 263.524 li
349.026 263.524 349.249 263.748 349.249 264.024 cv
349.249 264.3 349.026 264.524 348.749 264.524 cv
cp
f
336.452 274.828 mo
333.764 274.828 li
333.488 274.828 333.264 274.604 333.264 274.328 cv
333.264 274.051 333.488 273.828 333.764 273.828 cv
336.452 273.828 li
336.729 273.828 336.952 274.051 336.952 274.328 cv
336.952 274.604 336.729 274.828 336.452 274.828 cv
cp
f
332.911 263.872 mo
330.223 263.872 li
329.947 263.872 329.723 263.648 329.723 263.372 cv
329.723 263.095 329.947 262.872 330.223 262.872 cv
332.911 262.872 li
333.188 262.872 333.411 263.095 333.411 263.372 cv
333.411 263.648 333.188 263.872 332.911 263.872 cv
cp
f
338.238 283.934 mo
335.55 283.934 li
335.274 283.934 335.05 283.711 335.05 283.434 cv
335.05 283.158 335.274 282.934 335.55 282.934 cv
338.238 282.934 li
338.515 282.934 338.738 283.158 338.738 283.434 cv
338.738 283.711 338.515 283.934 338.238 283.934 cv
cp
.353704 .445655 .551232 .0619516 cmyk
f
332.631 280.589 mo
329.943 280.589 li
329.666 280.589 329.443 280.366 329.443 280.089 cv
329.443 279.813 329.666 279.589 329.943 279.589 cv
332.631 279.589 li
332.907 279.589 333.131 279.813 333.131 280.089 cv
333.131 280.366 332.907 280.589 332.631 280.589 cv
cp
f
331.568 256.563 mo
328.879 256.563 li
328.603 256.563 328.379 256.339 328.379 256.063 cv
328.379 255.787 328.603 255.563 328.879 255.563 cv
331.568 255.563 li
331.844 255.563 332.068 255.787 332.068 256.063 cv
332.068 256.339 331.844 256.563 331.568 256.563 cv
cp
f
336.015 285.246 mo
333.326 285.246 li
333.05 285.246 332.826 285.022 332.826 284.746 cv
332.826 284.469 333.05 284.246 333.326 284.246 cv
336.015 284.246 li
336.291 284.246 336.515 284.469 336.515 284.746 cv
336.515 285.022 336.291 285.246 336.015 285.246 cv
cp
f
336.895 291.868 mo
334.206 291.868 li
333.93 291.868 333.706 291.644 333.706 291.368 cv
333.706 291.091 333.93 290.868 334.206 290.868 cv
336.895 290.868 li
337.171 290.868 337.395 291.091 337.395 291.368 cv
337.395 291.644 337.171 291.868 336.895 291.868 cv
cp
f
332.042 295.868 mo
329.354 295.868 li
329.077 295.868 328.854 295.644 328.854 295.368 cv
328.854 295.091 329.077 294.868 329.354 294.868 cv
332.042 294.868 li
332.319 294.868 332.542 295.091 332.542 295.368 cv
332.542 295.644 332.319 295.868 332.042 295.868 cv
cp
f
54.8072 200.972 mo
28.6178 200.972 li
28.6178 174.783 li
54.8072 174.783 li
54.8072 200.972 li
cp
.0368658 .854948 .825345 .002533 cmyk
f
32.4553 184.158 mo
28.6179 184.158 li
28.6179 183.158 li
32.4553 183.158 li
32.4553 184.158 li
cp
0 0 0 0 cmyk
f
54.8073 184.158 mo
50.9694 184.158 li
50.9694 183.158 li
54.8073 183.158 li
54.8073 184.158 li
cp
f
54.8072 174.843 mo
28.6178 174.843 li
28.6178 151.739 li
54.8072 151.739 li
54.8072 174.843 li
cp
.17734 .909911 .95346 .0707713 cmyk
f
48.5387 151.739 mo
34.8863 151.739 li
34.8863 133.449 li
48.5387 133.449 li
48.5387 151.739 li
cp
.0368658 .854948 .825345 .002533 cmyk
f
48.5387 131.59 mo
34.8863 131.59 li
34.8863 123.033 li
48.5387 123.033 li
48.5387 131.59 li
cp
f
48.5387 123.033 mo
34.8863 123.033 li
41.7125 101.866 li
48.5387 123.033 li
cp
.800809 .134524 .593255 .00762951 cmyk
f
28.6379 200.972 mo
2.44852 200.972 li
2.44852 179.902 li
28.6379 179.902 li
28.6379 200.972 li
cp
.0368658 .854948 .825345 .002533 cmyk
f
80.9765 200.972 mo
54.7871 200.972 li
54.7871 179.902 li
80.9765 179.902 li
80.9765 200.972 li
cp
f
44.0423 184.363 mo
39.3827 184.363 li
39.3827 179.703 li
44.0423 179.703 li
44.0423 184.363 li
cp
0 0 0 0 cmyk
f
36.3721 191.519 mo
28.6178 191.519 li
28.6178 200.972 li
36.3721 200.972 li
36.3721 191.519 li
cp
f
54.8072 191.519 mo
47.0179 191.519 li
47.0179 200.972 li
54.8072 200.972 li
54.8072 191.519 li
cp
f
31.9604 174.783 mo
28.6178 174.783 li
28.6178 170.627 li
30.2891 172.705 li
31.9604 170.627 li
31.9604 174.783 li
cp
.0368658 .854948 .825345 .002533 cmyk
f
37.6721 174.783 mo
34.3295 174.783 li
34.3295 170.627 li
36.0008 172.705 li
37.6721 170.627 li
37.6721 174.783 li
cp
f
43.3838 174.783 mo
40.0412 174.783 li
40.0412 170.627 li
41.7125 172.705 li
43.3838 170.627 li
43.3838 174.783 li
cp
f
49.0955 174.783 mo
45.7529 174.783 li
45.7529 170.627 li
47.4242 172.705 li
49.0955 170.627 li
49.0955 174.783 li
cp
f
54.8072 174.783 mo
51.4646 174.783 li
51.4646 170.627 li
53.1359 172.705 li
54.8072 170.627 li
54.8072 174.783 li
cp
f
5.79105 179.902 mo
2.44852 179.902 li
2.44852 175.746 li
4.11978 177.824 li
5.79105 175.746 li
5.79105 179.902 li
cp
f
11.5027 179.902 mo
8.16022 179.902 li
8.16022 175.746 li
9.83149 177.824 li
11.5027 175.746 li
11.5027 179.902 li
cp
f
17.2145 179.902 mo
13.8719 179.902 li
13.8719 175.746 li
15.5432 177.824 li
17.2145 175.746 li
17.2145 179.902 li
cp
f
22.9262 179.902 mo
19.5836 179.902 li
19.5836 175.746 li
21.2549 177.824 li
22.9262 175.746 li
22.9262 179.902 li
cp
f
28.6379 179.902 mo
25.2953 179.902 li
25.2953 175.746 li
26.9666 177.824 li
28.6379 175.746 li
28.6379 179.902 li
cp
.17734 .909911 .95346 .0707713 cmyk
f
77.6339 179.902 mo
80.9765 179.902 li
80.9765 175.746 li
79.3052 177.824 li
77.6339 175.746 li
77.6339 179.902 li
cp
.0368658 .854948 .825345 .002533 cmyk
f
71.9222 179.902 mo
75.2648 179.902 li
75.2648 175.746 li
73.5935 177.824 li
71.9222 175.746 li
71.9222 179.902 li
cp
f
66.2105 179.902 mo
69.5531 179.902 li
69.5531 175.746 li
67.8818 177.824 li
66.2105 175.746 li
66.2105 179.902 li
cp
f
60.4988 179.902 mo
63.8413 179.902 li
63.8413 175.746 li
62.1701 177.824 li
60.4988 175.746 li
60.4988 179.902 li
cp
f
54.7871 179.902 mo
58.1296 179.902 li
58.1296 175.746 li
56.4584 177.824 li
54.7871 175.746 li
54.7871 179.902 li
cp
.17734 .909911 .95346 .0707713 cmyk
f
24.7887 179.902 mo
28.6178 179.902 li
28.6178 200.972 li
24.7887 200.972 li
24.7887 179.902 li
cp
f
54.8072 179.902 mo
58.6363 179.902 li
58.6363 200.972 li
54.8072 200.972 li
54.8072 179.902 li
cp
f
71.4531 184.653 mo
69.365 188.829 li
69.1906 189.177 69.4442 189.588 69.8341 189.588 cv
74.0103 189.588 li
74.4002 189.588 74.6538 189.177 74.4794 188.829 cv
72.3913 184.653 li
72.1981 184.266 71.6464 184.266 71.4531 184.653 cv
cp
.781796 .398199 .799832 .324132 cmyk
f
67.8759 194.122 mo
67.7015 194.471 67.9551 194.881 68.345 194.881 cv
75.4994 194.881 li
75.8893 194.881 76.1429 194.471 75.9686 194.122 cv
74.1636 190.512 li
69.6808 190.512 li
67.8759 194.122 li
cp
f
70.143 189.588 mo
69.6808 190.512 li
74.1636 190.512 li
73.7014 189.588 li
70.143 189.588 li
cp
.782559 .439216 .814023 .427222 cmyk
f
66.1298 200.213 mo
65.9554 200.562 66.209 200.972 66.5989 200.972 cv
77.2456 200.972 li
77.6354 200.972 77.889 200.562 77.7147 200.213 cv
75.511 195.806 li
68.3335 195.806 li
66.1298 200.213 li
cp
.781796 .398199 .799832 .324132 cmyk
f
68.7958 194.881 mo
68.3335 195.806 li
75.511 195.806 li
75.0487 194.881 li
68.7958 194.881 li
cp
.782559 .439216 .814023 .427222 cmyk
f
73.1924 199.206 mo
71.0078 194.837 li
71.0723 194.737 li
71.5498 193.964 71.5928 193.018 71.1865 192.206 cv
70.0102 189.853 li
69.6808 190.512 li
67.8759 194.122 li
67.7015 194.471 67.9551 194.881 68.345 194.881 cv
68.7958 194.881 li
68.3335 195.806 li
66.1298 200.213 li
65.9554 200.562 66.209 200.972 66.5989 200.972 cv
73.3831 200.972 li
73.5249 200.385 73.4725 199.763 73.1924 199.206 cv
cp
f
64.2076 182.217 mo
61.8079 187.016 li
61.6075 187.417 61.899 187.889 62.347 187.889 cv
67.1465 187.889 li
67.5946 187.889 67.886 187.417 67.6856 187.016 cv
65.2859 182.217 li
65.0638 181.773 64.4298 181.773 64.2076 182.217 cv
cp
.781796 .398199 .799832 .324132 cmyk
f
60.0966 193.1 mo
59.8962 193.501 60.1876 193.972 60.6357 193.972 cv
68.8578 193.972 li
69.3059 193.972 69.5973 193.501 69.3969 193.1 cv
67.3227 188.951 li
62.1708 188.951 li
60.0966 193.1 li
cp
f
62.7021 187.889 mo
62.1708 188.951 li
67.3227 188.951 li
66.7914 187.889 li
62.7021 187.889 li
cp
.782559 .439216 .814023 .427222 cmyk
f
58.0899 200.1 mo
57.8895 200.501 58.1809 200.972 58.629 200.972 cv
70.8645 200.972 li
71.3126 200.972 71.604 200.501 71.4037 200.1 cv
68.8711 195.035 li
60.6225 195.035 li
58.0899 200.1 li
cp
.781796 .398199 .799832 .324132 cmyk
f
61.1537 193.972 mo
60.6225 195.035 li
68.8711 195.035 li
68.3398 193.972 li
61.1537 193.972 li
cp
.782559 .439216 .814023 .427222 cmyk
f
51.3757 186.22 mo
32.049 186.22 li
32.049 185.22 li
51.3757 185.22 li
51.3757 186.22 li
cp
0 0 0 0 cmyk
f
51.3757 168.241 mo
32.049 168.241 li
32.049 167.241 li
51.3757 167.241 li
51.3757 168.241 li
cp
f
32.4602 200.972 mo
31.4602 200.972 li
31.4602 174.783 li
32.4602 174.783 li
32.4602 200.972 li
cp
.22443 .975097 1 .154208 cmyk
f
32.4602 174.783 mo
31.4602 174.783 li
31.4602 151.739 li
32.4602 151.739 li
32.4602 174.783 li
cp
.0368658 .854948 .825345 .002533 cmyk
f
51.9646 174.783 mo
50.9646 174.783 li
50.9646 151.739 li
51.9646 151.739 li
51.9646 174.783 li
cp
f
51.9646 200.972 mo
50.9646 200.972 li
50.9646 174.783 li
51.9646 174.783 li
51.9646 200.972 li
cp
.22443 .975097 1 .154208 cmyk
f
31.9604 145.095 mo
28.6178 145.095 li
28.6178 151.739 li
31.9604 151.739 li
31.9604 145.095 li
cp
.0368658 .854948 .825345 .002533 cmyk
f
41.7129 138.519 mo
38.876 138.519 36.5674 140.827 36.5674 143.665 cv
36.5674 146.502 38.876 148.81 41.7129 148.81 cv
44.5498 148.81 46.8584 146.502 46.8584 143.665 cv
46.8584 140.827 44.5498 138.519 41.7129 138.519 cv
cp
.17734 .909911 .95346 .0707713 cmyk
f
36.5575 148.397 mo
33.215 148.397 li
33.215 151.739 li
36.5575 151.739 li
36.5575 148.397 li
cp
f
30.2891 138.452 mo
28.6178 145.095 li
31.9604 145.095 li
30.2891 138.452 li
cp
.151431 .118074 .28574 0 cmyk
f
41.7125 148.906 mo
41.7125 148.906 36.5529 152.147 36.5529 154.996 cv
36.5529 162.656 li
46.8721 162.656 li
46.8721 154.996 li
46.8721 152.147 41.7125 148.906 41.7125 148.906 cv
cp
.0368658 .854948 .825345 .002533 cmyk
f
37.0529 162.156 mo
46.3723 162.156 li
46.3723 154.996 li
46.3723 153.013 43.2263 150.509 41.7126 149.502 cv
40.1989 150.509 37.0529 153.013 37.0529 154.996 cv
37.0529 162.156 li
cp
47.3723 163.156 mo
36.0529 163.156 li
36.0529 154.996 li
36.0529 151.906 41.2263 148.621 41.4465 148.483 cv
41.7126 148.316 li
41.9787 148.483 li
42.1989 148.621 47.3723 151.906 47.3723 154.996 cv
47.3723 163.156 li
cp
0 0 0 0 cmyk
f
34.8863 141.753 mo
33.215 148.397 li
36.5575 148.397 li
34.8863 141.753 li
cp
.151431 .118074 .28574 0 cmyk
f
46.8675 148.397 mo
50.21 148.397 li
50.21 151.739 li
46.8675 151.739 li
46.8675 148.397 li
cp
.17734 .909911 .95346 .0707713 cmyk
f
48.5387 141.753 mo
50.21 148.397 li
46.8675 148.397 li
48.5387 141.753 li
cp
.151431 .118074 .28574 0 cmyk
f
53.1359 138.452 mo
51.4646 145.095 li
54.8072 145.095 li
53.1359 138.452 li
cp
f
54.8072 145.095 mo
51.4646 145.095 li
51.4646 151.739 li
54.8072 151.739 li
54.8072 145.095 li
cp
.0368658 .854948 .825345 .002533 cmyk
f
46.3581 141.664 mo
46.3581 139.099 44.2782 137.019 41.7125 137.019 cv
39.1468 137.019 37.0669 139.099 37.0669 141.664 cv
37.0669 144.23 39.1468 146.31 41.7125 146.31 cv
44.2782 146.31 46.3581 144.23 46.3581 141.664 cv
cp
.704799 .642542 .634211 .652674 cmyk
f
41.7126 137.519 mo
39.427 137.519 37.5671 139.379 37.5671 141.665 cv
37.5671 143.95 39.427 145.81 41.7126 145.81 cv
43.9983 145.81 45.8581 143.95 45.8581 141.665 cv
45.8581 139.379 43.9983 137.519 41.7126 137.519 cv
cp
41.7126 146.81 mo
38.8752 146.81 36.5671 144.502 36.5671 141.665 cv
36.5671 138.827 38.8752 136.519 41.7126 136.519 cv
44.55 136.519 46.8581 138.827 46.8581 141.665 cv
46.8581 144.502 44.55 146.81 41.7126 146.81 cv
cp
.0135195 .0729992 .697078 0 cmyk
f
42.5134 143.172 mo
41.2126 141.872 li
41.2126 138.595 li
42.2126 138.595 li
42.2126 141.458 li
43.2204 142.465 li
42.5134 143.172 li
cp
f
41.7125 153.033 mo
41.7125 153.033 li
41.1947 153.033 40.775 153.453 40.775 153.97 cv
40.775 155.408 li
42.65 155.408 li
42.65 153.97 li
42.65 153.453 42.2303 153.033 41.7125 153.033 cv
cp
.704799 .642542 .634211 .652674 cmyk
f
35.4807 180.845 mo
35.4807 180.845 li
34.9629 180.845 34.5432 181.265 34.5432 181.783 cv
34.5432 183.22 li
36.4182 183.22 li
36.4182 181.783 li
36.4182 181.265 35.9985 180.845 35.4807 180.845 cv
cp
f
47.9443 180.845 mo
47.9443 180.845 li
48.4621 180.845 48.8818 181.265 48.8818 181.783 cv
48.8818 183.22 li
47.0068 183.22 li
47.0068 181.783 li
47.0068 181.265 47.4265 180.845 47.9443 180.845 cv
cp
f
47.7679 200.972 mo
35.6571 200.972 li
35.6571 192.255 li
35.6571 188.911 38.3682 186.199 41.7125 186.199 cv
41.7125 186.199 li
45.0568 186.199 47.7679 188.911 47.7679 192.255 cv
47.7679 200.972 li
cp
.150362 .53521 .865995 .0144045 cmyk
f
48.5387 125.658 mo
34.8863 125.658 li
34.8863 123.033 li
48.5387 123.033 li
48.5387 125.658 li
cp
.17734 .909911 .95346 .0707713 cmyk
f
37.6572 198.972 mo
37.6572 192.254 li
37.6572 190.019 39.4766 188.2 41.7129 188.2 cv
43.9482 188.2 45.7676 190.019 45.7676 192.254 cv
45.7676 198.972 li
37.6572 198.972 li
cp
.203647 .556023 .933532 .0466621 cmyk
f
39.1221 123.033 mo
39.1221 131.59 li
39.1221 123.033 li
cp
.0368658 .854948 .825345 .002533 cmyk
f
39.6223 131.59 mo
38.6223 131.59 li
38.6223 123.033 li
39.6223 123.033 li
39.6223 131.59 li
cp
0 0 0 0 cmyk
f
44.3029 123.033 mo
44.3029 131.59 li
44.3029 123.033 li
cp
.0368658 .854948 .825345 .002533 cmyk
f
44.8029 131.59 mo
43.8029 131.59 li
43.8029 123.033 li
44.8029 123.033 li
44.8029 131.59 li
cp
0 0 0 0 cmyk
f
48.5387 133.449 mo
34.8863 133.449 li
34.8863 131.59 li
48.5387 131.59 li
48.5387 133.449 li
cp
.151431 .118074 .28574 0 cmyk
f
39.1221 123.033 mo
41.7125 101.866 li
39.1221 123.033 li
cp
.0368658 .854948 .825345 .002533 cmyk
f
39.6184 123.093 mo
38.6262 122.972 li
41.2165 101.806 li
42.2087 101.927 li
39.6184 123.093 li
cp
0 0 0 0 cmyk
f
43.8069 123.093 mo
41.2165 101.927 li
42.2087 101.806 li
44.799 122.972 li
43.8069 123.093 li
cp
f
41.7125 93.5908 mo
43.0631 97.7477 li
47.434 97.7477 li
43.8979 100.317 li
45.2486 104.474 li
41.7125 101.905 li
38.1764 104.474 li
39.5271 100.317 li
35.991 97.7477 li
40.3618 97.7477 li
41.7125 93.5908 li
cp
.005066 .18265 .997284 0 cmyk
f
166.153 273.586 mo
166.153 273.586 li
166.153 274.245 166.687 274.779 167.346 274.779 cv
193.674 274.779 li
194.333 274.779 194.867 274.245 194.867 273.586 cv
194.867 272.927 194.333 272.393 193.674 272.393 cv
187.945 272.393 li
187.286 272.393 186.752 271.859 186.752 271.2 cv
186.752 271.2 li
186.752 270.541 187.286 270.007 187.945 270.007 cv
193.674 270.007 li
194.333 270.007 194.867 269.473 194.867 268.814 cv
194.867 268.155 194.333 267.621 193.674 267.621 cv
191.552 267.621 li
190.893 267.621 190.359 267.087 190.359 266.428 cv
190.359 266.428 li
190.359 265.769 189.825 265.235 189.166 265.235 cv
186.905 265.235 li
186.246 265.235 185.712 264.701 185.712 264.042 cv
185.712 263.383 185.178 262.849 184.519 262.849 cv
171.16 262.849 li
170.502 262.849 169.967 263.383 169.967 264.042 cv
169.967 264.701 170.502 265.235 171.16 265.235 cv
175.849 265.235 li
176.508 265.235 177.042 265.769 177.042 266.428 cv
177.042 266.428 li
177.042 267.087 176.508 267.621 175.849 267.621 cv
169.704 267.621 li
169.045 267.621 168.511 268.155 168.511 268.814 cv
168.511 269.473 169.045 270.007 169.704 270.007 cv
171.133 270.007 li
171.792 270.007 172.326 270.541 172.326 271.2 cv
172.326 271.2 li
172.326 271.859 171.792 272.393 171.133 272.393 cv
167.346 272.393 li
166.687 272.393 166.153 272.927 166.153 273.586 cv
cp
.19379 .0108949 .00979629 0 cmyk
f
139.213 263.39 mo
139.213 263.39 li
139.213 264.049 139.748 264.583 140.406 264.583 cv
166.735 264.583 li
167.394 264.583 167.928 264.049 167.928 263.39 cv
167.928 262.732 167.394 262.198 166.735 262.198 cv
161.006 262.198 li
160.347 262.198 159.813 261.663 159.813 261.005 cv
159.813 261.005 li
159.813 260.346 160.347 259.812 161.006 259.812 cv
166.735 259.812 li
167.394 259.812 167.928 259.277 167.928 258.619 cv
167.928 257.96 167.394 257.426 166.735 257.426 cv
164.613 257.426 li
163.954 257.426 163.42 256.892 163.42 256.233 cv
163.42 256.233 li
163.42 255.574 162.886 255.04 162.227 255.04 cv
159.966 255.04 li
159.307 255.04 158.773 254.506 158.773 253.847 cv
158.773 253.188 158.238 252.654 157.58 252.654 cv
144.221 252.654 li
143.562 252.654 143.028 253.188 143.028 253.847 cv
143.028 254.506 143.562 255.04 144.221 255.04 cv
148.91 255.04 li
149.569 255.04 150.103 255.574 150.103 256.233 cv
150.103 256.233 li
150.103 256.892 149.569 257.426 148.91 257.426 cv
142.765 257.426 li
142.106 257.426 141.572 257.96 141.572 258.619 cv
141.572 259.277 142.106 259.812 142.765 259.812 cv
144.193 259.812 li
144.852 259.812 145.386 260.346 145.386 261.005 cv
145.386 261.005 li
145.386 261.663 144.852 262.198 144.193 262.198 cv
140.406 262.198 li
139.748 262.198 139.213 262.732 139.213 263.39 cv
cp
f
170.582 261.601 mo
162.649 261.601 li
161.403 261.601 160.496 260.418 160.82 259.215 cv
161.801 255.566 li
162.023 254.739 162.773 254.164 163.63 254.164 cv
169.601 254.164 li
170.457 254.164 171.208 254.739 171.43 255.566 cv
172.411 259.215 li
172.735 260.418 171.828 261.601 170.582 261.601 cv
cp
.381842 .411292 .653284 .0839551 cmyk
f
174.323 259.98 mo
168.797 258.629 li
168.596 258.58 168.391 258.548 168.185 258.533 cv
159.477 257.893 li
157.852 257.773 156.338 258.724 155.74 260.239 cv
148.938 277.461 li
148.732 277.982 148.412 278.45 148 278.83 cv
144.984 281.614 li
144.43 282.125 144.044 282.793 143.877 283.528 cv
141.016 296.167 li
140.488 298.497 142.26 300.714 144.649 300.714 cv
198.773 300.714 li
200.477 300.714 201.963 299.559 202.383 297.908 cv
203.437 293.766 li
203.827 292.235 203.208 290.625 201.894 289.748 cv
201.894 289.748 li
201.63 289.572 190.892 277.574 190.892 277.574 cv
190.481 277.112 189.961 276.76 189.379 276.549 cv
182.583 274.088 li
181.539 273.71 180.719 272.886 180.345 271.841 cv
176.946 262.343 li
176.524 261.165 175.539 260.277 174.323 259.98 cv
cp
.225834 0 .770535 0 cmyk
f
169.22 254.164 mo
164.011 254.164 li
163.011 236.72 li
166.615 235.72 li
170.22 236.72 li
169.22 254.164 li
cp
.322911 .346227 .599207 .0234684 cmyk
f
174.99 236.72 mo
158.24 236.72 li
160.24 239.803 li
166.616 240.803 li
172.99 239.803 li
174.99 236.72 li
cp
f
158.47 237.677 mo
158.47 237.931 158.264 238.137 158.01 238.137 cv
156.386 238.137 li
155.995 238.137 155.678 237.819 155.678 237.428 cv
155.678 237.037 155.995 236.72 156.386 236.72 cv
158.47 236.72 li
158.47 237.677 li
cp
f
175.221 238.137 mo
176.845 238.137 li
177.236 238.137 177.553 237.819 177.553 237.428 cv
177.553 237.037 177.236 236.72 176.845 236.72 cv
174.761 236.72 li
174.761 237.677 li
174.761 237.931 174.967 238.137 175.221 238.137 cv
cp
f
167.928 236.72 mo
165.303 236.72 li
165.303 233.366 li
165.303 232.641 165.891 232.053 166.615 232.053 cv
167.34 232.053 167.928 232.641 167.928 233.366 cv
167.928 236.72 li
cp
f
201.498 293.276 mo
201.499 293.273 li
201.68 292.565 201.392 291.817 200.784 291.412 cv
200.509 291.228 200.309 291.096 189.399 278.905 cv
189.209 278.691 188.967 278.527 188.698 278.431 cv
181.903 275.969 li
180.293 275.386 179.038 274.127 178.462 272.515 cv
175.063 263.017 li
174.866 262.471 174.413 262.061 173.848 261.923 cv
168.315 260.571 li
168.226 260.549 168.135 260.535 168.038 260.527 cv
159.331 259.888 li
159.203 259.883 li
158.491 259.883 157.862 260.31 157.6 260.974 cv
150.799 278.194 li
150.484 278.991 149.986 279.719 149.357 280.3 cv
146.341 283.083 li
146.083 283.322 145.905 283.629 145.828 283.97 cv
142.967 296.608 li
142.909 296.865 142.91 297.126 142.967 297.373 cv
142.967 300.31 li
143.469 300.565 144.037 300.714 144.649 300.714 cv
198.773 300.714 li
199.865 300.714 200.863 300.236 201.553 299.461 cv
201.553 293.273 li
201.498 293.276 li
cp
.507591 .134707 1 .00463874 cmyk
f
160.754 276.636 mo
156.664 276.636 li
156.388 276.636 156.164 276.413 156.164 276.136 cv
156.164 275.86 156.388 275.636 156.664 275.636 cv
160.754 275.636 li
161.03 275.636 161.254 275.86 161.254 276.136 cv
161.254 276.413 161.03 276.636 160.754 276.636 cv
cp
.406989 .0413214 .995636 0 cmyk
f
162.798 279.798 mo
158.709 279.798 li
158.433 279.798 158.209 279.575 158.209 279.298 cv
158.209 279.022 158.433 278.798 158.709 278.798 cv
162.798 278.798 li
163.074 278.798 163.298 279.022 163.298 279.298 cv
163.298 279.575 163.074 279.798 162.798 279.798 cv
cp
f
170.704 267.011 mo
166.615 267.011 li
166.339 267.011 166.115 266.788 166.115 266.511 cv
166.115 266.235 166.339 266.011 166.615 266.011 cv
170.704 266.011 li
170.981 266.011 171.204 266.235 171.204 266.511 cv
171.204 266.788 170.981 267.011 170.704 267.011 cv
cp
f
187.459 290.886 mo
183.37 290.886 li
183.093 290.886 182.87 290.663 182.87 290.386 cv
182.87 290.11 183.093 289.886 183.37 289.886 cv
187.459 289.886 li
187.736 289.886 187.959 290.11 187.959 290.386 cv
187.959 290.663 187.736 290.886 187.459 290.886 cv
cp
f
155.615 294.761 mo
151.526 294.761 li
151.25 294.761 151.026 294.538 151.026 294.261 cv
151.026 293.985 151.25 293.761 151.526 293.761 cv
155.615 293.761 li
155.892 293.761 156.115 293.985 156.115 294.261 cv
156.115 294.538 155.892 294.761 155.615 294.761 cv
cp
f
191.548 293.636 mo
187.459 293.636 li
187.183 293.636 186.959 293.413 186.959 293.136 cv
186.959 292.86 187.183 292.636 187.459 292.636 cv
191.548 292.636 li
191.824 292.636 192.048 292.86 192.048 293.136 cv
192.048 293.413 191.824 293.636 191.548 293.636 cv
cp
f
209.385 110.419 mo
208.917 110.419 208.538 110.04 208.538 109.573 cv
208.538 96.8713 li
208.538 96.4037 208.917 96.0245 209.385 96.0245 cv
209.853 96.0245 210.231 96.4037 210.231 96.8713 cv
210.231 109.573 li
210.231 110.04 209.853 110.419 209.385 110.419 cv
cp
.730617 0 .516258 0 cmyk
f
212.137 90.5735 mo
212.137 92.0934 210.905 93.3255 209.385 93.3255 cv
207.865 93.3255 206.633 92.0934 206.633 90.5735 cv
206.633 89.0536 210.681 86.5249 210.681 86.5249 cv
210.681 86.5249 212.137 89.0536 212.137 90.5735 cv
cp
.005066 .18265 .997284 0 cmyk
f
211.125 96.8713 mo
207.645 96.8713 li
207.147 96.8713 206.718 96.523 206.616 96.0365 cv
206.212 94.1172 li
206.074 93.4637 206.573 92.8492 207.241 92.8492 cv
211.529 92.8492 li
212.197 92.8492 212.695 93.4637 212.558 94.1172 cv
212.154 96.0365 li
212.051 96.523 211.622 96.8713 211.125 96.8713 cv
cp
.637354 0 .413428 0 cmyk
f
211.588 103.222 mo
216.794 114.089 li
221.451 122.133 li
217.499 126.085 li
212.983 115.712 li
209.683 103.222 li
211.588 103.222 li
cp
.730617 0 .516258 0 cmyk
f
227.484 109.308 mo
226.484 109.308 li
226.484 104.492 li
227.484 104.492 li
227.484 109.308 li
cp
f
224.808 109.756 mo
223.257 105.197 li
224.204 104.875 li
225.755 109.434 li
224.808 109.756 li
cp
f
223.365 110.721 mo
220.429 106.903 li
221.222 106.294 li
224.158 110.111 li
223.365 110.721 li
cp
f
222.31 112.098 mo
218.301 109.429 li
218.856 108.597 li
222.864 111.266 li
222.31 112.098 li
cp
f
229.16 109.756 mo
228.213 109.434 li
229.764 104.875 li
230.711 105.197 li
229.16 109.756 li
cp
f
230.603 110.721 mo
229.81 110.111 li
232.746 106.294 li
233.539 106.903 li
230.603 110.721 li
cp
f
231.658 112.098 mo
231.104 111.266 li
235.113 108.597 li
235.667 109.429 li
231.658 112.098 li
cp
f
226.984 122.08 mo
226.984 122.08 li
224.919 122.08 223.244 120.406 223.244 118.34 cv
223.244 114.6 li
230.724 114.6 li
230.724 118.34 li
230.724 120.406 229.05 122.08 226.984 122.08 cv
cp
.637354 0 .413428 0 cmyk
f
230.724 114.6 mo
223.244 114.6 li
221.551 110.861 li
221.551 110.861 223.879 109.308 226.984 109.308 cv
230.089 109.308 232.417 110.861 232.417 110.861 cv
230.724 114.6 li
cp
.730617 0 .516258 0 cmyk
f
235.952 153.075 mo
219.758 153.075 li
219.758 173.292 li
235.952 173.292 li
235.952 153.075 li
cp
f
237.65 175.938 mo
218.059 175.938 li
216.951 175.938 216.053 176.836 216.053 177.944 cv
216.053 180.277 li
239.656 180.277 li
239.656 177.944 li
239.656 176.836 238.758 175.938 237.65 175.938 cv
cp
.353704 .445655 .551232 .0619516 cmyk
f
216.932 143.985 mo
216.512 137.375 li
218.093 132.495 li
215.841 127.214 li
221.451 122.133 li
232.069 124.44 li
234.029 124.866 235.499 126.496 235.72 128.49 cv
238.124 150.126 li
238.197 152.297 236.898 154.28 234.879 155.082 cv
220.459 160.806 li
219.283 161.289 217.98 160.474 217.9 159.206 cv
216.932 143.985 li
cp
.800809 .134524 .593255 .00762951 cmyk
f
242.261 195.096 mo
213.448 195.096 li
212.315 195.096 211.396 196.014 211.396 197.148 cv
211.396 199.435 li
244.314 199.435 li
244.314 197.148 li
244.314 196.014 243.395 195.096 242.261 195.096 cv
cp
.447272 .562036 .667903 .253819 cmyk
f
250.047 199.435 mo
205.662 199.435 li
204.464 199.435 203.493 200.407 203.493 201.605 cv
203.493 201.605 li
203.493 202.803 204.464 203.775 205.662 203.775 cv
250.047 203.775 li
251.245 203.775 252.217 202.803 252.217 201.605 cv
252.217 201.605 li
252.217 200.407 251.245 199.435 250.047 199.435 cv
cp
.216098 .367163 .478767 .00329595 cmyk
f
239.656 182.447 mo
216.053 182.447 li
214.359 195.096 li
241.35 195.096 li
239.656 182.447 li
cp
.353704 .445655 .551232 .0619516 cmyk
f
241.817 180.277 mo
213.892 180.277 li
213.293 180.277 212.807 180.763 212.807 181.362 cv
212.807 181.961 213.293 182.447 213.892 182.447 cv
241.817 182.447 li
242.417 182.447 242.902 181.961 242.902 181.362 cv
242.902 180.763 242.417 180.277 241.817 180.277 cv
cp
.216098 .367163 .478767 .00329595 cmyk
f
227.855 173.792 mo
227.578 173.792 227.355 173.568 227.355 173.292 cv
227.355 167.966 li
227.355 167.69 227.578 167.466 227.855 167.466 cv
228.131 167.466 228.355 167.69 228.355 167.966 cv
228.355 173.292 li
228.355 173.568 228.131 173.792 227.855 173.792 cv
cp
.800809 .134524 .593255 .00762951 cmyk
f
227.855 166.341 mo
227.578 166.341 227.355 166.117 227.355 165.841 cv
227.355 163.183 li
227.355 162.907 227.578 162.683 227.855 162.683 cv
228.131 162.683 228.355 162.907 228.355 163.183 cv
228.355 165.841 li
228.355 166.117 228.131 166.341 227.855 166.341 cv
cp
f
225.35 173.792 mo
225.073 173.792 224.85 173.568 224.85 173.292 cv
224.85 169.465 li
224.85 169.189 225.073 168.965 225.35 168.965 cv
225.626 168.965 225.85 169.189 225.85 169.465 cv
225.85 173.292 li
225.85 173.568 225.626 173.792 225.35 173.792 cv
cp
f
222.845 173.792 mo
222.569 173.792 222.345 173.568 222.345 173.292 cv
222.345 169.575 li
222.345 169.299 222.569 169.075 222.845 169.075 cv
223.121 169.075 223.345 169.299 223.345 169.575 cv
223.345 173.292 li
223.345 173.568 223.121 173.792 222.845 173.792 cv
cp
f
222.845 167.544 mo
222.569 167.544 222.345 167.32 222.345 167.044 cv
222.345 166.872 li
222.345 166.595 222.569 166.372 222.845 166.372 cv
223.121 166.372 223.345 166.595 223.345 166.872 cv
223.345 167.044 li
223.345 167.32 223.121 167.544 222.845 167.544 cv
cp
f
230.36 173.792 mo
230.083 173.792 229.86 173.568 229.86 173.292 cv
229.86 166.278 li
229.86 166.002 230.083 165.778 230.36 165.778 cv
230.636 165.778 230.86 166.002 230.86 166.278 cv
230.86 173.292 li
230.86 173.568 230.636 173.792 230.36 173.792 cv
cp
f
232.864 173.792 mo
232.588 173.792 232.364 173.568 232.364 173.292 cv
232.364 163.528 li
232.364 163.252 232.588 163.028 232.864 163.028 cv
233.141 163.028 233.364 163.252 233.364 163.528 cv
233.364 173.292 li
233.364 173.568 233.141 173.792 232.864 173.792 cv
cp
f
232.864 162.09 mo
232.588 162.09 232.364 161.867 232.364 161.59 cv
232.364 161.403 li
232.364 161.127 232.588 160.903 232.864 160.903 cv
233.141 160.903 233.364 161.127 233.364 161.403 cv
233.364 161.59 li
233.364 161.867 233.141 162.09 232.864 162.09 cv
cp
f
236.51 175.938 mo
219.199 175.938 li
218.469 175.938 217.876 175.345 217.876 174.615 cv
217.876 173.884 218.469 173.292 219.199 173.292 cv
236.51 173.292 li
237.241 173.292 237.833 173.884 237.833 174.615 cv
237.833 175.345 237.241 175.938 236.51 175.938 cv
cp
.637354 0 .413428 0 cmyk
f
210.401 105.762 mo
208.369 105.762 li
207.527 105.762 206.844 105.08 206.844 104.238 cv
206.844 102.206 li
206.844 101.364 207.527 100.682 208.369 100.682 cv
210.401 100.682 li
211.243 100.682 211.925 101.364 211.925 102.206 cv
211.925 104.238 li
211.925 105.08 211.243 105.762 210.401 105.762 cv
cp
.800809 .134524 .593255 .00762951 cmyk
f
216.943 144.662 mo
216.766 144.662 216.594 144.567 216.503 144.4 cv
216.371 144.158 216.461 143.855 216.703 143.722 cv
219.252 142.337 221.533 140.572 223.484 138.479 cv
225.432 136.388 227.028 133.993 228.228 131.362 cv
228.343 131.11 228.643 131 228.89 131.114 cv
229.142 131.229 229.252 131.525 229.138 131.777 cv
227.893 134.506 226.237 136.991 224.216 139.16 cv
222.192 141.333 219.825 143.163 217.182 144.601 cv
216.943 144.662 li
cp
.637354 0 .413428 0 cmyk
f
217.163 148.109 mo
216.976 148.109 216.796 148.003 216.711 147.822 cv
216.593 147.573 216.7 147.275 216.949 147.157 cv
220.073 145.681 222.828 143.676 225.136 141.199 cv
227.084 139.108 228.68 136.713 229.88 134.082 cv
229.995 133.831 230.296 133.72 230.542 133.835 cv
230.794 133.949 230.905 134.246 230.79 134.497 cv
229.545 137.227 227.889 139.711 225.868 141.88 cv
223.473 144.451 220.616 146.531 217.377 148.061 cv
217.163 148.109 li
cp
f
217.375 151.46 mo
217.178 151.46 216.99 151.342 216.912 151.148 cv
216.808 150.892 216.932 150.601 217.188 150.497 cv
220.892 148.994 224.122 146.781 226.788 143.919 cv
228.737 141.828 230.332 139.434 231.532 136.802 cv
231.648 136.551 231.947 136.442 232.195 136.555 cv
232.447 136.67 232.557 136.966 232.443 137.217 cv
231.197 139.947 229.541 142.431 227.521 144.601 cv
224.754 147.57 221.404 149.866 217.563 151.423 cv
217.375 151.46 li
cp
f
239.805 145.034 mo
233.792 142.99 li
237.972 130.697 li
243.985 132.742 li
239.805 145.034 li
cp
.730617 0 .516258 0 cmyk
f
242.208 141.678 mo
240.284 141.023 li
239.487 140.752 239.06 139.887 239.331 139.09 cv
239.986 137.166 li
240.257 136.369 241.122 135.942 241.919 136.213 cv
243.843 136.868 li
244.64 137.139 245.067 138.004 244.796 138.801 cv
244.141 140.725 li
243.87 141.522 243.005 141.949 242.208 141.678 cv
cp
.800809 .134524 .593255 .00762951 cmyk
f
221.359 190.195 mo
219.017 190.195 li
219.017 185.157 li
219.017 184.511 219.541 183.986 220.188 183.986 cv
220.835 183.986 221.359 184.511 221.359 185.157 cv
221.359 190.195 li
cp
.447272 .562036 .667903 .253819 cmyk
f
225.192 190.195 mo
222.85 190.195 li
222.85 185.157 li
222.85 184.511 223.375 183.986 224.021 183.986 cv
224.668 183.986 225.192 184.511 225.192 185.157 cv
225.192 190.195 li
cp
f
229.026 190.195 mo
226.684 190.195 li
226.684 185.157 li
226.684 184.511 227.208 183.986 227.855 183.986 cv
227.855 183.986 li
228.501 183.986 229.026 184.511 229.026 185.157 cv
229.026 190.195 li
cp
f
232.859 190.195 mo
230.517 190.195 li
230.517 185.157 li
230.517 184.511 231.041 183.986 231.688 183.986 cv
232.335 183.986 232.859 184.511 232.859 185.157 cv
232.859 190.195 li
cp
f
236.692 190.195 mo
234.35 190.195 li
234.35 185.157 li
234.35 184.511 234.875 183.986 235.521 183.986 cv
236.168 183.986 236.692 184.511 236.692 185.157 cv
236.692 190.195 li
cp
f
370.881 187.345 mo
340.794 185.323 li
339.711 201.428 li
369.934 201.428 li
370.881 187.345 li
cp
.110933 .0791333 .0738231 0 cmyk
f
368.683 100.137 mo
367.979 100.089 367.37 100.622 367.323 101.325 cv
365.133 101.178 li
365.18 100.474 364.648 99.8655 363.944 99.8182 cv
363.24 99.7709 362.632 100.303 362.584 101.007 cv
360.394 100.86 li
360.441 100.156 359.909 99.5469 359.205 99.4996 cv
358.502 99.4523 357.893 99.9845 357.845 100.688 cv
355.655 100.541 li
355.703 99.8373 355.17 99.2284 354.467 99.1811 cv
353.763 99.1338 353.154 99.6659 353.107 100.37 cv
352.418 110.613 li
369.183 111.74 li
369.872 101.497 li
369.919 100.793 369.387 100.184 368.683 100.137 cv
cp
.252415 .199252 .203738 0 cmyk
f
372.308 187.441 mo
339.367 185.227 li
338.774 185.187 338.326 184.674 338.366 184.082 cv
338.406 183.489 338.918 183.041 339.511 183.081 cv
372.452 185.295 li
373.045 185.335 373.493 185.848 373.453 186.44 cv
373.413 187.033 372.9 187.481 372.308 187.441 cv
cp
.442878 .333776 .314092 .00613413 cmyk
f
369.845 172.697 mo
369.893 171.994 369.361 171.385 368.657 171.337 cv
367.953 171.29 367.344 171.822 367.297 172.526 cv
365.107 172.379 li
365.154 171.675 364.622 171.066 363.918 171.019 cv
363.214 170.972 362.605 171.504 362.558 172.207 cv
360.368 172.06 li
360.415 171.356 359.883 170.748 359.179 170.7 cv
358.476 170.653 357.867 171.185 357.819 171.889 cv
355.629 171.742 li
355.677 171.038 355.144 170.429 354.441 170.382 cv
353.737 170.334 353.128 170.867 353.081 171.57 cv
350.891 171.423 li
350.938 170.719 350.406 170.111 349.702 170.063 cv
348.998 170.016 348.389 170.548 348.342 171.252 cv
346.152 171.105 li
346.199 170.401 345.667 169.792 344.963 169.745 cv
344.259 169.697 343.651 170.23 343.603 170.933 cv
342.682 170.871 li
341.85 183.238 li
370.113 185.138 li
370.944 172.771 li
369.845 172.697 li
cp
.252415 .199252 .203738 0 cmyk
f
373.535 169.19 mo
340.594 166.975 li
340.001 166.935 339.553 166.423 339.593 165.83 cv
339.633 165.238 340.145 164.79 340.738 164.829 cv
373.679 167.044 li
374.272 167.084 374.72 167.596 374.68 168.189 cv
374.64 168.781 374.127 169.229 373.535 169.19 cv
cp
.442878 .333776 .314092 .00613413 cmyk
f
344.963 169.745 mo
345.667 169.792 346.199 170.401 346.152 171.105 cv
348.342 171.252 li
348.389 170.548 348.998 170.016 349.702 170.063 cv
350.406 170.111 350.938 170.719 350.891 171.423 cv
353.081 171.57 li
353.128 170.867 353.737 170.334 354.441 170.382 cv
355.144 170.429 355.677 171.038 355.629 171.742 cv
357.819 171.889 li
357.867 171.185 358.476 170.653 359.179 170.7 cv
359.883 170.748 360.415 171.356 360.368 172.06 cv
362.558 172.207 li
362.605 171.504 363.214 170.972 363.918 171.019 cv
364.622 171.066 365.154 171.675 365.107 172.379 cv
367.297 172.526 li
367.344 171.822 367.953 171.29 368.657 171.337 cv
369.361 171.385 369.893 171.994 369.845 172.697 cv
371.01 172.776 li
371.478 172.807 371.882 172.454 371.913 171.986 cv
372.108 169.094 li
342.021 167.071 li
341.833 169.859 li
341.798 170.384 342.195 170.839 342.72 170.874 cv
343.603 170.933 li
343.651 170.23 344.259 169.697 344.963 169.745 cv
cp
.110933 .0791333 .0738231 0 cmyk
f
347.925 171.224 mo
346.569 171.133 li
345.737 183.499 li
347.094 183.591 li
347.925 171.224 li
cp
0 0 0 0 cmyk
f
357.491 171.867 mo
356.135 171.776 li
355.303 184.142 li
356.66 184.234 li
357.491 171.867 li
cp
f
367.057 172.51 mo
365.701 172.419 li
364.869 184.785 li
366.226 184.877 li
367.057 172.51 li
cp
f
352.708 171.545 mo
351.352 171.454 li
350.52 183.821 li
351.877 183.912 li
352.708 171.545 li
cp
f
362.274 172.188 mo
360.918 172.097 li
360.086 184.464 li
361.443 184.555 li
362.274 172.188 li
cp
f
372.022 170.366 mo
341.935 168.343 li
342.021 167.071 li
372.108 169.094 li
372.022 170.366 li
cp
.219669 .158785 .150515 0 cmyk
f
371.072 154.446 mo
371.12 153.742 370.588 153.133 369.884 153.086 cv
369.18 153.039 368.571 153.571 368.524 154.275 cv
366.334 154.127 li
366.381 153.424 365.849 152.815 365.145 152.767 cv
364.441 152.72 363.832 153.252 363.785 153.956 cv
361.595 153.809 li
361.642 153.105 361.11 152.496 360.406 152.449 cv
359.703 152.402 359.094 152.934 359.046 153.637 cv
356.856 153.49 li
356.903 152.786 356.371 152.178 355.668 152.13 cv
354.964 152.083 354.355 152.615 354.308 153.319 cv
352.117 153.172 li
352.165 152.468 351.633 151.859 350.929 151.812 cv
350.225 151.764 349.616 152.297 349.569 153 cv
347.379 152.853 li
347.426 152.149 346.894 151.54 346.19 151.493 cv
345.486 151.446 344.877 151.978 344.83 152.682 cv
343.909 152.62 li
343.077 164.987 li
371.34 166.886 li
372.171 154.52 li
371.072 154.446 li
cp
.252415 .199252 .203738 0 cmyk
f
374.762 150.938 mo
341.82 148.724 li
341.228 148.684 340.78 148.171 340.82 147.579 cv
340.859 146.986 341.372 146.538 341.965 146.578 cv
374.906 148.792 li
375.498 148.832 375.947 149.345 375.907 149.937 cv
375.907 149.937 li
375.867 150.53 375.354 150.978 374.762 150.938 cv
cp
.442878 .333776 .314092 .00613413 cmyk
f
346.19 151.493 mo
346.894 151.54 347.426 152.149 347.379 152.853 cv
349.569 153 li
349.616 152.297 350.225 151.764 350.929 151.812 cv
351.633 151.859 352.165 152.468 352.117 153.172 cv
354.308 153.319 li
354.355 152.615 354.964 152.083 355.668 152.13 cv
356.371 152.178 356.903 152.786 356.856 153.49 cv
359.046 153.637 li
359.094 152.934 359.703 152.402 360.406 152.449 cv
361.11 152.496 361.642 153.105 361.595 153.809 cv
363.785 153.956 li
363.832 153.252 364.441 152.72 365.145 152.767 cv
365.849 152.815 366.381 153.424 366.334 154.127 cv
368.524 154.275 li
368.571 153.571 369.18 153.039 369.884 153.086 cv
370.588 153.133 371.12 153.742 371.072 154.446 cv
372.237 154.524 li
372.704 154.556 373.109 154.202 373.14 153.735 cv
373.335 150.842 li
343.247 148.82 li
343.06 151.607 li
343.025 152.133 343.422 152.587 343.947 152.622 cv
344.83 152.682 li
344.877 151.978 345.486 151.446 346.19 151.493 cv
cp
.110933 .0791333 .0738231 0 cmyk
f
349.152 152.972 mo
347.796 152.881 li
346.964 165.248 li
348.321 165.339 li
349.152 152.972 li
cp
0 0 0 0 cmyk
f
358.718 153.615 mo
357.362 153.524 li
356.53 165.891 li
357.887 165.982 li
358.718 153.615 li
cp
f
368.284 154.258 mo
366.928 154.167 li
366.096 166.534 li
367.452 166.625 li
368.284 154.258 li
cp
f
353.935 153.294 mo
352.579 153.203 li
351.747 165.569 li
353.104 165.661 li
353.935 153.294 li
cp
f
363.501 153.937 mo
362.145 153.846 li
361.313 166.212 li
362.669 166.304 li
363.501 153.937 li
cp
f
373.249 152.114 mo
343.162 150.092 li
343.247 148.82 li
373.335 150.842 li
373.249 152.114 li
cp
.219669 .158785 .150515 0 cmyk
f
372.299 136.194 mo
372.347 135.491 371.814 134.882 371.111 134.834 cv
370.407 134.787 369.798 135.319 369.751 136.023 cv
367.561 135.876 li
367.608 135.172 367.076 134.563 366.372 134.516 cv
365.668 134.469 365.059 135.001 365.012 135.705 cv
362.822 135.557 li
362.869 134.854 362.337 134.245 361.633 134.197 cv
360.929 134.15 360.321 134.682 360.273 135.386 cv
358.083 135.239 li
358.13 134.535 357.598 133.926 356.894 133.879 cv
356.191 133.831 355.582 134.364 355.534 135.067 cv
353.344 134.92 li
353.392 134.216 352.859 133.608 352.156 133.56 cv
351.452 133.513 350.843 134.045 350.796 134.749 cv
348.606 134.602 li
348.653 133.898 348.121 133.289 347.417 133.242 cv
346.713 133.194 346.104 133.727 346.057 134.43 cv
345.136 134.368 li
344.304 146.735 li
372.566 148.635 li
373.398 136.268 li
372.299 136.194 li
cp
.252415 .199252 .203738 0 cmyk
f
375.988 132.687 mo
343.047 130.472 li
342.455 130.433 342.007 129.92 342.047 129.327 cv
342.086 128.735 342.599 128.287 343.192 128.326 cv
376.133 130.541 li
376.725 130.581 377.173 131.093 377.134 131.686 cv
377.134 131.686 li
377.094 132.278 376.581 132.727 375.988 132.687 cv
cp
.442878 .333776 .314092 .00613413 cmyk
f
347.417 133.242 mo
348.121 133.289 348.653 133.898 348.606 134.602 cv
350.796 134.749 li
350.843 134.045 351.452 133.513 352.156 133.56 cv
352.859 133.608 353.392 134.216 353.344 134.92 cv
355.534 135.067 li
355.582 134.364 356.191 133.831 356.894 133.879 cv
357.598 133.926 358.13 134.535 358.083 135.239 cv
360.273 135.386 li
360.321 134.682 360.929 134.15 361.633 134.197 cv
362.337 134.245 362.869 134.854 362.822 135.557 cv
365.012 135.705 li
365.059 135.001 365.668 134.469 366.372 134.516 cv
367.076 134.563 367.608 135.172 367.561 135.876 cv
369.751 136.023 li
369.798 135.319 370.407 134.787 371.111 134.834 cv
371.814 134.882 372.347 135.491 372.299 136.194 cv
373.464 136.273 li
373.931 136.304 374.336 135.951 374.367 135.483 cv
374.562 132.591 li
344.474 130.568 li
344.287 133.356 li
344.252 133.881 344.649 134.336 345.174 134.371 cv
346.057 134.43 li
346.104 133.727 346.713 133.194 347.417 133.242 cv
cp
.110933 .0791333 .0738231 0 cmyk
f
350.379 134.721 mo
349.023 134.63 li
348.191 146.996 li
349.547 147.088 li
350.379 134.721 li
cp
0 0 0 0 cmyk
f
359.945 135.364 mo
358.589 135.273 li
357.757 147.639 li
359.113 147.731 li
359.945 135.364 li
cp
f
369.511 136.007 mo
368.155 135.916 li
367.323 148.283 li
368.679 148.374 li
369.511 136.007 li
cp
f
355.162 135.042 mo
353.806 134.951 li
352.974 147.318 li
354.33 147.409 li
355.162 135.042 li
cp
f
364.728 135.685 mo
363.372 135.594 li
362.54 147.961 li
363.896 148.052 li
364.728 135.685 li
cp
f
374.476 133.863 mo
344.389 131.84 li
344.474 130.568 li
374.562 132.591 li
374.476 133.863 li
cp
.219669 .158785 .150515 0 cmyk
f
373.526 117.943 mo
373.573 117.239 373.041 116.63 372.338 116.583 cv
371.634 116.536 371.025 117.068 370.978 117.772 cv
368.787 117.624 li
368.835 116.921 368.303 116.312 367.599 116.264 cv
366.895 116.217 366.286 116.749 366.239 117.453 cv
364.049 117.306 li
364.096 116.602 363.564 115.993 362.86 115.946 cv
362.156 115.899 361.547 116.431 361.5 117.134 cv
359.31 116.987 li
359.357 116.283 358.825 115.675 358.121 115.627 cv
357.418 115.58 356.809 116.112 356.761 116.816 cv
354.571 116.669 li
354.618 115.965 354.086 115.356 353.383 115.309 cv
352.679 115.261 352.07 115.794 352.023 116.497 cv
349.832 116.35 li
349.88 115.646 349.348 115.038 348.644 114.99 cv
347.94 114.943 347.331 115.475 347.284 116.179 cv
346.362 116.117 li
345.531 128.484 li
373.793 130.383 li
374.625 118.017 li
373.526 117.943 li
cp
.252415 .199252 .203738 0 cmyk
f
377.215 114.435 mo
344.274 112.221 li
343.682 112.181 343.234 111.668 343.273 111.076 cv
343.313 110.483 343.826 110.035 344.419 110.075 cv
377.36 112.289 li
377.952 112.329 378.4 112.842 378.36 113.434 cv
378.321 114.027 377.808 114.475 377.215 114.435 cv
cp
.442878 .333776 .314092 .00613413 cmyk
f
348.644 114.99 mo
349.348 115.038 349.88 115.646 349.832 116.35 cv
352.023 116.497 li
352.07 115.794 352.679 115.261 353.383 115.309 cv
354.086 115.356 354.618 115.965 354.571 116.669 cv
356.761 116.816 li
356.809 116.112 357.418 115.58 358.121 115.627 cv
358.825 115.675 359.357 116.283 359.31 116.987 cv
361.5 117.134 li
361.547 116.431 362.156 115.899 362.86 115.946 cv
363.564 115.993 364.096 116.602 364.049 117.306 cv
366.239 117.453 li
366.286 116.749 366.895 116.217 367.599 116.264 cv
368.303 116.312 368.835 116.921 368.787 117.624 cv
370.978 117.772 li
371.025 117.068 371.634 116.536 372.338 116.583 cv
373.041 116.63 373.573 117.239 373.526 117.943 cv
374.691 118.021 li
375.158 118.053 375.563 117.699 375.594 117.232 cv
375.788 114.339 li
345.701 112.317 li
345.514 115.104 li
345.478 115.63 345.876 116.084 346.401 116.12 cv
347.284 116.179 li
347.331 115.475 347.94 114.943 348.644 114.99 cv
cp
.110933 .0791333 .0738231 0 cmyk
f
351.606 116.469 mo
350.249 116.378 li
349.418 128.745 li
350.774 128.836 li
351.606 116.469 li
cp
0 0 0 0 cmyk
f
361.172 117.112 mo
359.815 117.021 li
358.984 129.388 li
360.34 129.479 li
361.172 117.112 li
cp
f
370.738 117.755 mo
369.381 117.664 li
368.55 130.031 li
369.906 130.122 li
370.738 117.755 li
cp
f
356.389 116.791 mo
355.032 116.7 li
354.201 129.066 li
355.557 129.158 li
356.389 116.791 li
cp
f
365.955 117.434 mo
364.598 117.343 li
363.767 129.71 li
365.123 129.801 li
365.955 117.434 li
cp
f
375.703 115.611 mo
345.616 113.589 li
345.701 112.317 li
375.788 114.339 li
375.703 115.611 li
cp
.219669 .158785 .150515 0 cmyk
f
371.253 97.8339 mo
352.405 96.5668 li
351.952 96.5364 351.61 96.1447 351.64 95.6918 cv
351.674 95.1857 li
351.704 94.7329 352.096 94.3905 352.549 94.4209 cv
371.397 95.6879 li
371.85 95.7184 372.193 96.1101 372.162 96.5629 cv
372.128 97.0691 li
372.098 97.5219 371.706 97.8643 371.253 97.8339 cv
cp
.442878 .333776 .314092 .00613413 cmyk
f
362.256 100.985 mo
360.9 100.894 li
360.211 111.137 li
361.567 111.228 li
362.256 100.985 li
cp
0 0 0 0 cmyk
f
357.473 100.663 mo
356.117 100.572 li
355.428 110.815 li
356.784 110.906 li
357.473 100.663 li
cp
f
367.039 101.306 mo
365.683 101.215 li
364.994 111.458 li
366.35 111.549 li
367.039 101.306 li
cp
f
370.795 188.617 mo
340.708 186.595 li
340.794 185.323 li
370.881 187.345 li
370.795 188.617 li
cp
.219669 .158785 .150515 0 cmyk
f
352.263 96.5573 mo
352.085 99.201 li
352.045 99.8058 352.502 100.329 353.107 100.37 cv
353.154 99.6659 353.763 99.1338 354.467 99.1811 cv
355.17 99.2284 355.703 99.8373 355.655 100.541 cv
357.845 100.688 li
357.893 99.9845 358.502 99.4523 359.205 99.4996 cv
359.909 99.5469 360.441 100.156 360.394 100.86 cv
362.584 101.007 li
362.632 100.303 363.24 99.7709 363.944 99.8182 cv
364.648 99.8655 365.18 100.474 365.133 101.178 cv
367.323 101.325 li
367.37 100.622 367.979 100.089 368.683 100.137 cv
369.387 100.184 369.919 100.793 369.872 101.497 cv
370.574 101.544 371.182 101.013 371.229 100.31 cv
371.395 97.8434 li
352.263 96.5573 li
cp
.110933 .0791333 .0738231 0 cmyk
f
352.263 96.5573 mo
352.177 97.8294 li
371.309 99.1155 li
371.395 97.8434 li
352.263 96.5573 li
cp
.219669 .158785 .150515 0 cmyk
f
345.293 188.47 mo
344.029 188.385 342.935 189.341 342.85 190.606 cv
342.122 201.428 li
346.722 201.428 li
347.429 190.913 li
347.514 189.649 346.558 188.555 345.293 188.47 cv
cp
.320287 .229099 .198795 0 cmyk
f
352.196 188.934 mo
350.931 188.849 349.837 189.805 349.752 191.069 cv
349.056 201.428 li
353.656 201.428 li
354.332 191.377 li
354.417 190.113 353.46 189.019 352.196 188.934 cv
cp
f
359.098 189.398 mo
357.834 189.313 356.74 190.269 356.655 191.534 cv
355.989 201.428 li
360.59 201.428 li
361.234 191.841 li
361.319 190.577 360.363 189.483 359.098 189.398 cv
cp
f
368.136 192.305 mo
368.221 191.041 367.265 189.947 366 189.862 cv
364.736 189.777 363.642 190.733 363.557 191.997 cv
362.923 201.428 li
367.523 201.428 li
368.136 192.305 li
cp
f
256.56 47.3573 mo
256.436 47.3573 256.315 47.3563 256.198 47.3549 cv
256.008 47.3526 255.854 47.1956 255.857 47.0048 cv
255.86 46.8154 256.014 46.6635 256.203 46.6635 cv
256.207 46.6635 li
259.704 46.7131 266.581 46.1051 273.117 41.54 cv
282.339 35.0999 284.601 25.1358 285.074 22.2355 cv
285.104 22.0468 285.29 21.9202 285.47 21.9499 cv
285.659 21.9806 285.787 22.1585 285.756 22.3469 cv
285.272 25.3148 282.957 35.5118 273.513 42.1072 cv
267.036 46.6304 260.249 47.3573 256.56 47.3573 cv
cp
.79971 .462715 .383276 .108431 cmyk
f
262.003 48.0808 mo
259.866 48.0808 257.852 47.8232 256.111 47.3424 cv
255.927 47.2918 255.819 47.1014 255.869 46.917 cv
255.92 46.7334 256.112 46.6243 256.295 46.676 cv
262.265 48.3242 271.535 47.2702 277.702 42.0657 cv
284.636 36.2136 287.263 29.6172 285.511 22.4597 cv
285.466 22.2743 285.58 22.0873 285.765 22.0417 cv
285.952 21.9968 286.137 22.1102 286.183 22.2956 cv
288.002 29.7289 285.299 36.5583 278.148 42.5944 cv
273.597 46.4346 267.407 48.0808 262.003 48.0808 cv
cp
f
384.667 47.3573 mo
380.978 47.3573 374.191 46.6304 367.714 42.1072 cv
358.27 35.5118 355.955 25.3148 355.471 22.3469 cv
355.44 22.1585 355.568 21.9806 355.757 21.9499 cv
355.936 21.9208 356.123 22.0468 356.153 22.2355 cv
356.626 25.1358 358.888 35.0999 368.11 41.54 cv
374.646 46.1048 381.525 46.7162 385.02 46.6635 cv
385.024 46.6635 li
385.213 46.6635 385.367 46.8154 385.37 47.0048 cv
385.373 47.1956 385.219 47.3526 385.029 47.3549 cv
384.912 47.3563 384.791 47.3573 384.667 47.3573 cv
cp
f
379.224 48.0808 mo
373.82 48.0808 367.63 46.4349 363.079 42.5944 cv
355.928 36.5583 353.225 29.7289 355.044 22.2956 cv
355.09 22.1102 355.275 21.9968 355.462 22.0417 cv
355.647 22.0873 355.761 22.2743 355.716 22.4597 cv
353.964 29.6172 356.591 36.2136 363.525 42.0657 cv
369.692 47.2698 378.961 48.3249 384.932 46.676 cv
385.116 46.625 385.307 46.7334 385.358 46.917 cv
385.409 47.1014 385.301 47.2918 385.116 47.3424 cv
383.375 47.8232 381.361 48.0804 379.224 48.0808 cv
cp
f
341.257 60.0596 mo
341.066 60.0596 340.912 59.905 340.912 59.7139 cv
340.912 55.978 325.159 52.4683 320.614 52.4683 cv
316.067 52.4683 300.315 55.978 300.315 59.7139 cv
300.315 59.905 300.16 60.0596 299.969 60.0596 cv
299.778 60.0596 299.623 59.905 299.623 59.7139 cv
299.623 55.1536 316.226 51.7769 320.614 51.7769 cv
325.001 51.7769 341.603 55.1536 341.603 59.7139 cv
341.603 59.905 341.448 60.0596 341.257 60.0596 cv
cp
f
385.324 52.814 mo
255.903 52.814 li
255.903 51.4311 li
385.324 51.4311 li
385.324 52.814 li
cp
.889006 .775265 .230014 .0756847 cmyk
f
341.842 23.0831 mo
299.385 23.0831 li
299.385 19.5108 li
341.842 19.5108 li
341.842 23.0831 li
cp
.254276 .154055 0 0 cmyk
f
341.842 23.0831 mo
299.385 23.0831 li
299.385 19.5108 li
341.842 19.5108 li
341.842 23.0831 li
cp
f
291.902 0 mo
287.592 16.2338 li
296.212 16.2338 li
291.902 0 li
cp
.79971 .462715 .383276 .108431 cmyk
f
287.631 52.1225 mo
284.404 52.1225 li
284.404 16.169 li
287.631 16.169 li
287.631 52.1225 li
cp
.442603 .273442 .315129 .00299077 cmyk
f
296.158 52.1225 mo
287.631 52.1225 li
287.631 16.169 li
296.158 16.169 li
296.158 52.1225 li
cp
.505089 .322332 .36173 .0130007 cmyk
f
299.385 52.1225 mo
296.158 52.1225 li
296.158 16.169 li
299.385 16.169 li
299.385 52.1225 li
cp
.442603 .273442 .315129 .00299077 cmyk
f
300.768 62.0327 mo
283.021 62.0327 li
283.021 52.1225 li
300.768 52.1225 li
300.768 62.0327 li
cp
.603754 .416938 .454841 .0979019 cmyk
f
287.631 27.0011 mo
284.404 27.0011 li
284.404 25.6183 li
287.631 25.6183 li
287.631 27.0011 li
cp
.543938 .356207 .400305 .0364691 cmyk
f
299.385 27.0011 mo
296.158 27.0011 li
296.158 25.6183 li
299.385 25.6183 li
299.385 27.0011 li
cp
f
287.631 36.1623 mo
284.404 36.1623 li
284.404 34.7795 li
287.631 34.7795 li
287.631 36.1623 li
cp
f
299.385 36.1623 mo
296.158 36.1623 li
296.158 34.7795 li
299.385 34.7795 li
299.385 36.1623 li
cp
f
287.631 45.3236 mo
284.404 45.3236 li
284.404 43.9408 li
287.631 43.9408 li
287.631 45.3236 li
cp
f
299.385 45.3236 mo
296.158 45.3236 li
296.158 43.9408 li
299.385 43.9408 li
299.385 45.3236 li
cp
f
303.188 64.4527 mo
280.602 64.4527 li
280.602 63.1162 281.685 62.0327 283.021 62.0327 cv
300.768 62.0327 li
302.104 62.0327 303.188 63.1162 303.188 64.4527 cv
cp
.706386 .465126 .608026 .275639 cmyk
f
299.385 44.2864 mo
284.404 44.2864 li
284.404 43.595 li
299.385 43.595 li
299.385 44.2864 li
cp
.664881 .526146 .449439 .178714 cmyk
f
299.385 41.7514 mo
284.404 41.7514 li
284.404 41.0599 li
299.385 41.0599 li
299.385 41.7514 li
cp
f
299.385 35.1252 mo
284.404 35.1252 li
284.404 34.4338 li
299.385 34.4338 li
299.385 35.1252 li
cp
f
299.385 32.5901 mo
284.404 32.5901 li
284.404 31.8987 li
299.385 31.8987 li
299.385 32.5901 li
cp
f
299.385 25.964 mo
284.404 25.964 li
284.404 25.2726 li
299.385 25.2726 li
299.385 25.964 li
cp
f
299.385 23.4289 mo
284.404 23.4289 li
284.404 22.7375 li
299.385 22.7375 li
299.385 23.4289 li
cp
f
287.631 17.9839 mo
284.404 17.9839 li
284.404 16.6011 li
287.631 16.6011 li
287.631 17.9839 li
cp
.543938 .356207 .400305 .0364691 cmyk
f
299.385 17.9839 mo
296.158 17.9839 li
296.158 16.6011 li
299.385 16.6011 li
299.385 17.9839 li
cp
f
299.385 16.9469 mo
284.404 16.9469 li
284.404 16.2555 li
299.385 16.2555 li
299.385 16.9469 li
cp
.664881 .526146 .449439 .178714 cmyk
f
287.631 10.1191 mo
284.404 10.1191 li
284.404 16.169 li
287.631 16.169 li
287.631 10.1191 li
cp
.442603 .273442 .315129 .00299077 cmyk
f
286.018 4.06925 mo
284.404 10.1191 li
287.631 10.1191 li
286.018 4.06925 li
cp
.79971 .462715 .383276 .108431 cmyk
f
297.772 4.06925 mo
296.158 10.1191 li
299.385 10.1191 li
297.772 4.06925 li
cp
f
299.385 10.1191 mo
296.158 10.1191 li
296.158 16.169 li
299.385 16.169 li
299.385 10.1191 li
cp
.442603 .273442 .315129 .00299077 cmyk
f
296.158 16.169 mo
296.158 13.8142 291.895 10.1191 291.895 10.1191 cv
291.895 10.1191 287.631 13.8142 287.631 16.169 cv
296.158 16.169 li
cp
.505089 .322332 .36173 .0130007 cmyk
f
292.6 28.528 mo
291.189 28.528 li
291.189 30.4294 li
292.6 30.4294 li
292.6 28.528 li
cp
.664881 .526146 .449439 .178714 cmyk
f
291.534 30.0838 mo
292.255 30.0838 li
292.255 28.8738 li
291.534 28.8738 li
291.534 30.0838 li
cp
292.946 30.7752 mo
290.843 30.7752 li
290.843 28.1824 li
292.946 28.1824 li
292.946 30.7752 li
cp
0 0 0 0 cmyk
f
290.116 28.528 mo
288.704 28.528 li
288.704 30.4294 li
290.116 30.4294 li
290.116 28.528 li
cp
.664881 .526146 .449439 .178714 cmyk
f
289.05 30.0838 mo
289.77 30.0838 li
289.77 28.8738 li
289.05 28.8738 li
289.05 30.0838 li
cp
290.461 30.7752 mo
288.358 30.7752 li
288.358 28.1824 li
290.461 28.1824 li
290.461 30.7752 li
cp
0 0 0 0 cmyk
f
293.674 28.528 mo
295.085 28.528 li
295.085 30.4294 li
293.674 30.4294 li
293.674 28.528 li
cp
.664881 .526146 .449439 .178714 cmyk
f
294.019 30.0838 mo
294.74 30.0838 li
294.74 28.8738 li
294.019 28.8738 li
294.019 30.0838 li
cp
295.431 30.7752 mo
293.328 30.7752 li
293.328 28.1824 li
295.431 28.1824 li
295.431 30.7752 li
cp
0 0 0 0 cmyk
f
292.6 37.1419 mo
291.189 37.1419 li
291.189 39.677 li
292.6 39.677 li
292.6 37.1419 li
cp
.664881 .526146 .449439 .178714 cmyk
f
291.534 39.3314 mo
292.255 39.3314 li
292.255 37.4874 li
291.534 37.4874 li
291.534 39.3314 li
cp
292.946 40.0228 mo
290.843 40.0228 li
290.843 36.796 li
292.946 36.796 li
292.946 40.0228 li
cp
0 0 0 0 cmyk
f
290.116 37.1419 mo
288.704 37.1419 li
288.704 39.677 li
290.116 39.677 li
290.116 37.1419 li
cp
.664881 .526146 .449439 .178714 cmyk
f
289.05 39.3314 mo
289.77 39.3314 li
289.77 37.4874 li
289.05 37.4874 li
289.05 39.3314 li
cp
290.461 40.0228 mo
288.358 40.0228 li
288.358 36.796 li
290.461 36.796 li
290.461 40.0228 li
cp
0 0 0 0 cmyk
f
293.674 37.1419 mo
295.085 37.1419 li
295.085 39.677 li
293.674 39.677 li
293.674 37.1419 li
cp
.664881 .526146 .449439 .178714 cmyk
f
294.019 39.3314 mo
294.74 39.3314 li
294.74 37.4874 li
294.019 37.4874 li
294.019 39.3314 li
cp
295.431 40.0228 mo
293.328 40.0228 li
293.328 36.796 li
295.431 36.796 li
295.431 40.0228 li
cp
0 0 0 0 cmyk
f
292.6 48.3773 mo
291.189 48.3773 li
291.189 50.9125 li
292.6 50.9125 li
292.6 48.3773 li
cp
.664881 .526146 .449439 .178714 cmyk
f
291.534 50.5669 mo
292.255 50.5669 li
292.255 48.7229 li
291.534 48.7229 li
291.534 50.5669 li
cp
292.946 51.2583 mo
290.843 51.2583 li
290.843 48.0315 li
292.946 48.0315 li
292.946 51.2583 li
cp
0 0 0 0 cmyk
f
290.116 48.3773 mo
288.704 48.3773 li
288.704 50.9125 li
290.116 50.9125 li
290.116 48.3773 li
cp
.664881 .526146 .449439 .178714 cmyk
f
289.05 50.5669 mo
289.77 50.5669 li
289.77 48.7229 li
289.05 48.7229 li
289.05 50.5669 li
cp
290.461 51.2583 mo
288.358 51.2583 li
288.358 48.0315 li
290.461 48.0315 li
290.461 51.2583 li
cp
0 0 0 0 cmyk
f
293.674 48.3773 mo
295.085 48.3773 li
295.085 50.9125 li
293.674 50.9125 li
293.674 48.3773 li
cp
.664881 .526146 .449439 .178714 cmyk
f
294.019 50.5669 mo
294.74 50.5669 li
294.74 48.7229 li
294.019 48.7229 li
294.019 50.5669 li
cp
295.431 51.2583 mo
293.328 51.2583 li
293.328 48.0315 li
295.431 48.0315 li
295.431 51.2583 li
cp
0 0 0 0 cmyk
f
292.6 46.5047 mo
291.189 46.5047 li
291.189 48.3773 li
292.6 48.3773 li
292.6 46.5047 li
cp
.664881 .526146 .449439 .178714 cmyk
f
291.534 48.0315 mo
292.255 48.0315 li
292.255 46.8505 li
291.534 46.8505 li
291.534 48.0315 li
cp
292.946 48.7229 mo
290.843 48.7229 li
290.843 46.1591 li
292.946 46.1591 li
292.946 48.7229 li
cp
0 0 0 0 cmyk
f
290.116 46.5047 mo
288.704 46.5047 li
288.704 48.3773 li
290.116 48.3773 li
290.116 46.5047 li
cp
.664881 .526146 .449439 .178714 cmyk
f
289.05 48.0315 mo
289.77 48.0315 li
289.77 46.8505 li
289.05 46.8505 li
289.05 48.0315 li
cp
290.461 48.7229 mo
288.358 48.7229 li
288.358 46.1591 li
290.461 46.1591 li
290.461 48.7229 li
cp
0 0 0 0 cmyk
f
293.674 46.5047 mo
295.085 46.5047 li
295.085 48.3773 li
293.674 48.3773 li
293.674 46.5047 li
cp
.664881 .526146 .449439 .178714 cmyk
f
294.019 48.0315 mo
294.74 48.0315 li
294.74 46.8505 li
294.019 46.8505 li
294.019 48.0315 li
cp
295.431 48.7229 mo
293.328 48.7229 li
293.328 46.1591 li
295.431 46.1591 li
295.431 48.7229 li
cp
0 0 0 0 cmyk
f
292.6 17.6382 mo
291.189 17.6382 li
291.189 22.046 li
292.6 22.046 li
292.6 17.6382 li
cp
.664881 .526146 .449439 .178714 cmyk
f
291.534 21.7004 mo
292.255 21.7004 li
292.255 17.984 li
291.534 17.984 li
291.534 21.7004 li
cp
292.946 22.3918 mo
290.843 22.3918 li
290.843 17.2926 li
292.946 17.2926 li
292.946 22.3918 li
cp
0 0 0 0 cmyk
f
293.378 13.1441 mo
290.411 13.1441 li
290.411 15.3479 li
293.378 15.3479 li
293.378 13.1441 li
cp
.664881 .526146 .449439 .178714 cmyk
f
290.757 15.0023 mo
293.033 15.0023 li
293.033 13.4898 li
290.757 13.4898 li
290.757 15.0023 li
cp
293.724 15.6937 mo
290.065 15.6937 li
290.065 12.7984 li
293.724 12.7984 li
293.724 15.6937 li
cp
0 0 0 0 cmyk
f
290.116 19.5108 mo
288.704 19.5108 li
288.704 22.046 li
290.116 22.046 li
290.116 19.5108 li
cp
.664881 .526146 .449439 .178714 cmyk
f
289.05 21.7004 mo
289.77 21.7004 li
289.77 19.8564 li
289.05 19.8564 li
289.05 21.7004 li
cp
290.461 22.3918 mo
288.358 22.3918 li
288.358 19.165 li
290.461 19.165 li
290.461 22.3918 li
cp
0 0 0 0 cmyk
f
293.674 19.5108 mo
295.085 19.5108 li
295.085 22.046 li
293.674 22.046 li
293.674 19.5108 li
cp
.664881 .526146 .449439 .178714 cmyk
f
294.019 21.7004 mo
294.74 21.7004 li
294.74 19.8564 li
294.019 19.8564 li
294.019 21.7004 li
cp
295.431 22.3918 mo
293.328 22.3918 li
293.328 19.165 li
295.431 19.165 li
295.431 22.3918 li
cp
0 0 0 0 cmyk
f
290.116 17.6382 mo
288.704 17.6382 li
288.704 19.5108 li
290.116 19.5108 li
290.116 17.6382 li
cp
.664881 .526146 .449439 .178714 cmyk
f
289.05 19.165 mo
289.77 19.165 li
289.77 17.984 li
289.05 17.984 li
289.05 19.165 li
cp
290.461 19.8564 mo
288.358 19.8564 li
288.358 17.2926 li
290.461 17.2926 li
290.461 19.8564 li
cp
0 0 0 0 cmyk
f
293.674 17.6382 mo
295.085 17.6382 li
295.085 19.5108 li
293.674 19.5108 li
293.674 17.6382 li
cp
.664881 .526146 .449439 .178714 cmyk
f
294.019 19.165 mo
294.74 19.165 li
294.74 17.984 li
294.019 17.984 li
294.019 19.165 li
cp
295.431 19.8564 mo
293.328 19.8564 li
293.328 17.2926 li
295.431 17.2926 li
295.431 19.8564 li
cp
0 0 0 0 cmyk
f
349.34 0 mo
345.03 16.2338 li
353.649 16.2338 li
349.34 0 li
cp
.79971 .462715 .383276 .108431 cmyk
f
345.069 52.1225 mo
341.842 52.1225 li
341.842 16.169 li
345.069 16.169 li
345.069 52.1225 li
cp
.442603 .273442 .315129 .00299077 cmyk
f
353.596 52.1225 mo
345.069 52.1225 li
345.069 16.169 li
353.596 16.169 li
353.596 52.1225 li
cp
.505089 .322332 .36173 .0130007 cmyk
f
356.823 52.1225 mo
353.596 52.1225 li
353.596 16.169 li
356.823 16.169 li
356.823 52.1225 li
cp
.442603 .273442 .315129 .00299077 cmyk
f
358.205 62.0327 mo
340.459 62.0327 li
340.459 52.1225 li
358.205 52.1225 li
358.205 62.0327 li
cp
.603754 .416938 .454841 .0979019 cmyk
f
345.069 27.0011 mo
341.842 27.0011 li
341.842 25.6183 li
345.069 25.6183 li
345.069 27.0011 li
cp
.543938 .356207 .400305 .0364691 cmyk
f
356.823 27.0011 mo
353.596 27.0011 li
353.596 25.6183 li
356.823 25.6183 li
356.823 27.0011 li
cp
f
345.069 36.1623 mo
341.842 36.1623 li
341.842 34.7795 li
345.069 34.7795 li
345.069 36.1623 li
cp
f
356.823 36.1623 mo
353.596 36.1623 li
353.596 34.7795 li
356.823 34.7795 li
356.823 36.1623 li
cp
f
345.069 45.3236 mo
341.842 45.3236 li
341.842 43.9408 li
345.069 43.9408 li
345.069 45.3236 li
cp
f
356.823 45.3236 mo
353.596 45.3236 li
353.596 43.9408 li
356.823 43.9408 li
356.823 45.3236 li
cp
f
360.625 64.4527 mo
338.039 64.4527 li
338.039 63.1162 339.123 62.0327 340.459 62.0327 cv
358.205 62.0327 li
359.542 62.0327 360.625 63.1162 360.625 64.4527 cv
cp
.706386 .465126 .608026 .275639 cmyk
f
356.823 44.2864 mo
341.842 44.2864 li
341.842 43.595 li
356.823 43.595 li
356.823 44.2864 li
cp
.664881 .526146 .449439 .178714 cmyk
f
356.823 41.7514 mo
341.842 41.7514 li
341.842 41.0599 li
356.823 41.0599 li
356.823 41.7514 li
cp
f
356.823 35.1252 mo
341.842 35.1252 li
341.842 34.4338 li
356.823 34.4338 li
356.823 35.1252 li
cp
f
356.823 32.5901 mo
341.842 32.5901 li
341.842 31.8987 li
356.823 31.8987 li
356.823 32.5901 li
cp
f
356.823 25.964 mo
341.842 25.964 li
341.842 25.2726 li
356.823 25.2726 li
356.823 25.964 li
cp
f
356.823 23.4289 mo
341.842 23.4289 li
341.842 22.7375 li
356.823 22.7375 li
356.823 23.4289 li
cp
f
345.069 17.9839 mo
341.842 17.9839 li
341.842 16.6011 li
345.069 16.6011 li
345.069 17.9839 li
cp
.543938 .356207 .400305 .0364691 cmyk
f
356.823 17.9839 mo
353.596 17.9839 li
353.596 16.6011 li
356.823 16.6011 li
356.823 17.9839 li
cp
f
356.823 16.9469 mo
341.842 16.9469 li
341.842 16.2555 li
356.823 16.2555 li
356.823 16.9469 li
cp
.664881 .526146 .449439 .178714 cmyk
f
345.069 10.1191 mo
341.842 10.1191 li
341.842 16.169 li
345.069 16.169 li
345.069 10.1191 li
cp
.442603 .273442 .315129 .00299077 cmyk
f
343.455 4.06925 mo
341.842 10.1191 li
345.069 10.1191 li
343.455 4.06925 li
cp
.79971 .462715 .383276 .108431 cmyk
f
355.209 4.06925 mo
353.596 10.1191 li
356.823 10.1191 li
355.209 4.06925 li
cp
f
356.823 10.1191 mo
353.596 10.1191 li
353.596 16.169 li
356.823 16.169 li
356.823 10.1191 li
cp
.442603 .273442 .315129 .00299077 cmyk
f
353.596 16.169 mo
353.596 13.8142 349.332 10.1191 349.332 10.1191 cv
349.332 10.1191 345.069 13.8142 345.069 16.169 cv
353.596 16.169 li
cp
.505089 .322332 .36173 .0130007 cmyk
f
350.038 28.528 mo
348.626 28.528 li
348.626 30.4294 li
350.038 30.4294 li
350.038 28.528 li
cp
.664881 .526146 .449439 .178714 cmyk
f
348.972 30.0838 mo
349.693 30.0838 li
349.693 28.8738 li
348.972 28.8738 li
348.972 30.0838 li
cp
350.384 30.7752 mo
348.281 30.7752 li
348.281 28.1824 li
350.384 28.1824 li
350.384 30.7752 li
cp
0 0 0 0 cmyk
f
347.553 28.528 mo
346.142 28.528 li
346.142 30.4294 li
347.553 30.4294 li
347.553 28.528 li
cp
.664881 .526146 .449439 .178714 cmyk
f
346.487 30.0838 mo
347.208 30.0838 li
347.208 28.8738 li
346.487 28.8738 li
346.487 30.0838 li
cp
347.899 30.7752 mo
345.796 30.7752 li
345.796 28.1824 li
347.899 28.1824 li
347.899 30.7752 li
cp
0 0 0 0 cmyk
f
351.111 28.528 mo
352.523 28.528 li
352.523 30.4294 li
351.111 30.4294 li
351.111 28.528 li
cp
.664881 .526146 .449439 .178714 cmyk
f
351.457 30.0838 mo
352.177 30.0838 li
352.177 28.8738 li
351.457 28.8738 li
351.457 30.0838 li
cp
352.869 30.7752 mo
350.766 30.7752 li
350.766 28.1824 li
352.869 28.1824 li
352.869 30.7752 li
cp
0 0 0 0 cmyk
f
350.038 37.1419 mo
348.626 37.1419 li
348.626 39.677 li
350.038 39.677 li
350.038 37.1419 li
cp
.664881 .526146 .449439 .178714 cmyk
f
348.972 39.3314 mo
349.693 39.3314 li
349.693 37.4874 li
348.972 37.4874 li
348.972 39.3314 li
cp
350.384 40.0228 mo
348.281 40.0228 li
348.281 36.796 li
350.384 36.796 li
350.384 40.0228 li
cp
0 0 0 0 cmyk
f
347.553 37.1419 mo
346.142 37.1419 li
346.142 39.677 li
347.553 39.677 li
347.553 37.1419 li
cp
.664881 .526146 .449439 .178714 cmyk
f
346.487 39.3314 mo
347.208 39.3314 li
347.208 37.4874 li
346.487 37.4874 li
346.487 39.3314 li
cp
347.899 40.0228 mo
345.796 40.0228 li
345.796 36.796 li
347.899 36.796 li
347.899 40.0228 li
cp
0 0 0 0 cmyk
f
351.111 37.1419 mo
352.523 37.1419 li
352.523 39.677 li
351.111 39.677 li
351.111 37.1419 li
cp
.664881 .526146 .449439 .178714 cmyk
f
351.457 39.3314 mo
352.177 39.3314 li
352.177 37.4874 li
351.457 37.4874 li
351.457 39.3314 li
cp
352.869 40.0228 mo
350.766 40.0228 li
350.766 36.796 li
352.869 36.796 li
352.869 40.0228 li
cp
0 0 0 0 cmyk
f
350.038 48.3773 mo
348.626 48.3773 li
348.626 50.9125 li
350.038 50.9125 li
350.038 48.3773 li
cp
.664881 .526146 .449439 .178714 cmyk
f
348.972 50.5669 mo
349.693 50.5669 li
349.693 48.7229 li
348.972 48.7229 li
348.972 50.5669 li
cp
350.384 51.2583 mo
348.281 51.2583 li
348.281 48.0315 li
350.384 48.0315 li
350.384 51.2583 li
cp
0 0 0 0 cmyk
f
347.553 48.3773 mo
346.142 48.3773 li
346.142 50.9125 li
347.553 50.9125 li
347.553 48.3773 li
cp
.664881 .526146 .449439 .178714 cmyk
f
346.487 50.5669 mo
347.208 50.5669 li
347.208 48.7229 li
346.487 48.7229 li
346.487 50.5669 li
cp
347.899 51.2583 mo
345.796 51.2583 li
345.796 48.0315 li
347.899 48.0315 li
347.899 51.2583 li
cp
0 0 0 0 cmyk
f
351.111 48.3773 mo
352.523 48.3773 li
352.523 50.9125 li
351.111 50.9125 li
351.111 48.3773 li
cp
.664881 .526146 .449439 .178714 cmyk
f
351.457 50.5669 mo
352.177 50.5669 li
352.177 48.7229 li
351.457 48.7229 li
351.457 50.5669 li
cp
352.869 51.2583 mo
350.766 51.2583 li
350.766 48.0315 li
352.869 48.0315 li
352.869 51.2583 li
cp
0 0 0 0 cmyk
f
350.038 46.5047 mo
348.626 46.5047 li
348.626 48.3773 li
350.038 48.3773 li
350.038 46.5047 li
cp
.664881 .526146 .449439 .178714 cmyk
f
348.972 48.0315 mo
349.693 48.0315 li
349.693 46.8505 li
348.972 46.8505 li
348.972 48.0315 li
cp
350.384 48.7229 mo
348.281 48.7229 li
348.281 46.1591 li
350.384 46.1591 li
350.384 48.7229 li
cp
0 0 0 0 cmyk
f
347.553 46.5047 mo
346.142 46.5047 li
346.142 48.3773 li
347.553 48.3773 li
347.553 46.5047 li
cp
.664881 .526146 .449439 .178714 cmyk
f
346.487 48.0315 mo
347.208 48.0315 li
347.208 46.8505 li
346.487 46.8505 li
346.487 48.0315 li
cp
347.899 48.7229 mo
345.796 48.7229 li
345.796 46.1591 li
347.899 46.1591 li
347.899 48.7229 li
cp
0 0 0 0 cmyk
f
351.111 46.5047 mo
352.523 46.5047 li
352.523 48.3773 li
351.111 48.3773 li
351.111 46.5047 li
cp
.664881 .526146 .449439 .178714 cmyk
f
351.457 48.0315 mo
352.177 48.0315 li
352.177 46.8505 li
351.457 46.8505 li
351.457 48.0315 li
cp
352.869 48.7229 mo
350.766 48.7229 li
350.766 46.1591 li
352.869 46.1591 li
352.869 48.7229 li
cp
0 0 0 0 cmyk
f
350.038 17.6382 mo
348.626 17.6382 li
348.626 22.046 li
350.038 22.046 li
350.038 17.6382 li
cp
.664881 .526146 .449439 .178714 cmyk
f
348.972 21.7004 mo
349.693 21.7004 li
349.693 17.984 li
348.972 17.984 li
348.972 21.7004 li
cp
350.384 22.3918 mo
348.281 22.3918 li
348.281 17.2926 li
350.384 17.2926 li
350.384 22.3918 li
cp
0 0 0 0 cmyk
f
350.816 13.1441 mo
347.849 13.1441 li
347.849 15.3479 li
350.816 15.3479 li
350.816 13.1441 li
cp
.664881 .526146 .449439 .178714 cmyk
f
348.194 15.0023 mo
350.471 15.0023 li
350.471 13.4898 li
348.194 13.4898 li
348.194 15.0023 li
cp
351.162 15.6937 mo
347.503 15.6937 li
347.503 12.7984 li
351.162 12.7984 li
351.162 15.6937 li
cp
0 0 0 0 cmyk
f
347.553 19.5108 mo
346.142 19.5108 li
346.142 22.046 li
347.553 22.046 li
347.553 19.5108 li
cp
.664881 .526146 .449439 .178714 cmyk
f
346.487 21.7004 mo
347.208 21.7004 li
347.208 19.8564 li
346.487 19.8564 li
346.487 21.7004 li
cp
347.899 22.3918 mo
345.796 22.3918 li
345.796 19.165 li
347.899 19.165 li
347.899 22.3918 li
cp
0 0 0 0 cmyk
f
351.111 19.5108 mo
352.523 19.5108 li
352.523 22.046 li
351.111 22.046 li
351.111 19.5108 li
cp
.664881 .526146 .449439 .178714 cmyk
f
351.457 21.7004 mo
352.177 21.7004 li
352.177 19.8564 li
351.457 19.8564 li
351.457 21.7004 li
cp
352.869 22.3918 mo
350.766 22.3918 li
350.766 19.165 li
352.869 19.165 li
352.869 22.3918 li
cp
0 0 0 0 cmyk
f
347.553 17.6382 mo
346.142 17.6382 li
346.142 19.5108 li
347.553 19.5108 li
347.553 17.6382 li
cp
.664881 .526146 .449439 .178714 cmyk
f
346.487 19.165 mo
347.208 19.165 li
347.208 17.984 li
346.487 17.984 li
346.487 19.165 li
cp
347.899 19.8564 mo
345.796 19.8564 li
345.796 17.2926 li
347.899 17.2926 li
347.899 19.8564 li
cp
0 0 0 0 cmyk
f
351.111 17.6382 mo
352.523 17.6382 li
352.523 19.5108 li
351.111 19.5108 li
351.111 17.6382 li
cp
.664881 .526146 .449439 .178714 cmyk
f
351.457 19.165 mo
352.177 19.165 li
352.177 17.984 li
351.457 17.984 li
351.457 19.165 li
cp
352.869 19.8564 mo
350.766 19.8564 li
350.766 17.2926 li
352.869 17.2926 li
352.869 19.8564 li
cp
0 0 0 0 cmyk
f
321.882 22.566 mo
319.344 22.566 li
319.344 20.0279 li
321.882 20.0279 li
321.882 22.566 li
cp
.0135195 .0729992 .697078 0 cmyk
f
310.111 22.0312 mo
311.58 22.0312 li
311.58 20.5627 li
310.111 20.5627 li
310.111 22.0312 li
cp
.79971 .462715 .383276 .108431 cmyk
f
329.646 22.0312 mo
331.116 22.0312 li
331.116 20.5627 li
329.646 20.5627 li
329.646 22.0312 li
cp
f
363.042 70.3311 mo
358.523 70.3311 li
357.711 70.3311 357.053 70.989 357.053 71.8007 cv
357.053 72.6123 357.711 73.2703 358.523 73.2703 cv
363.042 73.2703 li
363.853 73.2703 364.511 72.6123 364.511 71.8007 cv
364.511 70.989 363.853 70.3311 363.042 70.3311 cv
cp
.712856 .280552 0 0 cmyk
f
276.583 70.3311 mo
276.583 70.3311 li
277.395 70.3311 278.053 70.989 278.053 71.8007 cv
278.053 72.6123 277.395 73.2703 276.583 73.2703 cv
275.772 73.2703 275.114 72.6123 275.114 71.8007 cv
275.114 70.989 275.772 70.3311 276.583 70.3311 cv
cp
f
299.385 70.3311 mo
298.573 70.3311 297.915 69.6731 297.915 68.8615 cv
297.915 68.0498 298.573 67.3919 299.385 67.3919 cv
300.197 67.3919 300.855 68.0498 300.855 68.8615 cv
300.855 69.6731 300.197 70.3311 299.385 70.3311 cv
cp
368.949 64.4527 mo
272.514 64.4527 li
271.702 64.4527 271.044 65.1106 271.044 65.9223 cv
271.044 66.7339 271.702 67.3919 272.514 67.3919 cv
288.992 67.3919 li
289.803 67.3919 290.461 68.0498 290.461 68.8615 cv
290.461 69.6731 289.803 70.3311 288.992 70.3311 cv
283.356 70.3311 li
282.544 70.3311 281.886 70.989 281.886 71.8007 cv
281.886 72.6123 282.544 73.2703 283.356 73.2703 cv
353.025 73.2703 li
353.837 73.2703 354.495 72.6123 354.495 71.8007 cv
354.495 70.989 353.837 70.3311 353.025 70.3311 cv
343.443 70.3311 li
342.632 70.3311 341.974 69.6731 341.974 68.8615 cv
341.974 68.0498 342.632 67.3919 343.443 67.3919 cv
368.949 67.3919 li
369.76 67.3919 370.418 66.7339 370.418 65.9223 cv
370.418 65.1106 369.76 64.4527 368.949 64.4527 cv
cp
f
301.928 23.0831 mo
299.385 23.0831 li
299.385 19.5108 li
301.928 19.5108 li
301.928 23.0831 li
cp
.396521 .2551 .0378424 0 cmyk
f
341.842 23.0831 mo
339.299 23.0831 li
339.299 19.5108 li
341.842 19.5108 li
341.842 23.0831 li
cp
f
216.192 385.895 mo
185.627 385.895 li
185.627 353.542 li
216.192 353.542 li
216.192 385.895 li
cp
.110933 .0791333 .0738231 0 cmyk
f
187.871 385.895 mo
187.871 355.786 li
213.948 355.786 li
213.948 385.895 li
187.871 385.895 li
cp
0 0 0 0 cmyk
f
185.627 385.895 mo
168.936 385.895 li
168.936 360.461 li
185.627 360.461 li
185.627 385.895 li
cp
.110933 .0791333 .0738231 0 cmyk
f
168.936 385.895 mo
160.591 385.895 li
160.591 360.461 li
168.936 360.461 li
168.936 385.895 li
cp
f
241.227 385.895 mo
232.882 385.895 li
232.882 360.461 li
241.227 360.461 li
241.227 385.895 li
cp
f
232.882 385.895 mo
216.192 385.895 li
216.192 360.461 li
232.882 360.461 li
232.882 385.895 li
cp
f
271.444 385.895 mo
130.336 385.895 li
130.336 393.936 li
271.444 393.936 li
271.444 385.895 li
cp
.219669 .158785 .150515 0 cmyk
f
140.281 393.936 mo
130.374 393.936 li
129.668 393.936 129.096 393.364 129.096 392.658 cv
129.096 387.173 li
129.096 386.467 129.668 385.895 130.374 385.895 cv
140.281 385.895 li
140.281 393.936 li
cp
.442878 .333776 .314092 .00613413 cmyk
f
214.748 353.542 mo
187.07 353.542 li
187.07 350.031 li
214.748 350.031 li
214.748 353.542 li
cp
.219669 .158785 .150515 0 cmyk
f
214.748 350.031 mo
187.07 350.031 li
187.07 347.466 li
214.748 347.466 li
214.748 350.031 li
cp
.110933 .0791333 .0738231 0 cmyk
f
186.375 353.542 mo
185.627 353.542 li
185.627 348.074 li
186.375 348.074 li
186.375 353.542 li
cp
f
167.855 360.461 mo
167.107 360.461 li
167.107 354.993 li
167.855 354.993 li
167.855 360.461 li
cp
f
161.339 360.461 mo
160.591 360.461 li
160.591 354.993 li
161.339 354.993 li
161.339 360.461 li
cp
f
233.963 360.461 mo
234.711 360.461 li
234.711 354.993 li
233.963 354.993 li
233.963 360.461 li
cp
f
240.479 360.461 mo
241.227 360.461 li
241.227 354.993 li
240.479 354.993 li
240.479 360.461 li
cp
f
216.192 353.542 mo
215.444 353.542 li
215.444 348.074 li
216.192 348.074 li
216.192 353.542 li
cp
f
182.707 360.461 mo
172.421 360.461 li
172.421 353.916 li
182.707 353.916 li
182.707 360.461 li
cp
.219669 .158785 .150515 0 cmyk
f
183.166 353.916 mo
171.961 353.916 li
171.613 353.916 171.33 353.633 171.33 353.284 cv
171.33 352.936 171.613 352.653 171.961 352.653 cv
183.166 352.653 li
183.515 352.653 183.797 352.936 183.797 353.284 cv
183.797 353.633 183.515 353.916 183.166 353.916 cv
cp
.442878 .333776 .314092 .00613413 cmyk
f
201.283 326.171 mo
201.283 321.363 li
200.535 321.363 li
200.535 326.171 li
198.334 327.082 187.07 332.198 187.07 341.48 cv
187.07 347.466 li
214.748 347.466 li
214.748 341.48 li
214.748 332.198 203.485 327.082 201.283 326.171 cv
cp
.219669 .158785 .150515 0 cmyk
f
191.177 338.297 mo
191.016 338.297 190.852 338.257 190.7 338.174 cv
190.215 337.911 190.036 337.303 190.301 336.818 cv
192.747 332.326 198.245 329.414 200.495 328.37 cv
201.001 328.137 201.592 328.356 201.823 328.856 cv
202.056 329.357 201.838 329.952 201.337 330.184 cv
199.267 331.144 194.219 333.806 192.056 337.775 cv
191.875 338.108 191.532 338.297 191.177 338.297 cv
cp
0 0 0 0 cmyk
f
190.062 342.48 mo
189.51 342.48 189.062 342.033 189.062 341.48 cv
189.062 341.184 189.076 340.893 189.105 340.606 cv
189.158 340.057 189.639 339.661 190.197 339.709 cv
190.747 339.762 191.149 340.252 191.095 340.801 cv
191.073 341.024 191.062 341.251 191.062 341.48 cv
191.062 342.033 190.614 342.48 190.062 342.48 cv
cp
f
177.938 345.429 mo
177.938 343.197 li
177.19 343.197 li
177.19 345.429 li
176.032 346.016 172.523 348.027 172.523 350.879 cv
172.523 352.653 li
182.605 352.653 li
182.605 350.879 li
182.605 348.028 179.096 346.016 177.938 345.429 cv
cp
.219669 .158785 .150515 0 cmyk
f
183.797 385.895 mo
185.627 385.895 li
185.627 360.461 li
183.797 360.461 li
183.797 385.895 li
cp
f
167.107 385.895 mo
168.936 385.895 li
168.936 360.461 li
167.107 360.461 li
167.107 385.895 li
cp
f
218.021 385.895 mo
216.192 385.895 li
216.192 360.461 li
218.021 360.461 li
218.021 385.895 li
cp
f
234.711 385.895 mo
232.882 385.895 li
232.882 360.461 li
234.711 360.461 li
234.711 385.895 li
cp
f
200.909 359.672 mo
200.909 359.672 190.863 364.17 190.863 369.718 cv
190.863 385.895 li
210.955 385.895 li
210.955 369.718 li
210.955 364.17 200.909 359.672 200.909 359.672 cv
cp
.252415 .199252 .203738 0 cmyk
f
176.161 365.302 mo
176.161 365.302 172.586 366.354 172.586 368.615 cv
172.586 372.347 li
179.736 372.347 li
179.736 368.615 li
179.736 366.354 176.161 365.302 176.161 365.302 cv
cp
.442878 .333776 .314092 .00613413 cmyk
f
177.564 354.804 mo
177.564 354.804 176.021 355.649 176.021 357.464 cv
176.021 360.461 li
179.107 360.461 li
179.107 357.464 li
179.107 355.649 177.564 354.804 177.564 354.804 cv
cp
f
200.909 365.302 mo
200.909 365.302 197.334 366.354 197.334 368.615 cv
197.334 372.347 li
204.484 372.347 li
204.484 368.615 li
204.484 366.354 200.909 365.302 200.909 365.302 cv
cp
f
200.909 376.346 mo
200.909 376.346 197.334 377.398 197.334 379.659 cv
197.334 383.392 li
204.484 383.392 li
204.484 379.659 li
204.484 377.398 200.909 376.346 200.909 376.346 cv
cp
f
176.161 376.346 mo
176.161 376.346 172.586 377.398 172.586 379.659 cv
172.586 383.392 li
179.736 383.392 li
179.736 379.659 li
179.736 377.398 176.161 376.346 176.161 376.346 cv
cp
f
225.657 365.302 mo
225.657 365.302 229.232 366.354 229.232 368.615 cv
229.232 372.347 li
222.082 372.347 li
222.082 368.615 li
222.082 366.354 225.657 365.302 225.657 365.302 cv
cp
f
225.657 376.346 mo
225.657 376.346 229.232 377.398 229.232 379.659 cv
229.232 383.392 li
222.082 383.392 li
222.082 379.659 li
222.082 377.398 225.657 376.346 225.657 376.346 cv
cp
f
214.748 347.466 mo
187.07 347.466 li
187.07 344.901 li
214.748 344.901 li
214.748 347.466 li
cp
.219669 .158785 .150515 0 cmyk
f
173.964 357.464 mo
173.964 355.648 172.421 354.804 172.421 354.804 cv
172.421 360.461 li
173.964 360.461 li
173.964 357.464 li
cp
.442878 .333776 .314092 .00613413 cmyk
f
181.164 357.464 mo
181.164 355.648 182.707 354.804 182.707 354.804 cv
182.707 360.461 li
181.164 360.461 li
181.164 357.464 li
cp
f
219.112 360.461 mo
229.398 360.461 li
229.398 353.916 li
219.112 353.916 li
219.112 360.461 li
cp
.219669 .158785 .150515 0 cmyk
f
218.652 353.916 mo
229.857 353.916 li
230.206 353.916 230.488 353.633 230.488 353.284 cv
230.488 352.936 230.206 352.653 229.857 352.653 cv
218.652 352.653 li
218.303 352.653 218.021 352.936 218.021 353.284 cv
218.021 353.633 218.303 353.916 218.652 353.916 cv
cp
.442878 .333776 .314092 .00613413 cmyk
f
224.628 345.429 mo
224.628 343.197 li
223.88 343.197 li
223.88 345.429 li
222.722 346.016 219.214 348.028 219.214 350.879 cv
219.214 352.653 li
229.296 352.653 li
229.296 350.879 li
229.296 348.027 225.786 346.016 224.628 345.429 cv
cp
.219669 .158785 .150515 0 cmyk
f
224.255 354.804 mo
224.255 354.804 225.798 355.649 225.798 357.464 cv
225.798 360.461 li
222.712 360.461 li
222.712 357.464 li
222.712 355.649 224.255 354.804 224.255 354.804 cv
cp
.442878 .333776 .314092 .00613413 cmyk
f
227.855 357.464 mo
227.855 355.648 229.398 354.804 229.398 354.804 cv
229.398 360.461 li
227.855 360.461 li
227.855 357.464 li
cp
f
220.655 357.464 mo
220.655 355.648 219.112 354.804 219.112 354.804 cv
219.112 360.461 li
220.655 360.461 li
220.655 357.464 li
cp
f
139.041 385.895 mo
130.336 385.895 li
131.754 334.466 li
137.623 334.466 li
139.041 385.895 li
cp
.110933 .0791333 .0738231 0 cmyk
f
134.922 322.862 mo
134.922 321.469 li
134.455 321.469 li
134.455 322.862 li
133.733 323.228 131.542 324.484 131.542 326.264 cv
131.542 327.371 li
137.835 327.371 li
137.835 326.264 li
137.835 324.484 135.645 323.229 134.922 322.862 cv
cp
.219669 .158785 .150515 0 cmyk
f
138.914 370.84 mo
130.463 370.84 li
129.964 370.84 129.559 371.245 129.559 371.744 cv
129.559 372.243 129.964 372.648 130.463 372.648 cv
138.914 372.648 li
139.413 372.648 139.818 372.243 139.818 371.744 cv
139.818 371.245 139.413 370.84 138.914 370.84 cv
cp
.442878 .333776 .314092 .00613413 cmyk
f
138.571 351.749 mo
130.806 351.749 li
130.307 351.749 129.902 352.154 129.902 352.653 cv
129.902 353.152 130.307 353.557 130.806 353.557 cv
138.571 353.557 li
139.071 353.557 139.475 353.152 139.475 352.653 cv
139.475 352.154 139.071 351.749 138.571 351.749 cv
cp
f
137.648 335.37 mo
131.729 335.37 li
131.687 336.897 li
137.69 336.897 li
137.648 335.37 li
cp
.219669 .158785 .150515 0 cmyk
f
137.623 334.466 mo
131.754 334.466 li
131.729 335.37 li
137.648 335.37 li
137.623 334.466 li
cp
.110933 .0791333 .0738231 0 cmyk
f
130.66 374.175 mo
138.718 374.175 li
138.676 372.648 li
130.702 372.648 li
130.66 374.175 li
cp
.219669 .158785 .150515 0 cmyk
f
138.15 353.557 mo
131.228 353.557 li
131.186 355.084 li
138.192 355.084 li
138.15 353.557 li
cp
f
137.636 333.562 mo
131.741 333.562 li
131.242 333.562 130.837 333.967 130.837 334.466 cv
130.837 334.965 131.242 335.37 131.741 335.37 cv
137.636 335.37 li
138.136 335.37 138.54 334.965 138.54 334.466 cv
138.54 333.967 138.136 333.562 137.636 333.562 cv
cp
.442878 .333776 .314092 .00613413 cmyk
f
137.636 327.371 mo
131.741 327.371 li
131.242 327.371 130.837 327.776 130.837 328.275 cv
130.837 328.774 131.242 329.179 131.741 329.179 cv
137.636 329.179 li
138.136 329.179 138.54 328.774 138.54 328.275 cv
138.54 327.776 138.136 327.371 137.636 327.371 cv
cp
f
135.197 329.179 mo
134.18 329.179 li
134.18 333.562 li
135.197 333.562 li
135.197 329.179 li
cp
.110933 .0791333 .0738231 0 cmyk
f
132.704 329.179 mo
131.687 329.179 li
131.687 333.562 li
132.704 333.562 li
132.704 329.179 li
cp
f
136.673 329.179 mo
137.69 329.179 li
137.69 333.562 li
136.673 333.562 li
136.673 329.179 li
cp
f
156.452 385.895 mo
150.473 385.895 li
151.447 350.567 li
155.479 350.567 li
156.452 385.895 li
cp
f
153.623 342.596 mo
153.623 341.639 li
153.302 341.639 li
153.302 342.596 li
152.806 342.847 151.301 343.71 151.301 344.932 cv
151.301 345.693 li
155.624 345.693 li
155.624 344.932 li
155.624 343.71 154.12 342.848 153.623 342.596 cv
cp
f
156.365 375.553 mo
150.56 375.553 li
150.217 375.553 149.939 375.831 149.939 376.174 cv
149.939 376.517 150.217 376.795 150.56 376.795 cv
156.365 376.795 li
156.708 376.795 156.986 376.517 156.986 376.174 cv
156.986 375.831 156.708 375.553 156.365 375.553 cv
cp
.442878 .333776 .314092 .00613413 cmyk
f
156.13 362.439 mo
150.796 362.439 li
150.453 362.439 150.175 362.717 150.175 363.06 cv
150.175 363.403 150.453 363.681 150.796 363.681 cv
156.13 363.681 li
156.473 363.681 156.751 363.403 156.751 363.06 cv
156.751 362.717 156.473 362.439 156.13 362.439 cv
cp
f
155.496 351.188 mo
151.43 351.188 li
151.401 352.237 li
155.525 352.237 li
155.496 351.188 li
cp
.219669 .158785 .150515 0 cmyk
f
155.479 350.567 mo
151.447 350.567 li
151.43 351.188 li
155.496 351.188 li
155.479 350.567 li
cp
.110933 .0791333 .0738231 0 cmyk
f
150.695 377.844 mo
156.231 377.844 li
156.202 376.795 li
150.724 376.795 li
150.695 377.844 li
cp
.219669 .158785 .150515 0 cmyk
f
155.84 363.681 mo
151.085 363.681 li
151.056 364.73 li
155.869 364.73 li
155.84 363.681 li
cp
f
155.488 349.946 mo
151.438 349.946 li
151.095 349.946 150.817 350.224 150.817 350.567 cv
150.817 350.91 151.095 351.188 151.438 351.188 cv
155.488 351.188 li
155.83 351.188 156.108 350.91 156.108 350.567 cv
156.108 350.224 155.83 349.946 155.488 349.946 cv
cp
.442878 .333776 .314092 .00613413 cmyk
f
155.488 345.693 mo
151.438 345.693 li
151.095 345.693 150.817 345.971 150.817 346.314 cv
150.817 346.657 151.095 346.935 151.438 346.935 cv
155.488 346.935 li
155.83 346.935 156.108 346.657 156.108 346.314 cv
156.108 345.971 155.83 345.693 155.488 345.693 cv
cp
f
153.812 346.935 mo
153.113 346.935 li
153.113 349.946 li
153.812 349.946 li
153.812 346.935 li
cp
.110933 .0791333 .0738231 0 cmyk
f
152.1 346.935 mo
151.401 346.935 li
151.401 349.946 li
152.1 349.946 li
152.1 346.935 li
cp
f
154.826 346.935 mo
155.525 346.935 li
155.525 349.946 li
154.826 349.946 li
154.826 346.935 li
cp
f
245.366 385.895 mo
251.345 385.895 li
250.372 350.567 li
246.34 350.567 li
245.366 385.895 li
cp
f
248.195 342.596 mo
248.195 341.639 li
248.516 341.639 li
248.516 342.596 li
249.012 342.847 250.517 343.71 250.517 344.932 cv
250.517 345.693 li
246.194 345.693 li
246.194 344.932 li
246.194 343.71 247.699 342.848 248.195 342.596 cv
cp
f
245.453 375.553 mo
251.258 375.553 li
251.601 375.553 251.879 375.831 251.879 376.174 cv
251.879 376.517 251.601 376.795 251.258 376.795 cv
245.453 376.795 li
245.11 376.795 244.832 376.517 244.832 376.174 cv
244.832 375.831 245.11 375.553 245.453 375.553 cv
cp
.442878 .333776 .314092 .00613413 cmyk
f
245.689 362.439 mo
251.023 362.439 li
251.366 362.439 251.644 362.717 251.644 363.06 cv
251.644 363.403 251.366 363.681 251.023 363.681 cv
245.689 363.681 li
245.346 363.681 245.068 363.403 245.068 363.06 cv
245.068 362.717 245.346 362.439 245.689 362.439 cv
cp
f
246.323 351.188 mo
250.389 351.188 li
250.418 352.237 li
246.294 352.237 li
246.323 351.188 li
cp
.219669 .158785 .150515 0 cmyk
f
246.34 350.567 mo
250.372 350.567 li
250.389 351.188 li
246.323 351.188 li
246.34 350.567 li
cp
.110933 .0791333 .0738231 0 cmyk
f
251.123 377.844 mo
245.588 377.844 li
245.617 376.795 li
251.095 376.795 li
251.123 377.844 li
cp
.219669 .158785 .150515 0 cmyk
f
245.978 363.681 mo
250.733 363.681 li
250.762 364.73 li
245.949 364.73 li
245.978 363.681 li
cp
f
246.331 349.946 mo
250.38 349.946 li
250.723 349.946 251.001 350.224 251.001 350.567 cv
251.001 350.91 250.723 351.188 250.38 351.188 cv
246.331 351.188 li
245.988 351.188 245.71 350.91 245.71 350.567 cv
245.71 350.224 245.988 349.946 246.331 349.946 cv
cp
.442878 .333776 .314092 .00613413 cmyk
f
246.331 345.693 mo
250.38 345.693 li
250.723 345.693 251.001 345.971 251.001 346.314 cv
251.001 346.657 250.723 346.935 250.38 346.935 cv
246.331 346.935 li
245.988 346.935 245.71 346.657 245.71 346.314 cv
245.71 345.971 245.988 345.693 246.331 345.693 cv
cp
f
248.006 346.935 mo
248.705 346.935 li
248.705 349.946 li
248.006 349.946 li
248.006 346.935 li
cp
.110933 .0791333 .0738231 0 cmyk
f
249.719 346.935 mo
250.418 346.935 li
250.418 349.946 li
249.719 349.946 li
249.719 346.935 li
cp
f
246.992 346.935 mo
246.294 346.935 li
246.294 349.946 li
246.992 349.946 li
246.992 346.935 li
cp
f
261.537 393.936 mo
271.444 393.936 li
272.15 393.936 272.722 393.364 272.722 392.658 cv
272.722 387.173 li
272.722 386.467 272.15 385.895 271.444 385.895 cv
261.537 385.895 li
261.537 393.936 li
cp
.442878 .333776 .314092 .00613413 cmyk
f
262.777 385.895 mo
271.482 385.895 li
270.064 334.466 li
264.195 334.466 li
262.777 385.895 li
cp
.110933 .0791333 .0738231 0 cmyk
f
266.896 322.862 mo
266.896 321.469 li
267.363 321.469 li
267.363 322.862 li
268.086 323.228 270.276 324.484 270.276 326.264 cv
270.276 327.371 li
263.983 327.371 li
263.983 326.264 li
263.983 324.484 266.173 323.229 266.896 322.862 cv
cp
.219669 .158785 .150515 0 cmyk
f
262.904 370.84 mo
271.355 370.84 li
271.854 370.84 272.259 371.245 272.259 371.744 cv
272.259 372.243 271.854 372.648 271.355 372.648 cv
262.904 372.648 li
262.405 372.648 262 372.243 262 371.744 cv
262 371.245 262.405 370.84 262.904 370.84 cv
cp
.442878 .333776 .314092 .00613413 cmyk
f
263.247 351.749 mo
271.012 351.749 li
271.512 351.749 271.916 352.154 271.916 352.653 cv
271.916 353.152 271.512 353.557 271.012 353.557 cv
263.247 353.557 li
262.748 353.557 262.343 353.152 262.343 352.653 cv
262.343 352.154 262.748 351.749 263.247 351.749 cv
cp
f
264.17 335.37 mo
270.089 335.37 li
270.131 336.897 li
264.128 336.897 li
264.17 335.37 li
cp
.219669 .158785 .150515 0 cmyk
f
264.195 334.466 mo
270.064 334.466 li
270.089 335.37 li
264.17 335.37 li
264.195 334.466 li
cp
.110933 .0791333 .0738231 0 cmyk
f
271.159 374.175 mo
263.1 374.175 li
263.142 372.648 li
271.117 372.648 li
271.159 374.175 li
cp
.219669 .158785 .150515 0 cmyk
f
263.669 353.557 mo
270.591 353.557 li
270.633 355.084 li
263.627 355.084 li
263.669 353.557 li
cp
f
264.182 333.562 mo
270.077 333.562 li
270.576 333.562 270.981 333.967 270.981 334.466 cv
270.981 334.965 270.576 335.37 270.077 335.37 cv
264.182 335.37 li
263.683 335.37 263.278 334.965 263.278 334.466 cv
263.278 333.967 263.683 333.562 264.182 333.562 cv
cp
.442878 .333776 .314092 .00613413 cmyk
f
264.182 327.371 mo
270.077 327.371 li
270.576 327.371 270.981 327.776 270.981 328.275 cv
270.981 328.774 270.576 329.179 270.077 329.179 cv
264.182 329.179 li
263.683 329.179 263.278 328.774 263.278 328.275 cv
263.278 327.776 263.683 327.371 264.182 327.371 cv
cp
f
266.621 329.179 mo
267.638 329.179 li
267.638 333.562 li
266.621 333.562 li
266.621 329.179 li
cp
.110933 .0791333 .0738231 0 cmyk
f
269.114 329.179 mo
270.131 329.179 li
270.131 333.562 li
269.114 333.562 li
269.114 329.179 li
cp
f
265.145 329.179 mo
264.128 329.179 li
264.128 333.562 li
265.145 333.562 li
265.145 329.179 li
cp
f
213.948 350.031 mo
187.871 350.031 li
187.871 347.466 li
213.948 347.466 li
213.948 350.031 li
cp
0 0 0 0 cmyk
f
59.0264 332.095 mo
43.3438 332.095 li
41.5394 332.095 40.0766 333.558 40.0766 335.362 cv
40.0766 335.889 li
62.2937 335.889 li
62.2937 335.362 li
62.2937 333.558 60.8309 332.095 59.0264 332.095 cv
cp
.447272 .562036 .667903 .253819 cmyk
f
62.2937 335.889 mo
40.0766 335.889 li
40.0766 342.739 li
62.2937 342.739 li
62.2937 335.889 li
cp
.216098 .367163 .478767 .00329595 cmyk
f
55.8246 325.245 mo
46.5456 325.245 li
45.1428 325.245 44.0056 326.383 44.0056 327.785 cv
44.0056 332.095 li
58.3646 332.095 li
58.3646 327.785 li
58.3646 326.383 57.2274 325.245 55.8246 325.245 cv
cp
.447272 .562036 .667903 .253819 cmyk
f
88.0285 388.12 mo
14.3418 388.12 li
14.3418 394.578 li
88.0285 394.578 li
88.0285 388.12 li
.292302 .416541 .530663 .0246281 cmyk
f
88.0285 386.293 mo
14.3418 386.293 li
14.3418 388.12 li
88.0285 388.12 li
88.0285 386.293 li
.437568 .533104 .637446 .202029 cmyk
f
84.0822 379.835 mo
18.2881 379.835 li
18.2881 386.293 li
84.0822 386.293 li
84.0822 379.835 li
.292302 .416541 .530663 .0246281 cmyk
f
84.0822 378.009 mo
18.2881 378.009 li
18.2881 379.835 li
84.0822 379.835 li
84.0822 378.009 li
.437568 .533104 .637446 .202029 cmyk
f
79.3672 371.55 mo
23.003 371.55 li
23.003 378.009 li
79.3672 378.009 li
79.3672 371.55 li
.292302 .416541 .530663 .0246281 cmyk
f
79.3672 369.724 mo
23.003 369.724 li
23.003 371.55 li
79.3672 371.55 li
79.3672 369.724 li
.437568 .533104 .637446 .202029 cmyk
f
75.081 363.265 mo
27.2892 363.265 li
27.2892 369.724 li
75.081 369.724 li
75.081 363.265 li
.292302 .416541 .530663 .0246281 cmyk
f
75.081 361.439 mo
27.2892 361.439 li
27.2892 363.265 li
75.081 363.265 li
75.081 361.439 li
.437568 .533104 .637446 .202029 cmyk
f
70.9019 354.98 mo
31.4684 354.98 li
31.4684 361.439 li
70.9019 361.439 li
70.9019 354.98 li
.292302 .416541 .530663 .0246281 cmyk
f
70.9019 353.154 mo
31.4684 353.154 li
31.4684 354.98 li
70.9019 354.98 li
70.9019 353.154 li
.437568 .533104 .637446 .202029 cmyk
f
66.7228 346.695 mo
35.6475 346.695 li
35.6475 353.154 li
66.7228 353.154 li
66.7228 346.695 li
.292302 .416541 .530663 .0246281 cmyk
f
66.7228 344.869 mo
35.6475 344.869 li
35.6475 346.695 li
66.7228 346.695 li
66.7228 344.869 li
.437568 .533104 .637446 .202029 cmyk
f
53.5529 335.889 mo
48.8173 335.889 li
48.8173 342.739 li
53.5529 342.739 li
53.5529 335.889 li
cp
.704799 .642542 .634211 .652674 cmyk
f
53.0425 318.396 mo
49.3277 318.396 li
46.9524 321.024 li
46.9524 325.245 li
49.3277 325.245 li
53.0425 325.245 li
55.4178 325.245 li
55.4178 321.024 li
53.0425 318.396 li
cp
.447272 .562036 .667903 .253819 cmyk
f
81.1889 394.578 mo
21.1814 394.578 li
21.1814 388.12 li
81.1889 388.12 li
81.1889 394.578 li
.343297 .470924 .594354 .0779126 cmyk
f
81.1889 388.12 mo
21.1814 388.12 li
21.1814 388.12 li
21.1814 386.293 li
24.3952 386.293 li
77.9751 386.293 li
81.1889 386.293 li
81.1889 388.12 li
.463478 .564752 .670344 .275486 cmyk
f
77.9751 386.293 mo
24.3952 386.293 li
24.3952 379.835 li
77.9751 379.835 li
77.9751 386.293 li
.343297 .470924 .594354 .0779126 cmyk
f
77.9751 379.835 mo
24.3952 379.835 li
24.3952 378.009 li
28.2347 378.009 li
74.1356 378.009 li
77.9751 378.009 li
77.9751 379.835 li
.463478 .564752 .670344 .275486 cmyk
f
74.1356 378.009 mo
28.2347 378.009 li
28.2347 371.55 li
28.2347 371.55 li
74.1356 371.55 li
74.1356 371.55 li
74.1356 378.009 li
.343297 .470924 .594354 .0779126 cmyk
f
74.1356 371.55 mo
28.2347 371.55 li
28.2347 369.724 li
31.7252 369.724 li
70.645 369.724 li
74.1356 369.724 li
74.1356 371.55 li
.463478 .564752 .670344 .275486 cmyk
f
70.645 369.724 mo
31.7252 369.724 li
31.7252 363.265 li
70.645 363.265 li
70.645 369.724 li
.343297 .470924 .594354 .0779126 cmyk
f
70.645 363.265 mo
31.7252 363.265 li
31.7252 361.439 li
35.1286 361.439 li
67.2417 361.439 li
70.645 361.439 li
70.645 363.265 li
.463478 .564752 .670344 .275486 cmyk
f
67.2417 361.439 mo
35.1286 361.439 li
35.1286 354.98 li
67.2417 354.98 li
67.2417 361.439 li
.343297 .470924 .594354 .0779126 cmyk
f
67.2417 354.98 mo
35.1286 354.98 li
35.1286 353.154 li
38.5319 353.154 li
63.8384 353.154 li
67.2417 353.154 li
67.2417 354.98 li
.463478 .564752 .670344 .275486 cmyk
f
63.8384 353.154 mo
38.5319 353.154 li
38.5319 346.695 li
63.8384 346.695 li
63.8384 353.154 li
.343297 .470924 .594354 .0779126 cmyk
f
63.8384 346.695 mo
38.5319 346.695 li
38.5319 344.869 li
63.8384 344.869 li
63.8384 346.695 li
.463478 .564752 .670344 .275486 cmyk
f
77.6527 390.521 mo
24.7175 390.521 li
24.7175 397.338 li
77.6527 397.338 li
77.6527 390.521 li
cp
.216098 .367163 .478767 .00329595 cmyk
f
77.6527 388.593 mo
24.7175 388.593 li
24.7175 390.521 li
77.6527 390.521 li
77.6527 388.593 li
cp
.353704 .445655 .551232 .0619516 cmyk
f
74.8177 381.776 mo
27.5525 381.776 li
27.5525 388.593 li
74.8177 388.593 li
74.8177 381.776 li
cp
.216098 .367163 .478767 .00329595 cmyk
f
74.8177 379.848 mo
27.5525 379.848 li
27.5525 381.776 li
74.8177 381.776 li
74.8177 379.848 li
cp
.353704 .445655 .551232 .0619516 cmyk
f
71.4306 373.031 mo
30.9396 373.031 li
30.9396 379.848 li
71.4306 379.848 li
71.4306 373.031 li
cp
.216098 .367163 .478767 .00329595 cmyk
f
71.4306 371.103 mo
30.9396 371.103 li
30.9396 373.031 li
71.4306 373.031 li
71.4306 371.103 li
cp
.353704 .445655 .551232 .0619516 cmyk
f
68.3515 364.286 mo
34.0188 364.286 li
34.0188 371.103 li
68.3515 371.103 li
68.3515 364.286 li
cp
.216098 .367163 .478767 .00329595 cmyk
f
68.3515 362.358 mo
34.0188 362.358 li
34.0188 364.286 li
68.3515 364.286 li
68.3515 362.358 li
cp
.353704 .445655 .551232 .0619516 cmyk
f
65.3493 355.541 mo
37.0209 355.541 li
37.0209 362.358 li
65.3493 362.358 li
65.3493 355.541 li
cp
.216098 .367163 .478767 .00329595 cmyk
f
65.3493 353.614 mo
37.0209 353.614 li
37.0209 355.541 li
65.3493 355.541 li
65.3493 353.614 li
cp
.353704 .445655 .551232 .0619516 cmyk
f
62.3471 346.796 mo
40.0231 346.796 li
40.0231 353.614 li
62.3471 353.614 li
62.3471 346.796 li
cp
.216098 .367163 .478767 .00329595 cmyk
f
62.3471 344.869 mo
40.0231 344.869 li
40.0231 346.796 li
62.3471 346.796 li
62.3471 344.869 li
cp
.353704 .445655 .551232 .0619516 cmyk
f
62.2937 342.739 mo
40.0766 342.739 li
40.0766 344.869 li
62.2937 344.869 li
62.2937 342.739 li
cp
.447272 .562036 .667903 .253819 cmyk
f
59.2219 342.739 mo
43.1484 342.739 li
43.1484 401.74 li
59.2219 401.74 li
59.2219 342.739 li
cp
.437568 .533104 .637446 .202029 cmyk
f
54.9088 342.739 mo
47.4614 342.739 li
47.4614 397.338 li
54.9088 397.338 li
54.9088 342.739 li
cp
.292302 .416541 .530663 .0246281 cmyk
f
54.9088 345.006 mo
47.4614 345.006 li
47.4614 344.217 li
54.9088 344.217 li
54.9088 345.006 li
cp
.437568 .533104 .637446 .202029 cmyk
f
54.9088 346.813 mo
47.4614 346.813 li
47.4614 346.024 li
54.9088 346.024 li
54.9088 346.813 li
cp
f
54.9088 348.619 mo
47.4614 348.619 li
47.4614 347.831 li
54.9088 347.831 li
54.9088 348.619 li
cp
f
54.9088 350.426 mo
47.4614 350.426 li
47.4614 349.638 li
54.9088 349.638 li
54.9088 350.426 li
cp
f
54.9088 352.233 mo
47.4614 352.233 li
47.4614 351.445 li
54.9088 351.445 li
54.9088 352.233 li
cp
f
54.9088 354.039 mo
47.4614 354.039 li
47.4614 353.251 li
54.9088 353.251 li
54.9088 354.039 li
cp
f
54.9088 355.847 mo
47.4614 355.847 li
47.4614 355.058 li
54.9088 355.058 li
54.9088 355.847 li
cp
f
54.9088 357.654 mo
47.4614 357.654 li
47.4614 356.865 li
54.9088 356.865 li
54.9088 357.654 li
cp
f
54.9088 359.46 mo
47.4614 359.46 li
47.4614 358.672 li
54.9088 358.672 li
54.9088 359.46 li
cp
f
54.9088 361.267 mo
47.4614 361.267 li
47.4614 360.479 li
54.9088 360.479 li
54.9088 361.267 li
cp
f
54.9088 363.074 mo
47.4614 363.074 li
47.4614 362.286 li
54.9088 362.286 li
54.9088 363.074 li
cp
f
54.9088 364.88 mo
47.4614 364.88 li
47.4614 364.092 li
54.9088 364.092 li
54.9088 364.88 li
cp
f
54.9088 366.688 mo
47.4614 366.688 li
47.4614 365.899 li
54.9088 365.899 li
54.9088 366.688 li
cp
f
54.9088 368.495 mo
47.4614 368.495 li
47.4614 367.706 li
54.9088 367.706 li
54.9088 368.495 li
cp
f
54.9088 370.301 mo
47.4614 370.301 li
47.4614 369.513 li
54.9088 369.513 li
54.9088 370.301 li
cp
f
54.9088 372.108 mo
47.4614 372.108 li
47.4614 371.32 li
54.9088 371.32 li
54.9088 372.108 li
cp
f
54.9088 373.915 mo
47.4614 373.915 li
47.4614 373.127 li
54.9088 373.127 li
54.9088 373.915 li
cp
f
54.9088 375.721 mo
47.4614 375.721 li
47.4614 374.933 li
54.9088 374.933 li
54.9088 375.721 li
cp
f
54.9088 377.529 mo
47.4614 377.529 li
47.4614 376.74 li
54.9088 376.74 li
54.9088 377.529 li
cp
f
54.9088 379.336 mo
47.4614 379.336 li
47.4614 378.547 li
54.9088 378.547 li
54.9088 379.336 li
cp
f
54.9088 381.142 mo
47.4614 381.142 li
47.4614 380.354 li
54.9088 380.354 li
54.9088 381.142 li
cp
f
54.9088 382.949 mo
47.4614 382.949 li
47.4614 382.161 li
54.9088 382.161 li
54.9088 382.949 li
cp
f
54.9088 384.756 mo
47.4614 384.756 li
47.4614 383.968 li
54.9088 383.968 li
54.9088 384.756 li
cp
f
54.9088 386.562 mo
47.4614 386.562 li
47.4614 385.774 li
54.9088 385.774 li
54.9088 386.562 li
cp
f
54.9088 388.37 mo
47.4614 388.37 li
47.4614 387.581 li
54.9088 387.581 li
54.9088 388.37 li
cp
f
54.9088 390.177 mo
47.4614 390.177 li
47.4614 389.388 li
54.9088 389.388 li
54.9088 390.177 li
cp
f
54.9088 391.983 mo
47.4614 391.983 li
47.4614 391.195 li
54.9088 391.195 li
54.9088 391.983 li
cp
f
54.9088 393.79 mo
47.4614 393.79 li
47.4614 393.002 li
54.9088 393.002 li
54.9088 393.79 li
cp
f
54.9088 395.597 mo
47.4614 395.597 li
47.4614 394.809 li
54.9088 394.809 li
54.9088 395.597 li
cp
f
54.9088 397.403 mo
47.4614 397.403 li
47.4614 396.615 li
54.9088 396.615 li
54.9088 397.403 li
cp
f
59.2219 397.338 mo
43.1484 397.338 li
43.1484 402.143 li
59.2219 402.143 li
59.2219 397.338 li
cp
.292302 .416541 .530663 .0246281 cmyk
f
59.2219 399.211 mo
43.1484 399.211 li
43.1484 398.422 li
59.2219 398.422 li
59.2219 399.211 li
cp
.437568 .533104 .637446 .202029 cmyk
f
59.2219 401.018 mo
43.1484 401.018 li
43.1484 400.229 li
59.2219 400.229 li
59.2219 401.018 li
cp
f
366.97 387.425 mo
349.916 366.188 li
348.786 364.781 346.644 364.781 345.515 366.188 cv
328.461 387.425 li
326.977 389.272 328.292 392.015 330.661 392.015 cv
364.769 392.015 li
367.138 392.015 368.453 389.272 366.97 387.425 cv
cp
.254276 .154055 0 0 cmyk
f
350.692 388.168 mo
336.396 370.365 li
335.449 369.186 333.654 369.186 332.706 370.365 cv
318.411 388.168 li
317.167 389.716 318.269 392.015 320.255 392.015 cv
348.847 392.015 li
350.833 392.015 351.935 389.716 350.692 388.168 cv
cp
f
326.18 389.078 mo
315.269 375.491 li
314.546 374.591 313.176 374.591 312.453 375.491 cv
301.542 389.078 li
300.592 390.26 301.434 392.015 302.95 392.015 cv
324.772 392.015 li
326.288 392.015 327.129 390.26 326.18 389.078 cv
cp
f
377.881 389.078 mo
366.969 375.491 li
366.246 374.591 364.876 374.591 364.153 375.491 cv
353.242 389.078 li
352.293 390.26 353.134 392.015 354.65 392.015 cv
376.473 392.015 li
377.988 392.015 378.83 390.26 377.881 389.078 cv
cp
f
368.517 340.05 mo
310.642 340.05 li
310.642 342.373 li
310.642 343.722 311.709 344.825 313.057 344.861 cv
317.935 344.993 329.367 345.27 339.579 345.27 cv
349.792 345.27 361.224 344.993 366.102 344.861 cv
367.45 344.825 368.517 343.722 368.517 342.373 cv
368.517 340.05 li
cp
.0368658 .854948 .825345 .002533 cmyk
f
368.517 351.498 mo
310.642 351.498 li
310.642 353.821 li
310.642 355.169 311.709 356.273 313.057 356.309 cv
317.935 356.441 329.367 356.717 339.579 356.717 cv
349.792 356.717 361.224 356.441 366.102 356.309 cv
367.45 356.273 368.517 355.169 368.517 353.821 cv
368.517 351.498 li
cp
f
368.517 335.903 mo
310.642 335.903 li
310.642 340.646 li
310.642 340.646 328.012 341.99 339.579 341.99 cv
351.147 341.99 368.517 340.646 368.517 340.646 cv
368.517 335.903 li
cp
.17734 .909911 .95346 .0707713 cmyk
f
372.651 335.028 mo
350.691 337.802 328.468 337.802 306.508 335.028 cv
307.492 336.14 308.49 337.247 309.5 338.349 cv
329.489 340.617 349.67 340.617 369.659 338.349 cv
370.669 337.247 371.667 336.14 372.651 335.028 cv
cp
.533043 .369696 .397864 .0384527 cmyk
f
377.421 332.531 mo
352.293 335.705 326.866 335.705 301.738 332.531 cv
302.85 333.917 303.978 335.298 305.123 336.672 cv
328.02 339.27 351.138 339.27 374.036 336.672 cv
375.181 335.298 376.309 333.917 377.421 332.531 cv
cp
.704799 .642542 .634211 .652674 cmyk
f
326.581 348.489 mo
322.527 348.489 li
320.619 388.795 li
326.581 388.795 li
326.581 348.489 li
cp
.0368658 .854948 .825345 .002533 cmyk
f
327.148 344.584 mo
321.961 344.584 li
321.961 348.489 li
327.148 348.489 li
327.148 344.584 li
cp
f
327.834 388.795 mo
319.367 388.795 li
319.367 392.015 li
327.834 392.015 li
327.834 388.795 li
cp
.704799 .642542 .634211 .652674 cmyk
f
328.311 364.26 mo
324.077 362.322 li
319.844 364.26 li
319.844 365.542 li
328.311 365.542 li
328.311 364.26 li
cp
f
327.67 365.542 mo
320.485 365.542 li
320.485 367.092 li
327.67 367.092 li
327.67 365.542 li
cp
.0368658 .854948 .825345 .002533 cmyk
f
322.147 356.521 mo
322.037 358.835 li
323.479 358.863 325.002 358.891 326.581 358.916 cv
326.581 356.601 li
325.042 356.576 323.556 356.549 322.147 356.521 cv
cp
.17734 .909911 .95346 .0707713 cmyk
f
324.077 368.881 mo
324.077 368.881 li
323.682 368.881 323.362 369.201 323.362 369.596 cv
323.362 371.107 li
323.362 371.502 323.682 371.822 324.077 371.822 cv
324.472 371.822 324.793 371.502 324.793 371.107 cv
324.793 369.596 li
324.793 369.201 324.472 368.881 324.077 368.881 cv
cp
.005066 .18265 .997284 0 cmyk
f
334.551 343.819 mo
334.551 343.819 li
334.551 344.214 334.872 344.534 335.267 344.534 cv
336.777 344.534 li
337.172 344.534 337.493 344.214 337.493 343.819 cv
337.493 343.424 337.172 343.103 336.777 343.103 cv
335.267 343.103 li
334.872 343.103 334.551 343.424 334.551 343.819 cv
cp
f
344.608 343.819 mo
344.608 343.819 li
344.608 344.214 344.287 344.534 343.892 344.534 cv
342.382 344.534 li
341.987 344.534 341.666 344.214 341.666 343.819 cv
341.666 343.424 341.987 343.103 342.382 343.103 cv
343.892 343.103 li
344.287 343.103 344.608 343.424 344.608 343.819 cv
cp
f
323.799 381.163 mo
323.799 381.163 li
323.404 381.163 323.083 381.484 323.083 381.879 cv
323.083 383.389 li
323.083 383.784 323.404 384.105 323.799 384.105 cv
324.194 384.105 324.514 383.784 324.514 383.389 cv
324.514 381.879 li
324.514 381.484 324.194 381.163 323.799 381.163 cv
cp
f
326.581 348.489 mo
322.527 348.489 li
322.468 349.741 li
326.581 349.741 li
326.581 348.489 li
cp
.17734 .909911 .95346 .0707713 cmyk
f
352.578 348.489 mo
356.632 348.489 li
358.54 388.795 li
352.578 388.795 li
352.578 348.489 li
cp
.0368658 .854948 .825345 .002533 cmyk
f
352.011 344.584 mo
357.198 344.584 li
357.198 348.489 li
352.011 348.489 li
352.011 344.584 li
cp
f
351.325 388.795 mo
359.792 388.795 li
359.792 392.015 li
351.325 392.015 li
351.325 388.795 li
cp
.704799 .642542 .634211 .652674 cmyk
f
350.848 364.26 mo
355.082 362.322 li
359.315 364.26 li
359.315 365.542 li
350.848 365.542 li
350.848 364.26 li
cp
f
351.489 365.542 mo
358.674 365.542 li
358.674 367.092 li
351.489 367.092 li
351.489 365.542 li
cp
.0368658 .854948 .825345 .002533 cmyk
f
357.012 356.521 mo
357.122 358.835 li
355.68 358.863 354.157 358.891 352.578 358.916 cv
352.578 356.601 li
354.117 356.576 355.603 356.549 357.012 356.521 cv
cp
.17734 .909911 .95346 .0707713 cmyk
f
355.082 368.881 mo
355.082 368.881 li
355.477 368.881 355.797 369.201 355.797 369.596 cv
355.797 371.107 li
355.797 371.502 355.477 371.822 355.082 371.822 cv
354.687 371.822 354.366 371.502 354.366 371.107 cv
354.366 369.596 li
354.366 369.201 354.687 368.881 355.082 368.881 cv
cp
.005066 .18265 .997284 0 cmyk
f
355.36 381.163 mo
355.36 381.163 li
355.755 381.163 356.076 381.484 356.076 381.879 cv
356.076 383.389 li
356.076 383.784 355.755 384.105 355.36 384.105 cv
354.965 384.105 354.645 383.784 354.645 383.389 cv
354.645 381.879 li
354.645 381.484 354.965 381.163 355.36 381.163 cv
cp
f
352.578 348.489 mo
356.632 348.489 li
356.691 349.741 li
352.578 349.741 li
352.578 348.489 li
cp
.17734 .909911 .95346 .0707713 cmyk
f
343.038 343.103 mo
336.121 343.103 li
336.121 352.603 li
343.038 352.603 li
343.038 343.103 li
cp
.704799 .642542 .634211 .652674 cmyk
f
376.473 394.185 mo
376.473 394.185 li
376.473 392.987 375.501 392.015 374.302 392.015 cv
304.857 392.015 li
303.658 392.015 302.686 392.987 302.686 394.185 cv
302.686 395.384 303.658 396.356 304.857 396.356 cv
313.216 396.356 li
314.415 396.356 315.386 397.327 315.386 398.526 cv
315.386 399.725 314.415 400.696 313.216 400.696 cv
310.14 400.696 li
308.941 400.696 307.97 401.668 307.97 402.867 cv
307.97 402.867 li
307.97 404.065 308.941 405.037 310.14 405.037 cv
362.383 405.037 li
363.581 405.037 364.553 404.065 364.553 402.867 cv
364.553 402.867 li
364.553 401.668 363.581 400.696 362.383 400.696 cv
358.862 400.696 li
357.663 400.696 356.691 399.725 356.691 398.526 cv
356.691 397.327 357.663 396.356 358.862 396.356 cv
374.302 396.356 li
375.501 396.356 376.473 395.384 376.473 394.185 cv
cp
.712856 .280552 0 0 cmyk
f
371.101 400.696 mo
371.101 400.696 li
369.902 400.696 368.93 401.668 368.93 402.867 cv
368.93 404.065 369.902 405.037 371.101 405.037 cv
371.101 405.037 li
372.299 405.037 373.271 404.065 373.271 402.867 cv
373.271 401.668 372.299 400.696 371.101 400.696 cv
cp
f
326.318 396.356 mo
326.318 396.356 li
325.12 396.356 324.148 397.327 324.148 398.526 cv
324.148 399.725 325.12 400.696 326.318 400.696 cv
327.517 400.696 328.489 399.725 328.489 398.526 cv
328.489 397.327 327.517 396.356 326.318 396.356 cv
cp
0 0 0 0 cmyk
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 20.1.0
%%For: (Andrey Magda) ()
%%Title: (1611.m10.i306.n016.S.c12.245524051 famous architecture world travel vector landmarks icons.eps)
%%CreationDate: 11/7/2016 12:37 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb",KBj]l@oD&@Up[d)4!8`N>mK5+[78ZqO4p(qEKL:dQSUL!SmJj33N@:4JR2+QEXI=72X1PCtm-\s2(Xq2;Vlk06dbVYN+dNGR
%3/.`ZZlFtN_B8e^>hme'e\N)!>`_Am+mHK^EAW2=ECpd&X:pp[OiE:3DJdm(42Xt2>>kcZ9NU]V#Dl:>]@%!+.SoP%$!jOAhYf6p
%es0DHlD+db6XJ6lI(/!6L*7^8O[Abm<'D6d/O4j<Ug/9q[%XG"%YrCi^l@91RDZ'-GFMDKkBNDl=h*DKMJ(j6i+\&\i.>BK8Rt.<
%Vctth^:P[aU%FX=7hAZ7CToA/@9$?ii?)CIU*O\s6*V'CZURq,WmVjjF_T.#bQ1d5*jJP),U+"T(0MMJBMN/bSlFjV?(0oKZHP<<
%;^1iP+^%R9`"66Q'IU,jX-+kr-'iZlj;<HbFr6?qC[<Xtdu6uc1,@c4F_.X)nCUr2YUd%B.oIA'_@&Kj2Ul:M$RO0@2lnR7=II.b
%!`.XJaqAEDUKId_/'GT@!lKt#4Ot_#j^l%:_fLcm4Jd=`_A5jZM$%FGU&g^&Z',rS.`>!]-):j=jfgcL$ka$'AE4+O6;>bi*$k\1
%8.`aZLmI[rAgO34L68]#(+Xqq342jS&eMapF##-%"To5)"uAP!87e*Ab%)Ipb,J"<1m&]=B2Q=#_4t[2>StbP1j9[#js;2q+E@Na
%0jp+[-t"Z8+s&N!QW]1^/Pr#mR6se0)&,jY12)LVGVUrs!uuL7@47?D`i2;24A?#Y"JNX>d!/0I4EX2]BM,RGJaeI"0S]ag(G+2E
%R]%0Xp&QXa-pI.D1Hm#-83G9h$,hA!jFAU5%_n]UZpTqr!<E>(.+9qA/gr+mP!O.Cpa\;4!-'O[_QCm6n<\dBr%6!GnX%9<$Ern(
%el4phCeS"!.=Gd+FZWu2&hjM4<:DT+<?'(O*u`-Hj?UQC0G6-%G20uu!NCc^:Qp9mq9QRG-+gth(SgMM#OM*u?8E`_`#7s,8m,t_
%0`V>+";8h0(pa;BWW=:aUm#Ia.r)\o.moShEe`Q5HmiV)ESjm6@#PD"%(%()kd\E]Gd+!NKU4$MA*MN^RegY@[&5Br[;QuU<.A$$
%rW^9bn^pja/3Y*=CB(B1%=qph.?f`73:,3r*=-bekB2J\G8G\g[g>o/qG6Af]MqrSi<U\q&nO3f)RYLGG82,/D)QFi;`g943U(3N
%@REJ<!DO*P?oUM/_cfD1_G8R=CZm=6=<D<_GXWU;')80\^@n@F&hs[s<+'Cg7IBfV]&TL"'M-4s6:"jsrQ*QNfhil=3)ht?cY;Mb
%F6N1;<;`tZ:$4S19Xg#Z+5h!>Khd0ue%8E<;s/lt!u.N%8IHtl39ig6Xb2H0ptq5(9R8,O,C$`QmuD^J:8@^,s&N%jDH.,\[>l.\
%*eqbb88.+NV5[[<+3'?igp-tj57IHT3<qbMP_$iZU.>h\SO-U^*+p?pZsI98bN5$NX>U#TgBNP-CAhD>%D.%MjEg%"q@#<YD8tBA
%D>[dG=9d=]llZ.:n9N*"^kq1Ug8W0P4V-YeePX,!\*'Z1+=hkU<1kkS[Jp$%&,$GLi?5XA.E:Q^p.M3O^@=#m_O3g-?bt_a(G]sk
%3o<oMgV`^o[!k&4dZoj@G7Ei`[m(+_J[m!%=qX(%N"Ou!OeLPt1^>UB8(?LoY<IU<pL'5mDm'ja.Y-iIYGROm'>e:f;]kpYma.\*
%O`1L(neO>CTEngY>4SMRhqQ\aXps*F-LtKWP9+\'J.%=8/X5(&!u5&Rh$CP*K/S$FlL=S!%QQR>YVHCcd`@hf4G=2EqEqB^X6&f&
%U$>8R1Q&>N:OT(ke7t\!Il(hn.c%9,$i%uV"O7W@en$d"dq2_B6<aM*8hAigPf$Oa%$\B=Uq>8`T>EEaqjlc-+]Z:=;MK<&S7#2^
%3Fi$u2;mYW%fKI#Z"s;AfeZonaI!me(d0/N"#A`ACGd;=j$_7[7(<XF\JL7>T[PV$ZKr3:R5L1;1F<Yb)o`^_!d:olYLlQJ9gcJ&
%"u4@AcLP8.nt-6lDFLZg`@Kn42ma'j+//6r)lcAh7XNh)=^KurL#H2pQXr(WZcLj24,D'T&,6BcYMJ_i/2fAkVCCP6q0Wt[clqOC
%lh5HL!I'lc`?Rp*aE:Oa@8<Ti^JB-^&R,"2X`r]3$lI[LWhZ6pZ,.CZVYY^P*2_<:oQjm3&-sVi?K_fgL\PZ[*@!Og\3a-D@O/<e
%#,Ie;0@2XH+.5r"<I8Hjhgk#@D$(2m?idFT1c^&#ojQ;S2(%*K&X+\,J7YQ.K5!k27m55J.FdWHa?uV]U<V"<IJ6%FpXpnP0-;J;
%ol27!8ZqA_!16MYK:"DL\)W*!&+l;T;J+0A%S-K_#]cf23h8?%Xf6-AOae36dn/f)K9>TBk$*?X71M,EQHlFW>T50M<'N/(#6$=2
%&uYNhA6"nGRd[:1,7mU7`c;LeUPS5Xb<q95e4h0,5i?UUg<[Q[TR@`J[j[p,UL:Zq<%HFVL9'A'O2DBq#d*]amWlYXK_d*".sFM^
%R_!9.V"gY)(I9-5c^Pqs&^g!FI0J%M+/Clh+07,`DS+L@OIXUO])8F3OC2XG#M-4r,IA%nFu)\7-dV.h+L;G2]-+HW\!Y\/.hLq1
%7pTsCjE;2nq<6VZLI(ik\Xecf]HFTi;S+'Z$W=Sk,(e;s8F<MN@;MtRB5Pt'*mE_Pb$7Q:c"2$5GD`f]_;%&kIuP0hSdOH5+FfPn
%lHAM'@"UFfL?&'Cg?sF]&]"RO\j)ME+$%a=f!)\5WK6te!!;h%FG/ieL'l<jr2)gMZN8\IG6@SD:T':Zq@R*CnAE+g+2_)YT6u>7
%-JV+RU?I(VhgLRg=lE3Aqog,kaH%OEYP*(WccW@fYA:XVf*>._kf8C7Fg[ochN"QtK@Nnc@Fgd]E5?u;C"*!dHcW:SNsH'@a3>"l
%EB/'[O$)!.U\4t#k4(g,$i$L<)YA-r%q.=aYMj7^50.b05;\'k3a1:i36Yd=D^<FR^"65t5`/gsh_\i8EH]eQ3A[:QM10(6l<3eL
%7UE.f2;RF"s5<^2?"Gi0BM'ZNp1SjY)t3qCAMZRDk>QA4h43#sRBbf">NY3,R^HNIEu(m.O#aq?+2r/HT\fR5heTnoVhYKQ"6W+#
%d(oLOJXu1JG\cQp6Nd(&2#L`l4S(c,a.18Lnr5h4k0l:[V6:>tD0>%i')PHdaj7I.nUj1*,>.`n@sY*IT2]@`8$:bg]a32NB6=[:
%a(mXj5Ec\\+aYUGerV8"-<NY7=7m/,OVqoOVeu_)`ZGc@#4':C<p>3Yj'^\&=>q9G$Wi<&+1(dZ]($3TNm7?0;Qt%$MqM.8DEQZ3
%i/=\Bf!RtWjQ?]]:S[s(.@PMqi+%r",W=-=5YBDn1H_jUHs$71_n_9.%EL?J&@2(fCqS[J7FubSAV]Ngl$-_=!5rVsp9tS'`[f9;
%=;j*5n$mY9IJTdCEsH&fL5c-N1Lu4iDERSl[BflD>MXfL?[M'UI+,[<3o&r"oo3irl+FQI&kni";eNqrflX7.nC3jZ2]^,7"nQBC
%r0dT[6LqB^V>RI'8&!9LZ6;G)aoigIW&i`0S>gMEIdf0g<[1aVdGHrtCVR2#,],-%f(`1$r>1kW_QUG!=mpjBIJNM:SWA:Hk:9=t
%pb9CI_#D,#g$:+D/XL'fF+<j*N;Fb"SLVIo9/,o,$hHZSAhbW=bZPc<rt8#<";<H)`(MfS&koq@'/.2?bJ,-+I'JMErLJ4jca;+B
%9H`"<o=I%]2A;ZX4bNCW?H`;@WMEp2/3'kC(>m*%fg>sUrP/b)LHWlXJJEXR+ZQ]8Q?I]%^/t5IB=I3\YbYrN:.p(+V\gCQ1!@is
%36c.qS7?N,dqh"a+&'"QhEh!^.%eL<#,aHZ#G'mf>]9WCJIP@n$;PR:YRlor=s&"^7F%h-^ajKLnq).#Q=(].Kr8_V!^,O'j4GqG
%<Jt@G^Ndm:D]Z_@^(iMSVF@*or<9n>l]6k[Ha'.B%'Zon.hs%N0oJNKa#@jf@kU$m$MYI1\fY]ps$1YoLB]t\\,Lr-pPZ[WdVUfF
%l4C@sYL\-iC\T_5fc]_7)Wd#:?H;N^1YZNBTm++k@jbubW[kL.7`["Cp6;"(r19S@^-'_cIkUd<E$$BM4u^]7)EmX_cY$+M4:9rC
%e=rS?et6>1_684icL_3u^n@[V]74FA]dX4Fe]m+%8.\c#4;ku'I^?*M_3obEnK%HjS%da`qn-jpqm@1=V'GqPeqZ57[[3i)_M;fX
%i,'nnK)0m9$'*c.O_F/u^/Yk8$=>\hptWpWr4mSEs2F#A^1:%S`'cmb1qb-M)rto@8&6/*6*(krG(28?&A1:m)_];:Dii;b96.if
%jKn.gK/^jRk;[OCA_*D^n-40r*.p2ks/A?lHt2(RB@]"j`Ymj0gI1=6#sWH<J*]o#=W<dd@h_/RGl6-!HqK6/oTe-,d>tl-T>]B\
%2cVJHoUfOnI)__,A^moDFLC/l@/Ea[rr&q7G"1k/&C#.-^'rs)r[=N#P`LOIW\REBIJ%.S,O4G$`%h%JU92lr&%,j5XT`(X)cR)E
%d<&aUk(3M>=#*e)B%rKX'gUsB>_>g\_s%_DrgS"@QV==.qIIfLH7cqY@-;1ZC$e7S_)o9?rh7[7fZ[+Zp(-'0[FmGO?Rn26U9DE;
%B4T5p'#hT%+W3!ViTeXZP4AE]R6H:oj+$:shiH:d:OL7%cOA,I==a2uE,F_p#\W"6J2!So64lMf_ep7W_2eoWVpZS-Y7Z4%je:^`
%?:G8'lAnl>YNCBg)eqU@ofmEpA(F+oW)W_Sm\cGCA3rK20*oDWI]"8Ncl['untStIoM_3@Y9[Xu0gp`0\sVjh@eS2Y7XohrQN#7U
%+XG%C=+VrNV))f[q#\GBb5;dbE%pmi*^:F<I>Y8X(o6%*GQq(g_:47nJ$S/fV<^F%o<Sc@CpEn$>:b8&&&-Q6PK3uTB[Q`3%qg?@
%#=$Mo,8csHUG@G)^%c!`(Yngjqo,2/q\UNkd`f<F@V4JeI*(3ePb0gq@(5\khQ8nUB"tOX]AIuQHuO(D`V*f5:nM_NDY1PX5El_`
%O/#,8iIngl>]BGtW8QR],57BY5>.4Fe45Xpk^P)>I?4NeFf=q\qI'KsUIa[N4^ITa[p5oa[A!;kL%$)LB7kXI<Ec<'2RJLJ"$(o7
%W\VfpP!0]K8!2rSot#q'CAisM0n&E$n/phm4+:_G<ZAG:]&IA&bQIc?AEd8f<I>c\>Z::K@FriLM@7pHi:2/k6'RD\p,*>pD^+>M
%^SphU%VYL"j3;o$*@ruD7ZI@m;l:%Q\f?2fA,9/8DcqWG5$uV*q!iFV!"`8m]B8n+;%GkI)u8#+\XPJU"n+>Q3qoiCS<(VbX6Z8d
%('HZ7khOoRLT2UtL9:iIZ!>BA[dLhO5i7&^`I+n_YLKtBT6Y#Vn=tToYBIEl?$g5Pi0+E@LY[E_g"!]151X?JbP013T+G*g+"R[K
%?XW[2b;]<aO63C[l,(kJrI(Zc#5fn6pIEN$>2@esXA$-b,0'+Ei/N!$fX<0=]b,1-.oC[JP%*a.a?B=O'K,2\E+4cuOn>tKjTDug
%p`mZ%Yq^`Vg0ilT*C&ZS"/MQ$[pCaG4529@?fBK`5;^U\Ti5=Z]>MoSm2u'8cgT<T:OL6JpHu_&TALS/%);]:Lp@$tW6RX,>0>In
%K]?/4>^,Ztli6\AX<Hh[s/,DOD]_[KqZCn0g)h3=Sc\MtW;*b\nF)5h8mO%DC3?a0nt-'k6)aCY;\\TkS4*esI#ufG6h!Ceh`_OB
%iIdY-j^XffD-9$s,3OI-3I\snpd\qB^ZMdhZSj#DQT0J)07s-f^N@fDf@s%5*"_f/VdsC%AG]h?213&X)f4%1[V>qL287(VF#WkH
%fRG).q`URWq`JT/XGtGBS@JDXK+d6[T-7:2g#1\G2lW4%G;m0[oN+!i2+I1$#&2Z_V"c.Ns-AmW7UoKZXC+M-L1`>j]LEmbBRHKD
%87,ao_[d3mN5j*(]YTQHBCW@FN5hrfnR+g2R*k[[1E+cpRaLUnc=`Wo+GVQ.8JJOOc*P\HLEIGs,`1Na4sB?(G*ROU\W1$D!(ATj
%0rsirE7togm]VM0>#X*`,QBHL^<gDGO$rURISkt04t6/CHrB6R7BaOO'ja<J+8O?<5Ee%t'0X1dG!WhYjEpp7I*Y;.&EJ2E5sg\%
%IK"W_$\$=qMe.9"2H,+BN6_`/6,FE`HpPUc,^_np(F4Cg):B<_DP$iJ#p4(*231<MroH+\q_I#XKbo;M^*I[;PIt#%J,-jAjjA&i
%0+E<7Ds_q;h:TJVqr4^*1@pepq!uhVk&"JKN-tliop$lXr1q\jnHt6,:M1)Ci>n)b@'b7AT:a/;rShAa,8L+iIsU2a/u/6*XI7[_
%569fBdIj^4k.cuU*M7:2e&TN4bF-1ek3j03+0W`or-itVA&#S8bJMO'HL07&SNb!Wo=3)Ln/BuZO2[P];sAC']r^L6c!Pr"]#mOj
%Qh%DSp>beYY4BEc-E@T%\l)J]C1hdioKK+pBe+_Za&:ZiaE4ABoe5t&P4i-U-^\08M17(lRC7o-n"Y9SWI5g0jb&rH16n'>0@1cS
%B-_*D^A/\*RF_oj\b>46Nj%q]LnAV.rX25]c'l'uqPsD$O*T3/VX+5)m-$5g`f5GVm=u/Qp/,r,d'mH8:MeY]5T8L:`8#-GIZDr7
%TKXnlog)&IIIcK]9Xp--7FD-7^AB#Xgs&[[qfGL9j@>?^=%PG3SL11>f7r!<57*GSqGC5fn3_*AXN$;,&_$"9_LE8^SSlKo\CG>h
%p?8','ctM&^`Q"2Y'!^_a'"H\7B[_Tr>^7J!r^Ki6Kr0#?fSBa]6`rM%V1QIM:5/55_<&68iooJ&G'&%07o`CZSXo49<r/9f>#a/
%'L0O[ra^tKl24>e'dYh4/_H!PEULk;B_b6nUA2$6ZbI=<CH0YDZkp[l0f/8\K=r\L?Bc=I3F@+d$N2(!MrMo(cFf578paG5&G'$O
%F$BJ-'OP?)o@i`"p7h=*B'(>J);0r=)-1H8j.7/r1AV)Rj!2V8F+60mf?Ud3,X1+B)kUacIVUT#Z3Ob%<'t\H*m5MCUm"aK`8C5*
%XO$+Xr6,1jQEu'ij2ViuKH@Q$[OM&k*BOoO\pn>UI!j39WuF)A/-lYi@-@YZ#DR+N<M6=H>c2HY4As1/dDJhj;Z\L;5ST-Ej_<NM
%mXF`Is,MEdR:JE1kp,tO9TGB,>?1,mePNhA)Djg:8k4..PBu#f6Q`3h$lMhsMQU_jL'!a8Q#9Z1LYnk1F2Hu1818A!#`.tnk;SLr
%7fSR%[sEkVE%ut'68V,n+8j.rM\Ek>qm,`CeK:*4hfX&Ag2PF'rn/H=W"LU>[j!E\MS'M3'a5@*34sea\/+!'8&7%n5O__gmQeL*
%j#PMfZI\I.Wf;lC*TJegR0EUr.Tg]u^Z'hr0pEN,$^'HP%PLpUTQmsX=d`di&^?1AO!QVMo7BXgGYS`SV@X2RU;$PcGPc@P$tXni
%'17PKRl`*!rrX=6U)lVDFm*4)!Ht-;]7jQ\2S'_\S[0V2=,0/n+Ke[4C.(f4)4FAHdk[UdUnA,KA;]ModHiBhQ_=kKEf@h?%_*t9
%`a=Y1*"SQ.&hj8C`l)el5Q4`a:#c#lX[lUQ0TmW?/8[]QZb\?"1STG+0]cfG"c?o;)CnZ/,Kk<Ta<Dp&`X5sU!\VRr>]:+p1NI0j
%F:0&Bh-q3UPhr,`a^dmL=3P#7ZWj,J8jG5?`!G!s)2:T>X@=U=Af0k:1sE5-7Y&qZ(,Moro81`C3)@XI,%`91UeSe?-uaDEVkNQ!
%m3&8dlldlT^hc5UqC]k%KT)U-Q4aVrNm#'X$.p@JA+riR!!C7b#!tN8`U.s1TOqmJOhfUB,")3#;&%7g8iW5*VQdiKR^3o?!0&O(
%_!cSWTkAWdKH9s2nH':7Su3HlE*AoGSg!YM1Gk+#:P8p\=cb%JN!B-OcRaj(8[G#^`h-C.Eg.](Ua8Wr7$_d$,aF05-aRD4/Cneb
%`FGAg'JN"GKFXG?]JAYedeh+'OdDaDL_d-%P'EF)O<fRGOfJJ7@R[nR)/!Xt%FQG1F&&IC%=4VU.$Q$P0HA=MdisDqYQBpo_4jK-
%,`b6/Z3ECIGS,>94N:+A,HE8b&qN$:idb)e`Ieh#g`.pRQAX*=j,AnSU4AEN:?&#@aHf43,Qe:,!_K,"K05Tf#ZVMqV,7>*UBT.&
%@WPB8(^\`T7DWTU'l**'eJLgq,Ea,>*/,S&=qN@X,t\de)kmA+e.NoqieZ%3Ll!&iVQjbl8LRTkM?JOU@J;(&B/r:("]n+4-ls;E
%@5>5M:<X\J-j,=Zh'.dj`g"a>`+k>;e&i8m1.WZF&M,:@b=[UZ(.?%I5pM+=KfY7Pb;_+:ZAKS?1!^N62,J,:0\7;MP@u_lOELf!
%!I*L1Ish?"3RhF2or:$u"1pFZOa*Tu&e(-F"iVA&DY(/!>R%DNfL`Tn'/>-s0IX;0/B/aaMT%:OKnI5B*sk@e%72K_j!>@-i%=o8
%'hto$"K^3-d3PqeJhSPDhIj9KJO([WQPF%^kR]8&'(N:BQjV\ehnd#Dp6`=;$(>pW(_i\bQccRG^W`Hc[NLN\T.B[s!%2Og?n(Jr
%89Q-J@o6l9)[q3?dX3(;)2N_s'S^.R4=ku#=1^MfqL@oYBWUj.(/3/^h:`-YIV"cf0Q6Jih($3*(iMQ/2&*PUmKns3:0mtR:1+#Q
%1r#uS\'j'NLNb*Q(*?SC3eN3+8q4'"Fh.R'n\N`N*4n-3n*R#cQ*9q$!D`+7>3aVj5LL2QFDW?1XD6hf1t22(!%c2b=WR?aOdbp`
%%K7l3ih&$gh3jqT#Cii%PcBe233X?N7f("+iQ$pEigYG(J?Z@'n472/1`1Dj1LU32X,&),$;M_;%g>,g0<+u+hNXqQ`;4EHkA.'f
%T^h1RaS.'dj9&\gI2t*RM)jW^@VG^><V1L6p@e__dLk(i-pO:e<oW.MG&/(J^:m013oYOPo&IiME=<kS,fio^d5Q1sN:c-,N6oO!
%3'TQsWi>mRNBYPl<Bs?kgO5-SC3Kr77T""2O8GB,A$AL:?<<S`R"?/JA*'5.fQ&m%$Li0od>t^s<9b$3rIW>9s0slVF`Y^DQd!"5
%NTrHXC0_dd6`94BX,g)\mTbQG"e#qSF#":hNI%;2%UuD\e:+@G<sS"EjN@BOhPLX#8EgYc?):m=eaW5J'7dAf#pFUe&$QI!Ea"a9
%AKR!>XMihKXO]1"kF44TCO`Ap.`9E)F]GQ=)P+M8,4I_<^Y,(f*U;Ci\Z8LkXi6r0WriZUG;K^kot-uj?aNUWeK.tei>Cfr?m\iq
%qTHD,L4,mSkUCpBlMqK2Fl8BV2U1!0,OD*bBSK9I_,0N7IhOHGL@T`o2#pR0.eH%REs%^;V`YD.O+of*_NZCEP3V2Q<$o3O1)7&M
%NjJo_>&&sfk@p_SWM*5!B9+D,@13b2r\l]6;?%PhEcl5t<&Ir#g<OirnISHX(@++8DR!!A\CX[EY=,Io$sH[;B@[5Q?>51hCP2.@
%%XQs)UWBE$-oDodm;]E,A[T7QGH6UMWqJpY^`s1=V)cMNc`K(]a-CPgrG[q[[3oqPd<b5a?FN/;1b1E`__=&HhdkQ1,:fhkSh^FZ
%^_*t]a:?;Oa\L0:/TtoeNlK*Am=qQI?a/dOjJ@_5F]7Lk0:I/7"2BgSpU^$!OT7Y&U%5/6".:$[/t*^BdIB0'hns0r$,BN=@@PN1
%Y4Y&-0k^Lo`:jT5@L]d0W.h-AT8[gW)gQ'X"QQMDj#Pt5VIta,fBS^Q$8:(k.&m/2&$Tg+e6Oab%qnFRIgmD'nI@+4*Y0sf;H2+>
%TGom/.B#_0UA@U7Vt:l9/fl&N)@ZN!Q6#_$cs3)u]AGScV$d$\Y$:I@%XeFC_UAfLD\E$mkkG9W_$-i\L0=k/XuP)gE2(qNf@B^#
%Yn!lXFb`3TgbKu;:8#)qgo\T4,hV9=3`7sJ7E/<S/WMm)Gm0#Y_SH0H7;1B,_,SVoU`9287.k!\qZF6!G,N"a3bW6@.`ckXD=<:7
%`f3Odh.iY4k_<?"D,F784\;&i.V*tJ3(sV%l+:qpgZ]X7]=>*\rJT+'RpL?p.FRWlVpfc&0r/rJ!U("MH^*?d:Dto<qtdjsoBA2V
%ScEEMVIWAiEpBnY?72'iQ-lEA*@Q8VbiAF,X@7dDIM*QU=+!H3]A!P`p\O8)gdE,\@a$QQhBC`KPQC3).dqU$eU.f#1js!`aEt$0
%#Dl7t\$7\Jh+`Y3\VresJe2GOmPUK=R_=0ZU$;%12#t$)s"tZ+kjKX3b`ttZ;`^K;n/_K+Ws@df"-PiiR97>P8Y?V1^/g\HE#NW1
%!B%m\<@9@C5-X*U''B;]_"?Q7U''lXhBr^0!HA?>X?6fPF9'`A#X.Hj.@c'ss,-_GJ7P;^BAOXeD<q#;E*K!Cp34]/$Bl=WHYU%L
%D5H,.F;p4L0cApl^@.LAoDq._RHjrWLEPXuG4\%%6.p85hWJ+<1Q9rY?GFm1@\64c,HY$%,fJ8(!u7O;&g7bAmfaOT'Ju/D9a'hU
%]ui4;$NO.-)iAd<!!HU`+(lqk$:*EgR1`$1V7-FfPI`9R/1oY_]P+tP_X[-5)1Qq_r+l:fE6luV"+UC3M_[-eAILii`>P7o_`D5l
%Y.4dP;@dR'[(Hk0+_7=1+;DqfVa`8pDS=&cpY@`KEhE4$Gdm\eJ%t"jOL6E-;f@8MUZQB/;ZXYHf6m_NdqdjuZP*J?eeu-D;?.V%
%#5kX7,K_gXD+2p(Lk\V+WqF!;GPZ0T[!-U=!Y%V!Rl5GqqWb5*j@r"u(j0S:n8c]-Zr_HJ=3*6@EqG$+.@<Z:'T65R]qI.<%]0LY
%5]hAGd56Zq<#i=6'P@dSeTcI##4a5KSR?pU5O:.dlt!Xr;qb1n/Pr>^>b+@%YDc!M@o-/7"0hMSFjqeXrk-'/DPf38)h["6=g,0P
%%CC'M33_oiH;Cqo?C*KjLF1K#4eDRg4i<\IWmZCS=rO'PH+DqY2j**1#"3.IP^%qu@T'3l)X!`s^=NH\"*[0Gmgoa'@&OP-l,Fd=
%:L35\0_d!Q1_U==ctdh%Ilm7F'>[5"3$gZiIq=>S^$bAQ*AT_iAhhcS#a*j:.cfTseiU[mjM@Lh%GT$PJMb4^5e^]7"L"j.mAVnD
%a*&ic.FFs$hZg0N93]jHPcf9Kqm6pR"34&^Huc:rTNW;1h]pJ\,KBO<j#mM$UY.I?BAO'o%!]g/aO@`[;O0mTFYM=In?gfJ^T1??
%C01lLEZ.Oi$p1S:)_E1#c`at9j?(-];AUn\D]7O)(=6,mJBO?8/6iRW)<707g3?,+@bTYgna&p\7dlX5f*k[%K(dDcrUBB2HX`.^
%C6Z*?<5#+$)es6\'IKsli7qndS#j>m1n$N;7(ib)ETQe%F&g9@;p=).iUk6f*`6iN9hfNKKGe]E4fqjc/u`lg:ltIR>/U:?pbWs#
%k=0K+5Q)/-g>6GJlc4AC7UB6aDl(X:_tbLgE>/oW0<"@Q[s+97*%-NIQ9W%\><9J:2=jJQ`STL%ruDS>*jahplLJ1>]Wsa,BI1B[
%49""1&"3e\ao4k_L5UaLhH!P6h3/<bM^S"0:>/DieQnq?92,QIPNR-C&\(qL-F^P+>%&Lk2ooj)Pr<gTp=KAJ>h9U5>9gU+l%JH?
%`QB/Ehb6V<k6>0[[d^^,c0R(';ep?YMGSAl]8Nd9(9Z5KY^.ps%4^[g9=i8Yj/9-_>f:=H1nRYB06hhu\$=`Kp<*eL..BmldnI+%
%-as:;1A"<!gC?J4e%"0/>IYGpc!7YCc/gmjUK!a8m]<_YoiNYCGo80qF6Q[/pq:^7X"GZ8ZAmtZ`U(Es]dI&0r+#gk)1cI9529\S
%"nn&"0&._Na)h+Ln%Y38$iQkDlt]B`-$FFUjMJ1oHF(:*[Di?Liu^&'3.toREsPiOf1)J"ks?K%1I$Z-N]rOkX:F@h5jIpV4d<E4
%$[=:T6Zi5+:C=!pLIECDl'([u`82QSl.u!^okE]u^9a'LXj;'a7k=,-QhtH>]=!o.l<^X]VJh1/F=U3q9>4YFBpV4JBTH$I&@78u
%oqg54Wni(AjYudb@mN)QSS,=3]gO]$=JV-64#Ja]/*;lqG%"AIqsX4/r]rNT4m\(RQTG##<-^(Ka_4ImHl#1ehepK@l<m-+>rV?=
%AE)g`[=6JYEanp#4r`h6iC77[GFY^3CSTCqeU.J=o/W8"aX9%#6G9T3kgFcTB@AoV=;AgJ6%_o)CBZcQP4)4Ek"bWDm:&"S*eg*2
%FH1)%VW`I[R`m<a;c5/1QYjZYfkgNSE-lt?bn9oD#kQs4q$7uKc`bsSiOSgAF#]]'i';PaR;dC`Iu$7Y1C#J:H8cY#**p:3<tk-S
%&U%Z+!Q<LEPrlXJc`_F:l>PW*VFQi&aHM:<@OU<rV=<9g>p;DGQ9>R.0[XW[;$8IWg,e@n$^MIUDKo__^BmDNj_f>9?m?_QT$4%K
%CZkHTiRi#83?56B,2r2BD(A;f9.+.o+KAjnI^fr$7qY/U?eX9G$Z#A.@?H$&LSa&T)j^*N?8up?^(5/3aP6%>XecC[]Y2".*8W^5
%H3u#]F>TL_XCfA<S,%hYDQ1A^cBhk#iP!4eD7FQ?Rh$UZ7]C?(=aUJsm6i2XdZRE4T2\`m\6M#S_IqB[=nmC:4;Y`uY3!OP%pMbE
%k4\@>%,[]@\)G@7^D<uDT9dCfbMGRq;;X!\RpBSBDCn_4iHF5G-/:YDmtP1a(GFb+)RD@=/h!L*q-No:DCI``1q1oG4I_7@G,Vt(
%@.A5s3`J$"=Sf62c-5_(M>]I!BR+0,,LO&mgKmo=kE>eEQaof]Zoj\i5N(Z2G6NDtGe8/^G?dAnk"bT5cJ7+B]J=\"!M\>54u`44
%%R80;gX(%PUVP)fB7QX<hn,BDQ)"I>1L**Wk3'ncL&!$4V`>jHWYb93ZEQ8`ZWGR;^ViV)V7&.HhgF3mbU62YYNN5^qoA;TAL]oO
%]P)0,QYoU/q9&;0D#S05Z93UapZCV'P1#t(T??QsBBJ+iR[NW7At&=DV:<u2h!n-L@<jHrZk0q.D(\X(#L<d*poM.Oh`e\(C`i;d
%$^iQZ]WfGR@LIt=$\%&VD6UEe&PqaGgod99(6lc8bsLI[TXiEq*/kYZ_qk)sG[n)abq(JQ*YfKdUZL6!qFKj%$H#hbEV!jXHSJ5P
%b)<mVPNLl`_,b*O/B3m3=*):&`I#;kZ<2V-KZ3,0a3nG#;/7h=lO(,.go?tt`L#;l,u0ub=A"hAS#)pH>(L:OG(oO?V8LJWB;r2D
%[^C4*Z<LU4.#hGW;YcfY:A,mG1l=^SQBqdlZ/q@aI_![nho1p@:,[!Vdg'/r\StfV0:-RcGEsnhQ/;*1W-Po.&?_bNm:,$_H.YaW
%TJ^!2h?pI))tN*J+:F$kX_2@XP07cKXrN%Q>cDhf9.RK\8o:E=h^bknBhDJFV@Vf5bA"@"=jKK/&[>HnNpPO3ifW&`ll]2`\*B+!
%rQI^kYo>l_B\O8<-M!m(r9@bb-+Y"%\sZn?m]nLH4*t4JFcTg)=&5-nb3Du.]jHIekB=80h;,.B]+6jJ8EB"fb"1?Dkf2Ia24Arh
%)UY=fX<,&7]^/.R\\VbIq+ur=LNB@;1paX]0V;Z]nqEjHbuj^P/N:adCWEj!r7]\,M-[/FZFRAd[<3(NlVq&mf]%'2-733$=R,,3
%,'KV<]!6;^5@]b`(Pf7rr3R=\4^D"VB_pjF/hC#qGd?#?B&X'Y.i7aIioWR43B5cOlh_]NI;Y\5>`YGI<nF2E4MRI*mG4rf-\h!a
%p"B?C3f##qr_g>2;Ca8s9o;*'Dc&U/P,J#/V0VA(.=4?\:E]/o5f<5'@AO7Sd.C1GS_bhdRWLih%dC=&aO!pJe"o-QV/p8=78#AZ
%eoI#.mcJWR+EN%O>cu(jRCZQ;R?uq21)n?$4064d*n^u%GfH&foKIUL0-o66ifh=*>oZei%(AFE7(KEoEJ`GbMU$4.Ws_9i]il7l
%"*S+g7pE#]?G7!6pt\VUO[!&7NpsI/'?._fXbt!\C3iC3kf5h0T3a/YQ.,;V:t8WhiC1Ia&m'!36'NVe4F4Nnqh%Q3I%+i,omV*b
%*7WBh*$/HXRsTKFkoc2PV!IE-,=ssf50NQ<8Od=AK9Da23q(0<\`TdeW%NV_9:K^R<UK&sOiYk&_0kY:-Ebj10;2CSZI$h8_L^S"
%i%hq?NGNc`YYiO!'fYCoqo]pGKt>p4<p'5&AEI%L/2_3s9guXQCq_a/+1G]@=.-2XeTtcl886Y`*mPQ3[X.g5]=kY"d,3^&<q!JX
%%TWtl&(cRb!o#l?\$Qg,AQh1M8,^&jj'K!tUZC%448k`p-eFE'f97YG>u$\e(;n7?]@BQ.n*aF/<k6UU\baiTlJh'&Oa:>7Rd&qY
%eoP"Y)7@ou4fY-g:[cT,Hi7+^R`WL/<nU0(.;ie@_r6'A;;FC]/mOG%=n29#OPN-]a0Tt+buD.GGZ`7n05YL8['UanS_]$!3Gl0P
%Q!_7M*oo92Rr\L!D4Tdha2>`23"aitj^Za;DBX%Rc0X:=edcn2U65Er,p-[kZDE"cn$8A9hJ9=[:PH4!_0-t:M*)U"DJGTVZb5&M
%O,TI$rG?[@\mMTsn+N76lLr':n]g!"lh^VY!)d)?N2JQbY"8Mlimn3aYMU,=bGj$$oDIbH0LCQ@&%Argk-/m'0o+*>NUTeEHtj_!
%K\Xi""[@KYeD@j_*lef_)opWYME/D=)m(-qjBB_QVQ%e+$9P_ld_kR'GS7`+N)$0rGOFNo?<Mqn:)ZtQEk8P_U/#pbBCYV!>2M>W
%+._ecf@?_(o'Z?g[=!HDkuGTA\'^(4g"EHk&hD"fVdZ?H[TYbb5>0lR,gNR9acj&[AYXCnhf$p*LX#5(o>X\rq'(tSF3r-"lD\cH
%E@icf?1])j\P$B"meQE5]!?>Oe2j[:73<>aX6eYFp$1t"OflTZf!nI3M`]OU[7'c#SVn2#kf.$'k(%lk^T$*l[r3Kq[IA$F;7jQU
%XnK3l_KYMrB]a3m-rIZ>4"2!7\eSM`k7hA(r]#;]\C\[LZ\S>/=mhuf6AlA^b@^B$_A,P$R1A&!]Y>?8P_DHs<nU'9?RXOJ;HXkP
%8gi/Kdo*/k?9^)CqlA8rRWLAKLLt;_!I[o4*YajMYkI]o5H.NYHMdUeU2p,FYElW"e#K"m3,PmH0=Agi`T=&GC*_I[Q=1.sa5s.Q
%Vq.L[DR(X\NFln<IGWIXrP$;-7Q.W;Zc%jS3@\KGqCIkGL$/#D[/Jd,.VuNR-,&.rc_eY3i45cLS%02(^DbL7Hg\2Qh+hjRg[0>7
%^Y`1#OdA/?Abri6>Gnp@CLV\Dh;;]q]$9O6AriXGkBj&r_dfkh%IZY?0@Jl=s)Lt5k5&LEY4e(L]CZ$>Wjk-H/2lShgNKG&(ft$^
%/EV_nA8AG)@8:m644Sc`leN(e-.?GeRsI'BLK[JT;e);B<m3u@`gGr)\IXfY:PpW5o/IoIm1#%,'](u.qqZ#NfQcK6O!3M0pT?]k
%_-GgnRCuF#VkjoYnQL.d)3.Fu'KW?-^1KR;$cq8ApeJ5;a.AHAGHQJN3F9:RDI.-2D^^rfqs;aN/=l.r[[W,O:3\uF?<^RXBM*ZV
%+Iqi\K_\%,Cj5c<gIW)tQOf;Y;,,9tQpYR"#&Ts+#2/2+di,WUgpiEK-9'P&KB1s@=bgUP)oZdRK%_<DTCu$;a\>M^6O(#*bJrSc
%:TrJ%eut`40q2NDLtB8Vm.4MO]8j!Z$<S:`J.J-sD..mXcZ0C0l">G?!h.4hW;Z!LC^Zum&C4-iDGufor;>q_h/J4_jCTolQV7hI
%m:^Z[EKjh`XZ)mj_QWmt_so/0\@W;,ot*mSd`l3t.:1IEN]\q*CNT(m\Ht!aJI";"aP9#9GN!<$"k1M23[R!CUrot<NmW\VV*9KC
%jQDeA/Q^t.<\dD;@:M+$a=]p17r+0Q2kK+el=b>;I"/j:R?H"8.kR3*'UqS@1psKBI;RptU##1he,&(LEi^@r*MnYTV&(C"P2+].
%id?B_EIO6JF_]+ekgn_43on7aRO<kbco0$MG(4H@S.h5hnUdV&#q`Kd^`_*]>:Zs926De5[R%f2EA<k1CsHDKemoh#cYVQ0R,8Z8
%h>?EuH2T)+<9N]UhX/T4OL-U@cJu.a#T(?L#?eI*DFK5G.A5ks,":D6+(j,ic)#eIHJQVR"FP/aYRh@ZL8rN63-#\gc>T.QRhrU;
%"$X&WHShr]=%iW?pl^MPDs,]=m*=(GM<JDaF//_^FAGBTmP3W]:@hLB!0uEM]5ZqTJR7"j74=EGAUHJ.I3@mrW<Q,-(7o<@9(k96
%D6+hlj:l0N+Y?[>:,_jP&)4'UZSkLB(2AW($H&SDUr9mGH)O]Wc<WX%N,1*a_X!?8qj)k/dc:9hCXB5qfg[u'-S,G68gLu2^N!\@
%&n6T-EY!9a4O%1"kEGjno8H<^?L3bNP'F)^^^.*G7FPQ<I[lm6dbV"6=ChmnU;BGU\i![5B6?70mILYZ[7b3<U2?UX9l<pbF/d=]
%E:fTgA#&9t]f#YQr@jPr1a)N*f2CY1)P,#cIV#JpaY\_#lWf_/>g9;IrYbs#G/Na)_%E.W`SK%]5##R*1\R2+Ps'q9$dYPV=oi,4
%V=I:V+E`((50RXXq[u=><9s?R]mW=#l%F'/:$][IKnEVI(;\bo<T^d13e7r;gnf=eh/+aDd+6;cR:i64M2Uffrf4nHi+d,=gRG7d
%Eccpq)WSq/@F/k%["0P8di#bH0p2:KSjV+aRTO<W:7k!Pa:=tLqq(^GX&$34do^k+=BsZ&51J>do&G1B?/&Q))[IA*HU=`QfR6A`
%<shP`-_4L/1Rh5kGAD8qQWrbs1&3+=E<u_3P&n%^bECBW;&!:jbk0?.EY3-LeoL%Tn#a1[:6[mqL!-!2g0BW8%^*qpN8bk9D?2jF
%/)nusVYF&_4YC8f.GIBFhg8VFBg2P.#r`/6@":<gW"r_\HYSB;!jk(]a&RO&h!/c9[oTJF!@(Am5fGAmU>&lR9:hS.P1iJJM$kP!
%-$sU8(X$aZp]u.;W-MS6)"<g.jC2<MVrB[B2iaVMlj9#J>k5P=/sc46:@ZpR8G1Ol]+eRBiRJF7<qABs+"L?YaMN"a4=.aqcI;21
%1kWabEW_T*]Mk#shCE:B>A@*nL$Y!V_(@8!Y72n<jb7`;.H.HD^iH'@G;I2P<'*b%CF^9=3e:DY;OEc9p'rTT]KoBJ=%5!AK1<>m
%`U+?!_:f5AVgru\1l0em#rY1O-8!kG2[KcPnc5nHApq_Z"1;pK!-hGYB$*Zc$#,->\67*EV_=&'Z,%+U-aAA8LJ'NMP6;$e%6c#h
%#]KL)f%RCR\S\CLm#aR>[#cI@3pgG+3N!&/:K#*5[L(4Rm!]:'Z01)tf![A^U]pZblBWD$9*E8uH]pE/kotCfa:`ZTTQE^P#bW_h
%i0D#32M3pm8[]<G6rqVCPY&J)UH7Wc_*R!1&_u*F&S)kbTc*38M1@X(H)_gXj\Ra!dZ*ZV;S)7oQ:27F)j`VEL`"$=MsLu=Lnc(&
%RnXL9H^VN6BXU@\+EMAk?1MIua^hQ`L;=!cTFG5%5hT'12@JB9rtHp;["TZ;S"1Qu"H4s,Ot'\h[QTq8b.D?&dC3kX*6-9i#S.5s
%NNjoZaYW)<\sF_m36aDqA4sj!kml@*6.Y#R>=*4`V.%g]-<D0I2^I%AT]mAbo?*rb*hX7ReFPh=CfVat8,,OBNbK6=[B)XS5SVN(
%%Ic!r/Fgp9$n\A<WRJl9!JJ5n]ePS6Wgk/Q!"7W:?/0i.M;VG<<rb*==kq4c$nJC#%B:,&k0>XS/6<cpE'bU>4C#/7G[fh?-#&;M
%@mQ1fFledn%/JF>>$-Lj20(K%qh&KO\&=9l@Qqc>(A:>Vi[$$G&fRa]:PlX7>(b!>m(@<*B$q3)lEjJR99k9dFtQs'?h$>1ES36!
%0D;IukVV9EN(+2/S'"Ch30PuJ6"&Hb)p"I&=S1&,$AcW[g=[ps#]BB4Zhs^Oa%86gr8(^&F`;>@D>*@5Z*cYQ<r6Kb=qoBr=kq$a
%9IE"Qe%s,FNo9kJ3f$KEcgK;8Cu]&&?Iqe.+JlW8N0,'`bhUHFnjW[/:]BK,H*[Y(+O6>j\4dq+Zd0Eu)=:R/he9A5T-+bRV1C#K
%O/SZ0Bt]EFN&cHZ)0;/;]@Y\a-4dtI.\E]e5KSQ!f_A*nX?9$U[HB9QZVRjINmY]M]DW$*jRI8f)841oCYN&"F1d$!QkVT_ng%!_
%:k3fIako7O/+&HBJ6(?KSFe3JJo;!pX!^@DKJVSjZCn%26fK+d..-9^::B.V<Eqm@\($$=OAq;'+!7rQm-^.k8@Kd'#&P9bb8lW'
%4UFVr-Y6:YX,eX]``\O.D=@c&S=tfc]1-]e)]%dhF/_TCTR+=Q0en0-[lU/-F[hG9U>2&j#]-XqXPZQXXgjue.4'P6X7hZ90/:%A
%9V!/gch#g\h0S##I!5luOMo_K>,$lZeXhuZO&))rf<+jBo/<+pDXTbO=RpSNLG=`0Ug&UOa?rQ/7sPb-8T^SB0jA)W^_1=-$A1t#
%gH(%kjp66]rUrq0O#1^N;<+dngU*fn^%b0@k?N;;>,[8!NJ"8laEX1_04!d);ruj31Q9RZT1PW.AS3!k<^r%*K%D[tlneql1=G_"
%fN2_j*3R"X)<;ibF>^UK[N'M9nM.[?\'Z%XSl:n1jU*$EAhKcUq:d/&4kbhI[X*>l7Fq(d``mVS[c)$[G,)p-h4H%#N`VaF`f-!_
%b#UO1m&2Wn2A7t$eJZltVji(0Ui5>#r&#/D^:INsNUiX^$(U<<k9jMZM_7_!(E](]9D:s0ph;l\2XK'[X!5dL3uN*['1=P*Hg,:u
%oui>j`R8<[I<N<'hEN2c#A+3bZWj:e^"D>lq(q:/nM]im7?4nMnVFj_?Cq^Jd8cn!RX]FT&#Dj"R"(6;\iXp%U2;a\W_^aTAU`$\
%c#=!/Uk;nu/pqa-9%YB0?-_5YUK2CmITV4W]\^`0^#L:C0SK6Gd2OWKZ3QZ43N!8E\R)@fo@mEh4]%]]Cnm/1jOUntUD0=oh;i;s
%4YddAR?O[IM_209nsh[A5<;S?MFgc:R@IR[Wr&89aaQo)V+RZOG7!YCC;@VlXL^b?_`;S9K?t<6+_J8Jb<Kf"f>h*,[U7`BbYMYX
%g<35cFe7QRND`Z^pCsP"cI^8q(hotTn.NpJFQLTr"1hYe0Fe0=hdVY-@VNMM29=Di[B>5N`:6iJUF4NoM).F(S1'qM=5O6SeEbYO
%0b?]jY%(U,^0])t<2#SWA/./-9Cie8XM&;h`:8\%8s!b'?HEg_CtYgohLP0-%o]BkjNEp@(sU881>:=<+IU;(.`.3b\XPV%SF>*m
%UF?tJ>4!Y@W1B7&g]]K]2>[(=@IPPl8Ub6#V^V#ik(dPjCeo7n`Bi8hKT1V<<$V8sJ&dD&?9A=0P.(2o>=7ePi8&3=()@uga>\1j
%p$82nZ,Ppo<*<BQk9&iQ0Tu\bUURf2k@'?DUqUI=mP%^:YHB,\U[1^T;HX?RjCP5sj"6^@Co2"_%HCkqF'cV06W!L=o9n)KKTF6l
%ANm_,iU'cDUVCh"Q)g]Kq=I8@*n+sK1JLRF+e^q^TkdIYQ\r^BCDApIgL;=cg1_il[sJp*]gFAG^nIW0bJX98G;XTQ[rokG:SQC8
%`^?mHs*50X`,F+NX)J3P8ZqA[5U"fLs0tjJUOjDjo8l.@b79+,/VT84X[TBb_plL;?$A#Klen_5XgdCL:Z#3gkT@:**,BAXjR-NA
%GH%[W'P#ePkY_)BfJIk\cW4,T7Ci3Ghor"jc5`8&*KqGJ5++CQXP[V#%Q;pu!00&ga7;7%Z'%nY:?S]%]iY;*:g"UCnu;#`Yh8!X
%C6YGG^9U4S.09ph4%7%*cQ3e_11P(+\MbpCjce3`!=$8:c%fBPBZP8@Y_LAP#-j5^N'!19foY!%FX:KBTOL@&[he%fM\?N]7Xh2\
%:<Cc8U\T;GFBHgAp,K94([=q^9j_t%;OX;A+ja!J7@#9!@X1/$JtKa;Ah5!kcjYLWmGaZ1/V)p7f:"VT8oZBGZeW]rHA;]Yp8m6l
%FA[[uCGHBm`3H@%ROK'%9VbN/3*mJ[jo%4eed&0lo6?Or<jk8?[<>5ThbeQXo\7Op2e52Va,A%hjkX-74;N/0,`nMHa9=dZk3kP<
%Op`O'0c+2NjC'rqgtZuXn$]IOc*'Uf":1!s7E@<K3a"f*;!$EA\Z@4GT6ZVecZI,9PM]K3RulpMp>`i4,JS9'/%^S)aQpt84?h+`
%E*M]eN1?%Ck+:#g3U,335UH/NVCFY+L,<tfDCXYca`/b0*h>$h,7qS]/[Vnd33b;X@"hqP6N6Lo;1:SV3)4:]Ae+.Gq8m,a"WEQZ
%?*E@ih7_GXS?4^[BP$Gf/uLfIk0iY\dKH1Z#:)B$QS@3`CKnXm.S'B?R9/IDK5!H`=RN<*5X\p<E`piRrpjWLC"-)1gaEWR#UJK6
%e=D,s=!TJtnXQ2"IP)qQL&),D@F";EXQ4AT[pZ:kV0&P.,,X.7W=ZM,Sf$&p-O$tkK\N-&U\([b:0&HOBV@5i2XNEJqkG<7\Co].
%U_s`Pe1-<Mqs#U0GgE`odTCjs^pRC8[a_Z_%@SFYD_P[`C>FEP\6R-6Q?r/>n6ibkJ'd6AY%G'<[3lfR_5`m4O-Xd:.lojPCo"s8
%OME:oDL&cCdh`7VGbh.k_%:f[5ce$`/sCq/j]qLes6_26DVi]b#47NTTAA^^-+R:t'%Q"g^NGM9l;<9=Ci;!,0YE>*PKR^[]>j&f
%BNEPX!cOWg2'lpTD0P_XWnca:Q./7rM-n[N9BK?\Z&lj]?&$lbLF#G[KWM7eRQ$]hq,Afr9,nF2?11ae+M?(lBss=)>1lnm]d@X&
%3Al$:.-+2-X=6jF<<h84kL!Qaelr>;]7ppP(/!1fj`,3%T,jcLC?l1Z+j7-,^6:S\O'7C9>8s%d1M618,BKDO@.2759&80lik]ss
%Qf]OgoisYBI<(`No4_dmA@'ClZd`]upaBsn6s>UeO?"9@FF&5=Qs70qLS6cXG#ibm^VD#MC/Ato5?kg#:I4BVpNE_]HB6!Pg1p6a
%lch"+`64O3Md'T:A,1DDJ$QNc1!pIJm":Y345W8*)5:)I$>6433iMDu>(2T?JaE6oF=k*HDG[NfHg!VHo9Vq(3/RQB;,"WVI$A!L
%Id1G_h7G)'BUUpND-HqGKN$$Yh,1h/T/sKB80/AY9b,@Wg1]n\3o4?s1:t!0OagIp:O!eb&QNl-=+8qajY?AVbV/">5&"UQNh3JE
%lFm\XE>-N8p.i5gGE%r+$536Yq4U0j-eU\7_"]Uu]XsQg6[rV/9oqYH/B"mld<XU)Zp%a9eZ*D-b\D=FZM*&dNrB,MELWO+niJS:
%E??-r.N.aW1=J9piToQiY#I?Vk+)u#LtJ!B7WRPW/1l#P'fp^9FN:3"H?.iY#'Qb@#=[-#JRD90RNq9?3BOG(i?]B9EkH^@X&E(8
%jJRo"oQLh,kY'AB/UXmpMltW;ZID4B6X2escE,HU0=9mb)*"\bicOK1c$D<K\i1eDp/=`@KLh,J^pcVS*Kp+8Tn7:T#u>_=L'kLU
%,4E'dq]Xu^Q/D+,l(ke#EURBdRt%ZfWc[n:&$,oP)5Usc>H+UjSU"]g3p_%$[:[2.<jUUH43!Ti%^_8ZjJ(6Z%f8I-FRmOL<pSgo
%7Ao*G[3r\rCfNYGY?U1`n#?<UcYgL_p:MLG::%Q\ja5!-6HD9]nGS6n%k2n$,%HQJfrnWDe6oq^a\l3lliUE<bCimGi%lF5fbp5l
%>XJ!k*3.Y0KJUiJ'*mA2QNFlGSuQtKrJ5-aCAi$M)&AM+WdW"mk=ZFn6fSfupNqidqNDpH`4dZ1IKh1KmF96,%>?hOP1J"HQe?k)
%GYVNL!kb]r??.Ea4?-&ih`6Bip]5!;#3\"<O(7ju3EXcj)fY@&NT8U4cT0,&].?JJr,E$Q>YN$[3aO98O%Dmi3N$<VTlTVTosYHM
%Hq-r/*'O0Gc#8t$&+'f*SuA?A=.l#V*J[5En"/6*^WWPGW/;S_G(unC'gA2/6soaZ1K.&@STHiVUMP2/OleZXqL+qI8b9tZdo_f4
%1(G&g%?lgCT/<jO`[O.0I>04]^;S!ppV\G[%Nq2`MY[FhdT,UHg*%VXR.)Q&3*B3\qH=iKG+j3m6M)4<9P8uT$cPRQWg2_F?0s&/
%rncm'(.Dj<Q&KKig=^=Q-FMhoGMYhA19bKU#c[R^(dAu:^$\6HH9HBXG;qA5juJFi*R/*e_#?rV&'Cuiob6#DLC3)oIK+`b*Mlrf
%!iFk#GDeA--b(WN9u1@-i*D*pnm7)d!-6?kNo[.ZnJm9n9IPLQ1@c9`6*_WiH9WrIHBHI-%,@Y,d7JRNc?/K!/Js`b7MJ4%a!`=E
%Z;6RXmC__>EiD#`d8N*BPI;Y^mmn#,E@sZA8XJMSo_ttHbd/rs/s78c=t$\Z_;K!j3EEN)>?j"Q_-+RV`0-l^hS=uCXBoDkf%YLO
%T/ah.*<VpHJ?8j[:AQ59=I4tcjoG!j0j"fDY65bA@s64:SPWbe/*(/#k7He\,on6&Yi_VTlBK)=]Z5ubGjRf$L<;tS\U"8fKhbZ+
%\qpZIO^TL,=;a:$'eFVI+&KF/\]9pCnp=:'*Z/*T`Q?isdSkLc&I6@8nWHFVr9]TuEdP4.f(0rE2T6)q:,u,#!X<T32MLV2&I9+)
%eEXTAroq$6Q$6#0[_idb[L:AhJaZ`9_p3&cZf@b38/3oR1s;r+V<%.[\U$m2e`iaen!0ckAI1\4k8^_XP=kWLL%to7Z0r\diYRf`
%[6Io'>p]mL+9/*'`]o?.[[IP[Een>'&Gbm=Lr[qQooK-@Dt=V#-+59k7mb0)RHjph1$Q#eB8(.M&UIII!@f"oB@I%54L:*pa6l1i
%nNSLf_I&XZrpd`8q4A.nH<>2]^?/1q2#1+[aKq&NKZGP+.>fJ0ka'IhF0k#l_9(lpabT:q.?r\0ID)1,$&3W;j4un(4[[np+UFhR
%6T93gW;[#a4T4;i1*,O(d)d+P`&X7r[9Z5&"OW^SLEnK)Mh23<FBmaK3<WYU@MmfJW;Z6N6&H&%-obc>';p*&_.)5i%:L!XK]h=p
%+G=PF!Ze1-JTfbP$D<R<)6;!LY(^JX,cK4;F!Sd6<YR-JaQ\f:&)<fE`R5q9Bt:58e3maVJe_SY]7T'EL_r.tZ]okPTaNGO+$520
%r*#(!,_Ou;r_p-6Tp7$p+k03&QVfL7\?\C\`o,V+Ya8B/oM.%m>c4W+)X[VSF>Q,&rFD_^QRcC5m-'!PBe"d\rF)_to_OeK&*.HV
%3)t#\,iHVeZ+JpP?B%oUkpu/;)iq\4H%r=#>#>OH%';oaQPYsJ;I1C*.7(bqeOtjOhliAXOc_W@^;M=TPo5=TXU'5F^1L/n+G-Ko
%M%ldG-%H:'/YcIqA:XpCk+t$h!2pB]0HMdaTeM,_F.aL0,K:U(F;G4&L6WUR*lp97A"pq(%3R8qMG"!u6(o87AJo;&5Z,n]:eY>k
%D4-(j\=b"^YY,NFLM()%Z;[\@2"22L]BXEG>_M%TL&VmYL?cImfUl_(E/tf#*F^2t#*ImO92S-&\;p)9-idA4,$6WM/cm!)AR_0m
%=;RLOa$klE"Vp2[i/h6[6$:I\Z;UtX3LUK#cnrXj^#F8j>[WDU\3PZu[dGqZXak1BitOf>!fJPkl8b0(FiQ3O7=^.j"sAX8?/-2`
%pe-H=5mF/SJ.\FWVm'iR7cHH&+L>l(]o%gI2=iTlNKZ4j1q5I^LI#H])(u+qKFtIY8Z$/=a,jdR16dW:!f>^g@Mf]i'1enYT3cNH
%m4,Gti7/s0O(@C4+f?dQN[Ol8=:o?ra-grj;_n1sE$,5.i=OHN/\2:>k;5sr[3gslpaBY"\0/GIPR6@A#/d-.T"t7GdL_3.^mXg1
%j5N1?M3U?6_6rj,jN)TYY[S.cj1lO/i!a_FS'-CK-kMMX!Y918P$J7LD->Gh";DHW,7+j#5fB@,;\CekOpFO/6hYLPMh=-%A?Q<&
%j>b+N[)W6i(bMtp1)M[,_+;@.rJESLk""PVmJur8XA"9&,Jd;`L?O6,;A%\:#Soi;%nNOI$(0BM6Pp+&Ns:TZ#_YLk!0OKQ(LBM,
%0LSUIrA2T&&OFK[WNX,G`hW>PE"^?7*lWo+8Y!`2p]DbY0J:T0?%6)Ea+WsF=@KRS%X?tU>W/&0:lE`=aWOFhd7p'W`YTp+NM?Vg
%Y%X;L`a^Dk>=Nt!fpKI"AJWZiYRD)fb@@tYJ65h6h6ms?"9d@pr8UcOA)#`hU]d*Pd!PmLcqBRV]RX5fgF&aSRk+[Ych")XkYTY:
%!='bZ?q"4=b)5UB50gG2=;bd%fWu,"MT1j)J;m2Y1^;qh$5De?!+e9sM'h*$/1\<T+QV\HYqhCEN&&3JMC<lS7[27N:L&M0'EE0X
%'`uCZG$33u"r\^@@qB%j,Z&#*RkcRWHU_Db4iOo=&35LHP2qiN+r2"'UcT=-`\T#k2J0S:Cd(4$R:WO=d[52Kj(4InE)%8f4-mq2
%_d\L%?udke/>?;0E#>C2VF3)h_$_t/rAeF3Ln'._OYre,JN<"Gh'mE@!ur:R$Y*a!3,5fr<giX*Bjr].Lu"R&1iEfe]3XPs,)BN<
%r5ABK197RUb\R7f!6=W2dtLlOmNX7`NI`Q)4_>k*UeQokUHua))Ia;7>#C]Ladh]t-6*H6h.4o=jsZEl7X,Ga"(TX`cJY@CE.g8B
%QTua/U&qJpFik\0Elor<JV]!!bh*[^*Y<jcodCKl(;)2E-.4De.?ge@2&>VrneesUESujBR96%9PscBuJfKqs%ZMs(M*/Z%XEFQW
%#0MBOO;le:DLr(51Tl;qDq.+p[g#0WOATt\b?PtLPZ\HOQo/oe/rZjPc\)Qgi85gDLdXlWQ%Y6'Uaa^//#UTg8Z0chLCsq.mnu(m
%TO\[#3'%?sOuVnagI7,lg-qkQ_*(L+aYr6SU-V%YhP6/V$"uHlBbrepBG[)r&,-J[\<KHNF_#`XAc^Sl1$Re5QAA[)_n%<am)46I
%gBEUL3G#@"K%Nnof9-+i5epZE^^<@O.B:K'Vng\2Vp&R&U_4XtH&EfRi\7dHb-6N*`&hJn'KD!3PW=<r=U5jjc<J<JoVkalpCnjp
%NoP*d*5/Z$g^uF?(=;W/AM1Z:b01&4A/@i:Bm&C"SGtXrB'4IsLNtd.438Oa??0hEOmEB:m>W0X1.SsH1=Oah.'k,?WAS9122k(Q
%UIPG6C>g(IVp*OAVp#c#*jrcu/OGIaF0o#``&K8G]N7eo17*a+b0]+`^!(IKLBjU_'$Y_B*gH1=:YQ?imQ#i2!k!-L-2TdS;Y$rU
%fHA9D-^D4E::n_b!9fULG8J76j>XY3Z<5#<Ss&n'f4kahK01p%d<U9t(1D1Uef8BI/lUp)0L_jDNED2R5WrfgU(*:a3[Hm*+&R,0
%)H2ua_MV(r3gi>H6kOKIaP.SBcBElsfJS51o#^IZa^J@@WT:aV_a&do#jutL&5S`g:mf=2'D_(WbRXsQZ4'>YdpkM)itRJO+>EA<
%0n8\MXi5M:b.bpIbQP?i?a5mi_:FQ"ALZ%Eh7A"DKEeaCnisF58[mct4\iD'!WKW$?,C;`%<<J%[KOG)1cRTQq.c628Jr@Cc7)+.
%BE9h9*);&m5h(aKcmf,qM(^a6n0T'c/[HS[mLsNJO7UD^i2R%d-BO)<?!t)/PaS(ad$S@VUAm/GSs/Cp)K-pd3!Lai9p#W1.M._#
%$]@It=X>q`+B*B4^qk$Y'&%k%<H]2,13Ci36s5?4f$';9VdG\;"XoT]G?(*?TIf0l'"\ZLU"*-^P=<_H55Za^K7AWc_$C(_#e.nY
%SB+gSZ>@mFlY`GbdZQ?s"<30<MGq;.&4!3n"rT-#?$"As-5t!W+9`X,T3/^RN$C=%<=pdF%7F#S"]"qiRFt.:NCh,?qVO.WPLn:.
%V:;t$O*R21`=%R^(lIZsi+SRELrYaQ72l-'N&I4M2IFDD(*+d4k1qVD7E<N[,@#s.*+TD?W3@i4R(Y-%4bXk."L0,)"-:Bp/)Yu>
%&kG#NTQ*QAeK1aopr7h7j(-P;LtHD5(`;2`F_TbemD87UR,&n;`X?ob+U2Mn)&Ib+Fr2(-\m^mI2?m]J@9eMBNKMW'0Wqu<D;kfF
%@rR"?<<<1:`u0;P<N(6O\[Y$nK^@V5E$ZE:\%?(6OM7u0KqrX;9jfq^?(aj1]lo-k-@E-mJ7RBngN]F[0#Ujn6GD.J+a=bNUttHn
%<DkW+_-j-?80e<h&5T$2X"Fg`+F3J2-18L\.b$V8(1#jRB\Gg8DonK<D_OZ;6Gs'Q@`YQT(Y)XWN/LWo)UhcA\u3o<#91E01Nk_4
%nchK:S2_j64H1"\DHV+(c'%6k.d82Sqal-#Hm^PVar"u9\15L\eG"*ZmO<f[%n]2GY3$)TJN*qsE1W/WM*Qkl$$n5Jmo[S0LtL'"
%MjXIrF`ETYkJ?VOR,&n;`X?ob+bY%R>WDM0knM;`I]FDg$"CdTNYbuTL^eA_Lh(4$>u<HKo=0Z1F7'Z^.?e-Y0@W.=R+>0^2[;Rc
%:__@GFMfXQPY,G>KMiD+VQd575aNTk`\nWi-%*$k+NArW9%GD8$[#5g"O9-gRtVrj:l4\dl@r;jfOVg/VH$/47#];E9=sIUfF7oH
%`p]/%qY$pcG8FG)0t:G=F41V[9mLgMNI`@o>DTiq)3,l@G$Toi%!f;$`DtoVl0C[l;eX=+$bn,HY&:c1%6%?Zba?$Dh\a?XX,a>c
%o))*+V_-S_n!N/YrK_!31p@B_G"1s&.hEX#Bd1OV6da$n_4BNpA;D["82(o/>:4]?8:`j>(uC]-B8oo,1/l+I:18-?U$a?4Et;0$
%U'E#;,#/7B>?!@=cL\\',K?IE-V=TRWdn$l,2!1C")h;_0%$hRW7!)o:7P^W&?d\GL&k@!>%uhqkVZ520rN*/QE*FY-Y[+sVIaqp
%7Cpn@f=\%V@SlS"P>2rNb`FQiQZ/]HcCKcmN$U:c%\5_f-W$m!"?@/]`6c.Q\8H4%A7.$,L4'd,9;%hBU*'ju"]K$6&0)!373De;
%`!m!T&fqjD$s2U+JpV!A6U@5/bV0/CjPXZj[iN&*],OdBc.ug/OG$ZEL;pg)_GJ\!DV=6E'!iD:Lms*1Is"P\7@&YaVYh1\IXGep
%WEL5j`eMZdZ8WOYjLc;k_4*u+])@ZC5?7"&BTPcheiPsm.XC?#]O=m\;u@+c4MWoFr]s!,g."_.kck<eXaYRSdf+2AN3rc>5;0+0
%XW2K\D+/rd-)6oqS0./A2?#V7nOCNA.0!,IXO1H^qhe[PPBRfB!3<&jl-rK;$1ft?:m6&[]3sGVRW1b3G?djsFDoPr2aDA$!.&gY
%9,+s[R<t,ccZ\m:Z)@G"3<G-]k]'+CTrD]nk)L[Z7J*-105D<NAG*rZ0jQ)c,B+AYNkeY.>&";WA^-c`\/^(K@@&4SY`j8m!XtV&
%07'P7E<NF2`t>fg/[?r"2W_-P(-$ni*<Co4N;"o\^_$^0i*UU0%!3ic!gC<J8Bd^2'hANK7`m'H$,0D1Z82M80YC?Jb1BbNo>A+3
%;!eG+T'[\TOCdqr-$aPpS6j"57h1!<?"YHAjE/9hWOY*,'q-19'NnL;gpgb9+'@`t'!iD:oScX\oiLl%>%Ce"D9?4*/ari1H3)Te
%q$=Vuhuu<e$d_TFmCrM"+2Ant!rMfl!3S^D'No"?N)dEs]?k+1?%o/$,V'SAb<-]dK;.E]Nss(fp*.fB<#FDm9_NQhFW"s:XbGU\
%EL_nbB_>GN(NMJ[Lr_.>p-aqs$Wm8oo[c8)APm#?[0a=H^Z&DS"lAhP$u-o&'F_W>i!"Rb(SKg$#_AP-KE-V@2^]u&eeJ0_ZCULZ
%\UkP_TI:1#[\VBO>&DcthYdD?SH`tETOm\3XsAgXdt!7DQE:&`!mM\-k.$T#(b_4HZ@Iko6JT]t=FA-n=4RQG5!>-$/B(gDqD-;7
%YDpnR0FpH=iL>kI)b'O22thk^Wj6Wt0[4"Qaei`:`et7B/A]g1NkK8An19H[A`esgT&G:a=GE2c?5/?bHBHr*gtj1&[.+X3JD8re
%2?EZt(pEV<pkCQ?L)[!Y@td;pMgkH$Q;L_Bo.2,>??7];)t1?I#'Y\q;67QM"E*8_h1eVFDg?umml'Z@/G]7op`I*W,`iXO^hr#t
%!HRT@%?Z'b9BKKk#D/6*?tDB$R1?mOkOp7=b&jjC*NVqa!_3g'9F$U9UE)Y)1**Gi#:n9>b&lPFrl\Uj=IBY"VLt/u?tDCg!ajIc
%"=qs;b&jjCrT2g(YVI6/NF6>o+1[A<Znh#pXe"QV4=_9i"#$%EJnA,*`kOd6AI!Frb'3t@L$+nG14dERgPqQS=^7P1EI%E\ZhJ?#
%P3'cQi;3TP&+S9`:_)>8&,jii,A7>J(^SR^!;e&6KX?XA4JdVY4i%'o[EjdJj#QOi*Z5i^bW=;<.aKb>UX@.m1m1<aC]1[<l$f?k
%n#%OVf%8CBqUir+Eco>`OEU9r3,YH8LVR<e]RYHX4\^(lp%/A.Qg8`T=W>u5G'?%8GIQ%0EjiTc4tkj(g"p"`De4)f!34Y0i-KsM
%7V[EoF4M-uo7CV)$+.ArH<flqk"mMRD_I3`^stU!*%Q/U1WO7enCZP#P2BOfc*?![.\.Ap>X%QCVm]KMQa,88RP)Xn*B`XthK]OA
%5H<P2kWUV=-*2X["Z3i$hQf6*D91bSE1+@uA)=LSjrNM1@OGs'Zet?UN[*Q>.IpMSmkIl?dtf[;oL.NOT(V?i4PkV:;Wf.ma*p5B
%fZm%I$k%5ZOP:bD7'dl%`/-Tk2EQ.aLF/e]4<nk#6PD\Pg7>%02)rlc[O3gl8\N=B&7;_?Te7Y0m;5@)Q*\IABT'40C%)]h8$Uga
%hJ$jP5_8W6de1>6T\f2sik0(Pl?4+tD9BGL!.AZ.5Rk=T/k4;S,GNMpa$]C)7GN#*2'p0h].oB%Q2=;1j0e:1=hsERB#!N^DN,\`
%HC<VXPs34B^"0UifXbpH]J^&Yqbl[kIa`(o`=H[NqJkS_"mi.Q#fkZmW,f+V8Am-ZUJ>pK,"k9t'802D1.q,3ot&^ATN72I8E5<$
%FV)%MrA,@n>m5TJB>rJ6(MNjmQUnmP4,K73=:SP7OUdPs+MSQk)>,8:=IG:u#=b=)\KHf1-JoBOif_s5V%m;QlL[X6rTH:Op/^Fj
%X!5&'X9k=G?uKQad,8EcKmPZ(X5qCGH=;/1j24gn.0lt&Z.^?f0.1l]Sh($g"$(FioP+G"F:+O9Z5!doG7-6/^sP]l@Tt]3gHOC=
%\lW6dO,g3c=FpG9GK=XVr=8@tms'"BIE/[tU[A]6TKeS7*FG0%eWJMWim#5J$#^P;T?.lYp<U[4m:YGWr\HjMcMa*to&`TCIId62
%%mYX/'3$(HjRt&_VsE)5]01dR1oNl@JR.G_R>b]c85:fe6cOFD)+-.DNrBR['2_EF<S:ZAnr!RN^"NZXPk9nOf)[<6;NW8XljljR
%e%rA@>^q9+6s;=.7BJ)U7@n%hBqRsEchO.]q+`B`15n=JXEhbg9j5gY2!`^qXO/,GAj_-dm%?33Z^&MA=M^<J\b6f3"olRtkW"bp
%#L=$i0ibr.D'4p;N+6TQ,`^7+$cipk'rfPON>BEf]rcMeM@GWIqPrlX?>RtiaCN37Si1HkWR7KC1u;dPBJ.XI<^ORQ((_J7_*tQC
%ZWL/Z+OrjbJW+%MiO0JaUeD0]3P^0lh251uUdg7OH!GTPP79oPcQ%\Gf0qB9.G!a!A?[f)cKul7HF/sW]8V=(>[;pT;VBOSA;-'1
%UfN%Z!NekZp^TWaO(,8FX:X*@ELA1W$O:?*@d5)$8gi.nm)YsaXb16eX)3V8;ATqPV-'Y!Oho$;#If?8kg<-DmkP(eRQo;E$kcQ\
%V64<i&8sdINanX!UfRZGS_'OUBTO-Q*%gG1(qf)f84_X'p%T]&Z4n8M'f+DYi8Ad?)EleGj*a\).aBp%B?R2R)'?6fq7$aq77s-o
%OAS]cmYSl]">hO<@Zh(he7^R1>r6g7M@CKOA=TYmQ=)5ol"ah60u:]n+>nJPQ,^G+ns0DkHhmLhX_>#<#tSj-^pAQOQ$<OZ>JnEn
%\u!VT+,+[%Vma,MYi%:45"ni[mjk3N/AoQ(k,j8K!@o\j=Z=Z9NW)1")[^E:G#GY:>A:ar8\;f6:j`kp(_E%RGQjZbc?P-sqk%h$
%81Wh+Y;A!q5=+%71eH@qWm3A0$mon9ZB:7uO9O8%dZ77!kYFUOTg@X\P3P3a8`LY?hoHX.-%HGDf0s#;Kat=-9i8_h5p0&6.C`YF
%L)C8`H'4$o7%A2H'qH$^NKg&H(jXWDFcb:4-fjdFFlP%(kRU(fTtnZb-T-7XQ,`][JS>/7Bq=lC-+T_g"u:i<ncZlPd^]YcBuOa1
%*(sQL0(U>')i,OZ$c4/(3iP0`0_2aC(+(!A=rP&V9?8M.oI$Bcd%G>>8bF.lV"*dg/4'3/ag#kQ2k"#!F+u#OGRp__HrA;DA0p9V
%I"n7,11+cT#Gc**<Fr!'dPF\O200f$@)Qp;86n1B<0:]CkN1CAN.QO:,J_jVpj;M)_;5M=oWm(_iV&i;-r79Urr4pIf`(3OrU2sV
%rqnG<q&\Ba@YD@@fNuX*GCDkVKm:f>onRQrql0X&mDJW!=da3fWXm7#1\9uU^DL-)rQTPrg3N'gd;5?)8<ZN53df$?(O`[gid>Z:
%\W`=H\jg5r$jOm+Ve4&r`l+iZ8oYo1D[k+D+tK_1JNrS)*EMkR,mha9]rWXQRn'8/`3hOUTfCcI<*DDGaO%ggkQ!HL2fdd40bErd
%HE=->of,0BaXa=[_;oe'AOYSH7*CX/KD7"Z6#e(Ka>m@0WXstH"&FQFC>(GaP8KI^)M4qr`7+SjH<JX;9#2'_ZOPu+[NpF?8HY>A
%^LGDm5RO-VCF5j5B(AK`"PG5[aLW_14aL7.,WCJEAfFjr4\9%#dXW^jRk!E6d"Tqpekjf5fPt`$XcUZX*kX%3lW-HOH/8/IkM)5(
%.4]N!'_ZC82N03A2OF;c-tJA#*kZ0j:PDBS9p`]5S7`T*"R7beC4XR0StG9]l]ZSn/O!g;r6?OVGHCf@4KU:dj._&t6:nmBp7a?o
%oa%We+JEG(UQ:N9Bpp@.?%`s,acM`KI8\s5"X\r/Ag&,F#*!)(-"P8DA9$,c>6`s`mJ7r$+_Wp$`8oRWbuPT1;J'QLiFFVY/'L)u
%LcZcDHF9ZfRA)`-U`utZm=^9,4$6Ms7IFV^U]\=2=Qb;;,3=rN)**\ijn+<jCH-YT0&XF>boP',LO`oH\F]D0\!m:>n@Ptc!S/V!
%'!i66?PW""DF='d'Pt66N@.V2@6@+o>E!2d$"7ESr1`,mKQCRSC!#E"+qdVjm<DrIj>tVI^'W'chSG+$%J2GM&5(]EUuc,MI3#g<
%*o_RYb0Sn1\'((nG,AEjecm[u]G1msn-j4:LU:IaaSFhBs+>Ja!=n&[Y@$O$F'llKX?9EP+_&TUYX3'MI6)OX0R/&he'n\e*\k#V
%`l)p!/qd=GIAY:6LF-p,-\=@k"#5]9FA^D-#BPOsA@Ji6FJTN2&)%bD9\9#bht+]ZbLd^N>2i][Du.-04u:uCPGs%]Xj@!Pk<:?.
%l;>k8k+qmOd<Nd9.$Mff2=^=)#e/-bga]l&M;Sle-Vtm)'&\cAF+Kf5FB]6Q854%5EkK!-<Is<:`%o7HL;M#fLIR!*CtUM@]SoS@
%fmlM`2XJ<&b&(OmYZI?R2:</"p7JL-s&#ea:TcpoAp.2XIq\!%JnD`H9"quJ-He7'F&j$<<VP)!ac0X#A9&LdPNl^a20r>*]o9nq
%a_^UT!f()_Qmb`Mp#G_d:p5+F_J_,m?J]+`6lNK`8Fb4Y:LL-_4nFG4IRYp<:64LcW9$Au+):UMX6!TcF)dt@F$(V6q4d7'2O*cc
%7!%@1C<0#ViW8A>OB:AWbp/)DX>/CB1aauanXeo2)aC*W"79e4<ICb)6PY)g<F!eJqMcgSUf(,t2;Q3*-D$<4c,)+VVHPQjg[U1O
%hEi#j^mM(#9oannr:A:S4/NNgr/<,FBi7&'Oq2,O.-"++N8a23n;^:Mo-FKO6A:sHCgQ^-Y[>9o4BO18?.Gcj$9;k^M2sYTi.Xr]
%U2ru`_;(\Jfq$`B]0:V,DZ2Anq/BgQi?-eL\"K:QCVClo58UUriJ4/WF*8,?U?s9aQ1Mf&mR3"7%b*<,.m1jMLoYFMK-1@g0<;q*
%==6<nSXOiIrLoUN4hu"\q*QkYMYU)mT3O*PGD`ZF75I`Sg8XNT2Kc?H_!Thh!DJ[-YPm6CWTG3JLDeY3)+Xu[B:ZQlFmA*p#7fjC
%*,-D(q9[AN^2C@`JVD6]2Y4,^)P[Y/b'AS+Ihm]td+0iir_9V2e^%=D$W+Jt.;>bF)!l*QSu7b.pZ0]LcY7)]&B4\iCALcULRS5'
%C)W4eP>SN;nAHTB>f^o1GV_(m5dOL_QqWU#Bk/Lr&O+G>]Nii-@O9mU%tGAZ%O4l-Ao/(iH%;*b:0\s%LSlXC30a#Uar018iq#s1
%&)DWsjr[#NEragap0Q,+,&^?'1#YFeU?i)['_B8Sl9n&&&@Hhdr2>+qb^5G--%!c@VXjcmA"EN#VIJD&J*?"WoWjB!q*QkYMYU)m
%T3O)qk>I;?d7h1/>hl?J-`2!l!k\0-8-5UZCUU,@#7dl)G8QIbo[>1)1f)CXEJ7*B]^*A,S=fK*a=R3U2]oX,d*81f2^@m1nr%8.
%osE+h*DpQs5YZ/@@\TjU'JBCG@bOr.HgnmRMtBMV0b:Dkq#O0k]Oh%<b0PBK<0@*PPn1!EB]W$mPnBh9_m_t3j_?f6d\?1WVGsl'
%S+`ohkG=6-&^ei,]B\NAGi>,\PF$paakIq&Of=mq>r^@*ZaYHcKR]r`6TlOVq3.jlb;&OE?1bJu9Z1ep^]>noXjO"5`G8pCEjd<c
%Ej]W3dT98BaFQQ5WgFcc-tmA\I;]TqrLBn5:'TWQeVC.g<:sm*eLoj86=*YL_F@"a=&hCLXf<*sZtMnB5(*KL&a_+b[o(\&oHKEn
%%AtCOeH_;5&HsU`^$Eq:Wh35?#]l",3)oREWXi,.kuBUHmVH.$Xn?5WDLA*731Z]W3]rXD7%j1k%GE!4kfsW`O#"\3&FkYtoOMu!
%UA.c,d(A-SWqojum:?8-<ILh2T0ZJ,]Gn58[r73qD?PSSEl\J4.4'q4Sl=*;"!-f&TMe181pl;mA$qDU2HiJ7;_f?m^K/dj\[)7A
%lTm3c8=D/ml&0(b'-q*(o@5+G'IiXl'dr3;F:X7.DPUm&%=)3HbC^=`2#"8i4_GI*0A)^qU!ANb)p=[TmGrFW\Ka<\;SSXBi^^FA
%b;(CqPBG3^iZcgdnPI/[/9#.ls8%(LY7CgmTBlcWJa6]#:e@(NZ5JTPA_+[ga9AmY7V\`h.c[]@7N-YfkquG`\2BtRai]L,m9l/R
%DC:ZqOsPRTmt8X;N`8M+3>mrI**!H>)5L,*$4KcHM`)oA(b((Ld9o6=lq%Q#(R`cdYp5<u[gnuUQ]Uf>JXlS6oq=7I6Ce^J2MNTe
%hPn1RhW<3_bp(][DB'S)N^Emb!Ln3OEg8E'3929/bge\;7OkAm@6Y65YbB(1JP*Sg!=_amf$Q4AEG1os$fq"@]Jpk!,e<R(n/(.a
%9q98Pf3C:pOeE;@5GV,6Oee?2Mi)!i/StnMP(lHS#-5*NEeIUUQJgQ:+e'/.+f.%X+mI-7!VM&O%tNcT6<reQl8FkBFB^#;c3-k\
%DPfOp2GE4QMO0(),c3CiM_8')[-FO5a-KDAAad9#><bRjZaW$$4Sr^'_a$YZmDr]3MrT5QPO2SMeY.!r*U7mk<r*X`'%!DTJ[[c4
%P(jWDX'[EUM'CC[q+OA0UXR:Ijh%lEXZ"7+A<TGo1ZXJuKOD8)b8'3E"#Qf@CI46Z6s8A%o(5@5O+K]ik\-t#k8ja=L)^h+@CZ6W
%KM]Lqa/uN2#EaSm+l^&7Soc-q20i(2G`:_mnca<%_d85HI]4DGetc)n,Z3$#?/6rSc;lm8"!9+Q<)p9Ra=W,N<pB,+ORCP+"GGrY
%;qRRZc*&2?U<qb]9Hf.DTg$jLFJms=8=Hc6bDhnt6RHjEV`)/XnYZpj<aW]'<@OMH1"Oku3sc?ERA#!f'4Su92:=E1U8*Aa]/'tD
%L+P32oRtQ<_6cRE65+4Zp`-d,\YD,:!Eu"3?X[?<i9s9j=K5o1H"0A4k(o7i'-1F\aJ4&#!Ie<!D7C'-bWPcFgrqtuJg2e.qX:^#
%I":<q,_"D4,PeUXdEK9;R2mXFBc!]:jM]7W*sR]^I2FEteI#T&ka\dMOQFAFoPG+?`IV>`L:JM<eNa-QT,d\4HdaSQc+3AHF=\Vk
%AEr5:RSG]cdXu:cTUL.""tL^?>1i9,7E37LX&2Q<&l?u8.&_.7Eb]f_q7`q4leQAcMI7gJO3.i)hlaMXo_*X(RsfX,kRbZFGgh;O
%(WbTGdR0L"F*dN];8)6#m02miH%tNRCO<W-RoUW)d=+:9id$_/\l>cbcR4g#b6,-=);:R^)'tj]hbh1fVp2;J;.l\t?-nKHO^tRo
%Ku-UQ"Z*<]b5rt=`<PN9]rWV+%$Sf2)[WVY`D)^6($B"'KZsaAW9P[iK"Va".3A6IAOUq^<?kc\HT=9<]/c.u%Z.EWBu`m_EQd\8
%E8e](E_Rmug+'?MN\;>JAH-t4oknK8k;JEKoWk3u+qsDUCd/,j"L<^i83jV&p::b(5U*?IVrm4,78V1r+_Gl`09UCf&Ht%0R,SUh
%XCr4#68sKZWKE`UkGCO@14ACscm[Ws\.dndM,Bh:S21tW%?^bH$Uj]0Z[+OnT\*'Ge(<7XeVM+oI?NjL\EV?ia,[<C*7^r0aI&Z<
%dNVjbqit"67ZJM&Cf+)H<m-U`-_C&jMOOf)79ElDWmjnCQqthF0YU]'i/"9G/@)1F:r'6R%Q0nV2q1)[n^oR8D;=^iOr\U<[TVV-
%eIK!<8Sn25PQqD,EL3t]MNto;nX+PgVkJtuj<pq=5qaaWC%Bcr4)N<h3KA7leme'_)WE>k6^h&L*O)(W.i"N%N`4s0\qJ#_2#W7Z
%mWRN""%q/Zr@S)hLQW`rLf6$:,JShhlunLu_40!qe/0X1NFfH0(Y!Wo];'e+W&FK/;Tu(BLa\99DJ(,pd%LSJf&?bdnqHn,l3fG_
%PWa=qdJfi=7f);H\5?ThKNhTSlE;)i2nY*dW1K[&McL]/lFQ(Kl7T%$'IP@;CGmrtg>k_=7A\=q<`Fsk='*R4=2"KRjS&/QbI@EZ
%Wu4m$pNlgf\V`9Sa+957W^*.95&hVc_ubq%BocS$PeP--TN^97[AhNm8V<U8rYjL4HEJkReK\p(;c,,?5dRpe03bgVDDj4[Y`mVX
%D.RRt)$ol`lt!dAH+i`Cp0LT9)qfQaou_^L^!44c2O619\X@"qDe#Ck\F*k#[omWs[*RU<ChWagajn*VSk_1#41&j<@L<GFJpjn1
%bS?pjJK9'iU<So>D%(c$ntO?n4aI^I'[@LYX+sWXEG\'1PJnPg=jbX7fuT8m:0tsrnD#dLb<a58=9adsi9+5I8eJc,+j7YCYIJGJ
%mD3#_'0ASSN:h5/)1lQ1Lcs9$J=9#B::u5MQ'K&A(9I(G(f7h5:S,&BUEGuX-AjTF-Pn"mb#u-1S&a`,G9uET\C(hKD]TSif.qF-
%BU<B-j<IX<,Hc=8b^eE51]"L%.JmfS7&!PrIm`5/6>uPeWaoF`pUfk_0Z+5.)!ssP0B=;7FF&7,);<e+c_KaDR7]A`M8[7k)JEXF
%>`_$?Ka.<968$2@]?"29r5VKO%]<i(<=m*#J@/C#\\0-V`-D!n+4M"SRcV*_V8^kN*-+_n%L*<ro4GTTijmJ4)s(ZZ#.8ktTA;uO
%?G(t*G34d/("rgXec]m=VpsWg&:C^_Gb(P=)!&K?(W7:KMg.*9ql.pp&4Na[9sq%@489cSSXgVWh=pV'A*8'-PTh^S?7GDOJ,R:6
%dpKlfj1kWU:FQ+NmV;6:a27g,#n@a<>G4j*R&\Mk9Lk`NWkG/cR8GZt]J(m5OA\3+GN`U,EU`5KK5SX#7OC'3;H00u8WfsL`4,-/
%3]LmYHQrkq4RUV?MY8[&7_0`9Ed[C_c(Y-n62bXbXAk?SQDL$K_BR)'0)Q9<KFUA#]o5@fHNAPWFh%4X9%'>*jkBi%e^,"eA6l%[
%P[DGt%Bn_9%E$j[/[enEnpIpd2H?2_nI).GX3c18hEmBXSAX;!Ne_8ZJ8g8?,Wn!i=h5b>W,B9$^q=+phWGXHf5DY^.ne>-THrJG
%*c5Br_b"aq,7AG",i6UgA1JP=T!LbCObM,ScX)[6Js;W:g.-=LlQ`Ia<?nO]lm&RBnRbGR.h$s;>tm6kUs0BNBo@L!P*X,3#=]us
%M?>*I(Kr^ki/,pSHF=o)s01*Vh)]M]\!g;F]+ra\K(lD$d5d/;_];oJ>j=oGG*FQHi:DRJk;p/P8e%,+`M8pXi*?HBaNj(\0cL:m
%&HsV$(0&pejEg"_ZFSSFqt8g;l'-GIZZr%VYnc0[7%5;3?6Cpoqa.i=/:9_cLV8KD^"h_>ffdn7G>EDXE=+i:C(4di<;1D<=2ZAG
%7e4G3*q+Buo,V@?:77@)`lb&0f(.B*]02X)Q;>-0j4X!mUrl6MOgg!tK]]B"2DTuDnHqDeC,>b?E:"KF"m##uCSSZSQ69Pm4$8mU
%]ZT6?qo9Y:2I7sa,\RY+DIsJ)1g>.he?]Djn7%`E!N)E2Kghl9!C<MDb%;E#G`UUjR76TuWmZ3cK_XUK95@5O4cf%fMc.RFT\ms;
%>/"^CiR`Wr53>FtH\)^=9FdHiZ)#Y"+qqeu;oUT%?oS:QeBB26e3;VtqX-AVc^jod:P@4Q6Fo*d5!2HWaV->a@aJ9r&oA8+m0IZ!
%_,_r"H[K'r5c@YN[W7ltSJK\+JmU>A6.X1RrNtTHd99OfJ><,>.b4&HeS"j&]dLY<!s`b;rqHR\E0c[GZnTkuJi[WW;t@Rt\;i$G
%s3EJKGpaC0'G&k'/o_"3SuEdZ:AsO>X958q5V*+,1K?gmCdi?W2_I/AKt-B!Y]U??p!6^=IT<1n>t:(8B3ZJ715D#7P$A5rrUX$h
%GE2.dR'LecBt"\VCbXB>GB=l!KNF7tpXC*-)hNb=J0'itcOfJFi:5kk[K4$EG3B77di+[U;s6ZgP_oj[qIFY(U7fNNe(+H1g!gut
%/)o45#:6p?i3"i3d73&ANTrY_'/hOe6B2XK<@7,;g#\f$PPEM[B?/i(>pc[SD=hOR$Fu^D="galJ@]Ql633KO0TusS,/MH#3)TAT
%JihY2Mjiq,]!T9`7OU6a):4Ss/U3&I$=`V4+h'_l0";e_i:4HKHXES.V8F7o4C4LISdagnq5@Ok&9kX5&Ki6?PiG4LA-d.I0Wchl
%(56=ZVOF<lQ\C]`$C%$]%-U9_P(ApcJmhG,Cn#!J_Nr14(@>Ci2O=>[jDmV:SBRpJjTc#JH)rq1_Ck$UV,`LK!HrQ"TLN.PHQ,R2
%SXEK0Lss>8j=FF,jN=o:k,)s?4E&X((MRCDn4#1b-0X_Fqmr>LK^r&V7?AWN$?E0T1*ej+jVqN&q<19eo@"]'/Dm[Uo(H9(FF/%G
%g[:idh=,[GU=,Cb`mWh*AG-YKZH>s+7/J9/`OAYmXH"d<#,b8L'.XboC=S2d,NrXkBLTQjMo;Q3"K049/#!'H>&b7H.WCJR+DuDN
%MM&t@(*/t1NMnIJAFgPD\B&XQX?gbS[aF@A%1t)>A#GeSHBIpq"g5,1%@gI#Xbm=ilGZm[m&>\UZ\r-p,oEfXV)P,p]TLE>']U[Z
%TsQ/_U"X+b)O_k?W#">[8#KuE6SsuG/]48"B>Ll$=17KKRW4U$\^m2*M!FP#2IB=@M[ZN;)?csY)pL"^OJ,"kQb9!^l)@/K#HG:2
%?h2^+Z_6':F5(jSh71OF6!Iu6,HAp+ft:-AijD\l)iJ^/9"SZ[+h]!)]99;8aDX,pema<IK8YZ,8<?2)`Cu%fh)Ga:jYk13&@]::
%`m3VE)c^6K)nNp+aa?f?C'bBX2<[cjef.VF&thSYad]ZfN.`*fZt@PE<)?>rd\'Src@TJ#/Spn^2<,mqE2>(u%Fs?q>e['P(\nN2
%2$jc;2HlZ-(>qTg!&`KA4PL^)RET=N%[AmZQ9DdaD0ONgMZh4g^@X<_LGtClRTe2RS/Q/SS9h<HWXpJmM<]#(604l2D2_8318DVC
%WN]u#[jU@ImB0Vi92M=q0;B!4iJhB^WYG>-N/d`JL:+A*VRrYF(R<K@#R3L),*hodL`DOrY2Is3URrPFdj%Y!QeOf-,,JA@6MZ.b
%hs>WBH>=+dP)n[Cq*D>d6O:`f:0[u?4e*Fs&=dDr'oUa*gV>\R\$-)B1ECdF)"/lF$>$l^F1Sq1?:,.4&Ht%0R,U@Mj-LMI*LpsT
%1$kb3FR9aWm:XRAcHCXt;_d`cIc/MUOt8?u9hI=+4ZE/N:7qDK=FmiHX+#,#7VieZP%-C=cCf'g58b_)pBZm%]MhX2YnCB,X+KVu
%[Zd1WDg+A6$5L$&Z;NT$0o/u*g?m7NI%cP9;,DD<PM>j+jY#PBGIdYIJ,SQr*5iklhrH'hCEpI]B3j;V8!0opE^9[Vm`m\AX3W:2
%ZQd3>A\6RgF)3H04-cH0-u_]#do#f\rqru"oTqf@a'Z2tnF_tCK)P!]M<<^ogV;rmD]\oLD;mF"LF;r>gW(C4kkh9f7F*J&Ts!.=
%S%aJL$=A#)I%sHbU'?Z6@]&&b:!TCPN"3S:`hscM*&l?Z9Sp/9Ff,_6PJ%5&%g(ppA3[A\365\rM*M86?Pi;_PJRBV'ee$Idsu6?
%!gZc=b?Zp\F/oh\juC_Ql3I"oqDsIb%C?ODgR!Af*JL(de15W=\;j;k+4eOg32)l#_mLB&OCcjX"t,sh8U3CZ#dbbk.Bh+saLO@G
%Z"W[+X_tkn#ktjKq#&3hnVgcQni_"cbRX'^IUjOU!fZOM+,3e!2K2Zse<to8]N'Mh7jiiulQK_a't52PCd`Nc[1#bUK.Vf%.!j[W
%EnnWF`-6;fY`l:J?"\P4Nuk!2fhU&S(tjbCU$?tM$F*H)hsR*(7s5NZhdrQb4bj0nkg]th"Zi\k"[?=mWe$RRUDcM-i6?8hMrPdE
%[>s[RIdFPr^9>Mm);jF_[Z'ZJ><)4Y>caV>h.Jg[q")8Wl[i<$QMh;-q6G]ta'V6Zk8_-$cRVWB0B5N/4,*"aUi:2JRuBio:u&!\
%3MiBcSmaidl9bNO$=@]L\o-^0TKRp.h]hG@FJE?tR(_p-FR9pLOs[24!)8-Ck+/a7^WN5s9f\3dP3=]091jguWaBljH2V8=p(m@f
%ClE`RQ7KQlC?>^9l!$%)I\T2PpVaB'4@_:UaPm)mD#`2CX@#dh5&\f+Y[^"&C/5%()]E0lT!%bIp,@-EP8ht)`s>bg(0<Zl!uQY(
%RAes.g0o7JG7a+GPn_qWY(Eu[TpVU]+;r[OJ_H5p4'J&NK8Z$B(H]1\DH'-#PK0U3+X<!NSZY`Z]bg$p/C<<ETq-$hY'4b:Ri?"U
%UKjd=oWu]EUT4ebW^Hs0j(Q:2Q$L<TTI.UWAV__66>j6$eRdLr0rsWBdHOMVMIn]N5kDcAWEoteMHoW*?8c/QTfe%5Rs@!?7>:o8
%U1*d!49\h10"&h53BV7sWFUfEbsF%_;U_%DoVJ=`$qKt>RaK3,(2amefH0*ckOu4WWXLZnATonGkXL:9eH/*%K2OW>QWdpUGM!LY
%Yr'#Da[K3eTuWG=34VnWma[S9H6WbpgaoD.XiU1\m:C?=L>V:o2uU7n\+4W6dlth[jkM7o6$aTcl*%b2cJ_S%[27H*%^'XrZI^/#
%Yk,@[l,8B;Dc)F*8u`=N&`>N"%9dX9<Pbo;(:MIOhBNuiQemP`nO>8mY!RmcfeS/)Mk4!Lo2EAT5!OY:7;WpYiOh*2U`47.hXU3I
%EiFgjUJ9sYOYJ\V)a/qnZYgO0HZE]Pmc-IY;4Zs2W%N"!F$fs<:U]B0JDHs_'ik/[$J3[<a)F)]kqS^rK;1e,j3m<X5E@=]C((nX
%KWZ6X6_h.g@lSo6AjNmRkI0bAhBST=RG!D]njYMr^;Jo,XN,:+8F&!0W1HrM/*O<L31Z?-(f!$Xd@mCVl1U^@a-B:TL'oIt=,ljG
%;;A*)S3GNq4#B$>$T,W9Y=V6,VDk6\]TLIh/,bes)<t<&[*?e,AI]k1?=%=\G-^d6[RN7[Bq&eieHC=n+RbO,a<BN`_tnmK%TXZt
%,_Uidq^<:,`HA(l9,bc`oW1mpYM%:Jjp$P*W2B&-_7o?\iqTX44("QJdi1^E^,P$6$X<G+npS6.X7o0[q'(Q"2AC)%m*cbK(q6dX
%/A]"2EAlSgh90@TrXBqjj=pd\aMBST%aCXd;m$`>-[N;4W4/eZYctk6HH20[U`h4ip>r.US1&D8jE]t@-sT7WKgRN]oceEIo1A>C
%(D"4SNd;<:2u0&<LN&m/pEi0QHgkW^jW@#D_E4a:X]CZFcs*V3;6BjFL$Rrr'u-IXb:/a!=Gqr84LF*\d>Gc4U=n4WA711uZP=jf
%p"uQa*BgdhZ%kNMih7*:+Kajhe_#YaC.6/DUcEd_dV0%gqG0tuNZMBoH!<!K*!IEfn^*/K<r=LP&R!O.=K^54-,DfVWtd"^p"uQa
%*Bgdho3*l';^I(dd#*TZ4LF,2d#($@;`/Qi($WJP=5*)8-`Zp`PJVJ7d#-0<TP[)gc9j*'>4KssT1(9u4_p]*@lubCYc>+j7(*#`
%'X"3d<d\4(_I;"8kDG$q4LF*ldY_u)a>c,og6'c+jum0!/T-@X?+/Kh\'S4?*m4&nEFY7=;2;G>PiXtV9:J\ejBI(B5HlNqP/m%A
%SiaBq5c]UVI^HTO)0+O=GSW!O4>D9chb*!/8_.gQ=<t9+!d[cj'Odc%#H^,2!-qgpbC^6l8Z6lB5O&kZ7kp^P5b3r>'Rge%15N('
%\0i*8GIS?fGeB$d`,OunhiE7[!db#da1nl'L%[b4q'>p;aPW+=:dV-/WB8L8COMT2!"Es[P[`iRo/P+'TEPXIB'j?oV4_R5JHdn<
%g:2%M<7c;VH)D7J<LqSG&U;Gq,-^!gd2CsYatc3hHX@Ho.$&rl+l67U".MDEh2WBd!qfNV1S*<;[m?'*O%+,AKK!nMSQ^mre]*8!
%1E(+8%r.kT43>.YM"nb_m9m7D#(Z6X]@3!@P![KH`pC?)!VoTSbil])#[uX;SDf&D1l/"E-FGT91%_u](a_%lP(ap!p#&SW']_.f
%AFQ>?cEs=s]=+'Mqi"),oQtBV;k;EE:*U*C?uA#O(,TP)H5n=U2[UbF[R*YVRRMM%]V(d#>>ZVY:s5UJ6]VV5*GsuSfcjtGXH"Oa
%;,A06TY\l@44f\Mkh9>umkc40q7'NZ,`\Hh-^#\3N%P2q$Q;nk$3fK[_,.8g5gDuF7ZAV#.TT;5/l-M5P[`irjY89'4R'[mQg117
%?n^.NR?6Q#UQ+Y4Y"WjTft>e$d)*j12">-=7.B7l8R_`1n1:4a7\_rYX1]LN=BC;KMFAm::`uZ7f<fq'2;2lfj3!rpSCD-UWS4_$
%O+OJC%8C.U3d@7W_BcT&b<$/'T9QSL'%n(,Bpn1j6<S#6"J?22"VaJC@%uOD(8[UuDF_h(6pqne/pD?Bh$-$F4Qa`p.2?@ShQ'^J
%Cq!8<)GuUUAjM,f7BUiP0:V\R'1Dh?U:WSe7;SR$q.+oq$9_&?MNVL)DCD/7$C]ri`1;dB\];@M.%</aRd8I8ZOM4c=`fjq^sSXH
%Xr\.p\JLK"(2.Z^d)NJf2S->\bWCf?PG!KAE+!QW'AaRh1%#TWCS5<+*@q+!EbMdVN^Q]&&C7s9WS5`Xob98>WPq_jTuWEc1O8L]
%mZ.&4ZT:Bt'U1KiUmP:]iEDAMPMAV_n$=0'^.t<TcBPe<I#s2XPr0tS%l26pkB,#j"Hl57fi]b[Q<0;sP,]0iLkht.j\B[$g7ZKO
%_lS)+4`A5A^#B?H?/!ZPA7hQglUc!dD'tbG)%kT;<WoMaM,cq#[)4T&<M@&SK*B/n>t4qW;(t)grb<j7^1l2t9tY0^jN'/pj@6a%
%H<b^]BKNl8#ct2/j#h[17N,F&_9IQ=gQUFVgg2o-UUN2uSb+kaXC/a'L27cSQM7pqL^iH"JYQVi4Biu#NDEGrU1@rW#>HgnEjOR+
%4g$mo`D%=^19/AIlIguJ-8ui[Ceo)HF$&'fdnpH"0Aq8M)k3#QgRT&$g4JI5i.I&M!fE`q>PBYt[fIDTZ<tu>CaV0r[::/KH*id)
%K(*5-kj!kfL/Cbc;39dL6%s/EY'4b:RqKd[Ic&U]d[-4p0si;o0M!O]2XcP<WdP'uL$Rs]8asA?6-@iCrH;PSS)\PUHXDeYZH[:`
%VYp5W"Ma!r`Ti^fIf8pM:JZK=dZ]X&Y<*Mf3g&IB0CDq"&k0E0U'b2Uje-Q54d>1%8i0QgU)Zet:ni^Xr=C:OAmsnX%b0?>J[[gd
%j1R=t<T@E7U0$P"](Lf/MJ#dFkO"sI&)I)*](Li$iVJ#gp%rY$j2p#RrJB0)Ff4/\p*Vm/b0fH$l73jQ;GmES/(>Sd<g4,*-b81`
%1u$Pe7[$@0AH^L-OGBt[:MCMZNG*!GUX@))-`9#7PKitE=Oof[ghVrp*g:\$2/")$-A>o%:ag617R=S%>+k<;UXA3+Urf$"DRMY*
%N&6SbE<E8RVPQ=j?Uhl_aFlB/)Js:dEhd\;ft>Lq"=+]OqG*lXMTL:S^1dn`cqDn='Mo\OGp[6=hJTDC?\<$4\W`NMcFXk2@TL\u
%R_pI'[1TN#/57O'Z8053nt\-([M?tII3JTSZdDi%?UVpOG)]J1/26DbH?Grul1K(E>Ho=L<au1+p-[6mG9jLhFi0s+;`?8A#3=X?
%9C4ukqqdCbL5%$.)JqSIEjK7;Z+SQ+_<8UF4j=N4\ER4':\0.+jY/na<K(sG._\7JpfsT]S6]!uS_@n&T&j_tXl?1&RHWp%r)e%[
%'@P*<ZuJ7NNP=d*oB_;"EdHDl<88bdPd)ImJ]J.SSW**A@^'l%c:?_c=]jc1OZ.b=#XTT+]cF1t)G\"[WC`,;-d#M@"j.pU-C0jj
%C(ahnBr]#[h9eCC1"G,s;b0Tj"[2I2MT!Yf;M',E!7)Q_N2ug,;+9Eq&mfk1P9!o6T=:GBjt5Q^T]`'koN:0Tr;(;mN*(;q9Q%0S
%oMF9;<l";Kk>f#io8?WhNu&V?37%dQ0LS4i6?*`'o]#Ig0ikjX54mj.(Ou'YiBEDs.R-59#-u]NE]^[2:F1[b=raJ=J;V3doMCIl
%X2S&B'fa_&Tb\0HphA6PosDEYBiU)hW%)Vc7>5I[3%8*&&%21t?$&-hGZ]lZ>!1<ok>@-nAX?GUoDDOf7<L)[']>d+*Bhp3o4kPK
%P>-h?Gc8SK/Ug="8D@H(Dl33\@RJJN:)pGf^ajL;[<UK;*,>#mW'tV9]B_)W=CT!%4h#12OC;[Kg5qM"ZGE]tnp57Hlj$J8.mEXc
%<V1MIEbNW`>Q2.dd`,50p"m_3:e^\[[H2Td+s!D]`:Y\e!X48DoD0)0U98et(L*Dl:>dUH]];&:ih7&NTi,t[Mn!_M4Q<TP#J?Ik
%DZ>NF[*OO)mC_:i'+2qdVej&D(8E;c]L]-S>3*u>Te/BAK7'mR":+tZ6@3I3'_e7[;3sUtd#GCq\RMEZ:Fk<3]`@^Qlbj7=Tn$V5
%BYV6?'k1dHV!^X=n]Qfu*pQ4`*3Mj&l(aPq;iUM5>NG*c_&r[>J,]?,YCG4`r:S%eV%pab20`gk6O2F#MkSu,gV<d/QTnb^\0S_O
%_&'9]0B)3NQA#-(A\NktD\s,]/a^2aBco47hDBj$KDAL&c+DEKb('K&`ddc_lh=O"(45f!%EnPCfu!FRJu_rEf:S%iPVXDDQr9=!
%A@&I)CuD6nfVG;er=%@I[f-SPE`bZ.q<rfO/IkEg\9_2]XFAbr75UHI5+&W=/%L[8$HKU5fG<h>JE)4T-U0+Afm'j]<qUgfF!$j@
%K=,8K+]g)-'O2&eNZ=S.a[h:!ap8LX=Z>buOL>QW=f-]I9)hf#dNnWdImJg>&X.?u_J2O_GVP=B$BJ0nO,%NQ_4/)&JIe0?`3Zk(
%KiE:)#]7^5f(]Y'">22a)Tns'Ru5>5NpdLbf\]1d^QYf!N@Gj'#3ohZeN]1fIY"TW<E[)%SK:Pg0&Hrg[>0+TDic+cd)Q*`<7UTr
%WRB:C&190Q=d13IB1(4-X0+ZE1_d>%[7Vc=go"d]V5Pb$)QK^rplYSeB?U"BVf07j#V;rB9cn-H:t%XZRT=A+[7.c!Te(%Knc5ej
%Pm?e4F;6VaC'?)PCl(iGc_+36.r[=55>!@44$1.e9mt4.fSHJTe#N6X?&8JRWqu/QG!Dk<IZrE-DjUG`P!(<ES]S03bn,)sl@#,Z
%=hk`XRimeHMM:!*#-sC(:4qY-8sQEI=;f'B.+AmHC$s,SKZ:WiT^/J=*Q;1a'2jd&YVA7soj2J]E_k>d2tN<!/Vo[n(R8aV!+hVi
%3@j_QB[#$XP]oou@!928d83*-Vmahg.+nb7RTc62HF"',>Zm#<)5+s[W)*Vr1SZU:@mrF3/':P$C8k.d8`jLf.S@ukNZ2V*$$,f3
%arn<r:mR*98XH/<!MrgNd1f&6^'.+Wod"Z-lB*Ji;+mJ6CplWj.uQtR6be&p96Fd]m00<qND*Y8g6eJ]7b;gHq<3C8\MOg*j0F?]
%1JX*:::(IpZb@n'PI%]L*quUY"%AGhZZr4OmQ>/t^/LNG2X#-ld48hg.7Bsu;:S6>NIoT57OBc,D+m`?@8biNjs(+g[>hFC#u`!m
%MX!PK;FuGp:f`!`VWm%B)$Q6o_.6Hr5TZbnV!^V[p#\Q(/"PI3[m?'*O%"%eaDr_QWF"NK=dDN61qD"I@sa@XS_M9K@tuNX*uoZ%
%]d+#)<^\\d.^YTUhJm0h$HS6Z+c!FU/4qceU8(J(Q"tDXP"VPa6]VV5:,.BC'+5-qGGI)N&C$(6)p=G2T<qY(I&u=#<8>GM0I<"l
%%U,mm;?EYr[E^qSknSP*8Kk-sO_T&k/RkNQALFV>Fk3M3Ps)0-+Uas/ZII0qS9i$&`e60%)JqT4Ehd,+Z+O"Y4=&ZT]Mao4'5>>S
%8)k1+b:3'7BZdb5'MoVM'<-NljAG26l;!T:La%V%nss$$[mQ2aNu^@k>-58,FlW\mSS='sBQBlq`qCN641CEuqh3Bd/mlX"Nf'YG
%f#fAg/^8i)"4tLq'FMp?Ji;]"5h$I3HBPiQjfm4&S=/Ht.)jQnb+hhhcrXiG;VRE&grm)`1c1Vgkhpb`Z]j*41@I"CGR<@T9b9FQ
%RaRo`[<SmjIPMc9?G<1bHnQ9['S&YhDMhnT7WsEQQC5*P0>trlb+;J#?ua81WK!:']jPVc6CJ^M2P);,dBT6EhJ"sjG`eq28Bb^>
%l1#jC%LP>-N`=jAFHg.*oQ$YB>h+WtR3rT=J/J@i>n`LM,,ioSD0Fu[@BZG=5s7?4FmTMR`2/Fo/\Gc(nN=n;NpXdUTdr9o)qcUr
%,0qK4%Z_6>X$a#sA`4bl[#GFSbeTtrYMC_i;!LX;:=L,*Xq,P44_`u']*!B/4:_!7<t!#?]'iKZSD<=%CICOR)iZba4#tj%SSUK5
%W+[pi=(H@lE7m>UWd'5hqe%hX#6P-?7mTn^X<CbL;6$U\M5Fh=K-lp3\MQo5oXOIZ'K<B^YnDqD<(D>O?Ec;]TukPI#MYGIT&_f8
%q9YgUE:_=kY9'cb1/qC?pkbRGjn$HJ!ck'//_n/K3B[+\+rlRh;DeuRS=AU1.)jQnb+kH]&=NruXcDZVc\$O0Bk2c!2[\qg.rp*%
%gW8Me^T)N6`O$*Lf]lk4DcofWggLcJ':Ufm)QSgKZ>j!>Z,9CODHd]A/pD?Bh)tEnMT;g.M'S?#QKkj.O+OKr$#+96g=W"Xas=HY
%bss;"lCHdH[]dii;0C]\P'Z+ie8"`4'M,!,la)>CE$j:_NJ^uu>H2ksel;1<[\bnESZ01Y^4K3Wg/*l?AjM.:8SrQd-^i]k79Fue
%e-RS`S4+es^b?LjU$Tn$1BeIj'RUt(F!N#U\CPNZKK\#[1KX-38le.@X67Dq3_1/O'+43jFG-9CC'b@O=2?+Lg9]'451%<kh$g`4
%]\#2MCqOIS^)o*:_l(Zr4dQqd6t`r+X[FP:@nNc?kph"XdHB%nUs64V^YMGELDp+N2>Vr[S,@A32!:'FAue?.m8;u%o4!Re<9q_!
%iAu9udB=C^E$q]A(-T%gTgaH1/XgWT[^/CYDA)kJMb[7;b=UYRH>(^h[A_DlrHr;+6]3!hoEWp@oLHO"7HXu]etVG7=R4-riAu9u
%dH@p96Vc[rc\N&_H>(\nMuG\>FJbMRkFsb0`/W6oX8;Aoh*[)Af1Ul7rENOu#L,3t_d(t--)`Rt-oJ$b6n7;uE_n/AH5/Ru;]NsQ
%:p*$mErB8-.6a;Z)WA.EFNOsAU@o9qh'A_^W6SO##[@Oo6l(Of4`on#eY,3B2N.%*7:5M'$[p(!1K<:NW6:9t:?-9olA2BAni\,X
%MG$TC#R/Jc(G"52?EC*dUem'CbS?!SQ2"fDY4>o;65pPtRlG-r6u"482ATue]i`XDpHkReLT6IhLRf-?ZkqV<mJ(DE?JN5G*,.(_
%.eqVVReu)CXs8iZrT0?uIJo\rlIj-V'E,W$D7j#WNW%h\Q^\4C$<:dt'SYl:O_j(1\id=gI%l^d^V-bmO-t"J4"JoAMBn^eI+W3[
%iB7Ok4sT[<&n;s]`ZZprfJPK1#qJik%*g[8-#[jG.!.ok<o@X>S@iZc-9F<'O%@,0W6pYs_FGm1B3"hI4d,;=CA.IT=_m^o$LM".
%C2lsh1uI=&Kr^lGfbLH-GekMuD2`^n:<frWd1C/.>0O+bcAq?\Zes3t<CCtCp-Z/.Rf+V`lm(GA<pVmZ\i$=JgZ8@$*o'-=.VS*i
%"Y'tQ.cLatK20+_^sN_1hh5PCZ"*Z-laNJ>Ga?it>-!.I)s!V_X8fh(RXXu=cK"H@X#9`8AGu"oSkNP0G@pgCAOc85=[)nT&gmlF
%]So`.P\u1YXpkiKS/dDeBs_K1,NjjEX\:W&XV/b?](Hb-Yss40M@U.SIODB]Lop7Cd#_qJ\.MusS0)VJU9f3RXc?,`lGOOYd#VL0
%dUt,XaKr.ES<$$7lUa0;ZRY-n@Su7b+>d29Qg+U[8C;9fAFcJB`q6'm-FJhD5'3GQhGY;_a5`'t?hQ$,.d'<6Ks`2Ga>;:=:S4mW
%,L=A]E]st%XXEL4c)R9UMFEg%,L_#nW@l^Om\ljt6R.d2NAdX][F)CQA3P10kgQ_ABD6'A<D:d80$`kVR7p2+!qNI$:S4mW,L=A]
%E]st%bti(c'H/tr'T4I(#6GYg^8IOPl`#nrdY:4<0,e\$:MO<9gIUI:<?K=0)kH9R9@Gdf!bflL+#p:"-L+8IJC5jeaYQtrBA$Ba
%:<0'MPtl5*4*,ja*fK$4k'9L;WQqJYmF$fF-8ui[Ceo)HF$&'&lqkO)Wmioj#FJ3SgKKbh!"CjMU`Y-R.**8_<iBZbctLVDTuji:
%/r`alf7rG8.;h\t1&@_-8TYY_ND)laUX@*T,j-PcNGLe)S[+sQ,Tm!U9h-":X-D_m^,$0Hl%Q]:.TO7iBKE@=pJ_aid8<D\.^H)6
%9LW",E:"$+?rhm-.+juUOQJs+NT!IS9l_20]MJJ';@lc$VtXk5<..uqB@7<`L(h]<'FLguJt+u6KmK2I($0f_MHnK]U"WL<589/.
%km,SDma(1['Lue>,9!$+BXG$-aN`#tAFiQ+dOj6#km,Ip*4&E/d:['r6(rha-n+=9'Vt;9/>siT:uohGQUe$;oL&/IP(!t2S]eT*
%6$3m+7M]ZVUX7;p,%i:6NGRHa9N$Qp(T1hDBg36prFC!oN3f1cKI-(WU@#uL-qQ62BOojoBMZgFaS"U7Wa1ne6h.*qJ)E<7`NiI@
%"_&0^ND)laUX@*T,\JL8NGRHc9VUkTf%_>RZ/Vh0L2dtcM0IarOc^3$^)*#-)@JB"DG505k*Y4!#*7H?:&m%pe-SAGjdh:3hY'+D
%OT@&hBXG$-aN`#tAFm&654.^q#Iu/]8Ygl'[[RCB#c3^/Os>UP4:4\-N<L4L2\oA5Et!(FK?%YL8H:Mj>S;Qt9;8mV=U:ZS3[9V8
%d,8M%L$_0DG&At&%im.1s3Q$Eg/g_mP![o)jce;15lfS8:bl`58>Y*D:s$tUaJDH\ND^u%LuM8X!9#p[i_gdMo6S7(Lk[68'-1mb
%Ed<i&aQ?uf.c?_Pc?mApAPY/5FR"djTJV:D=qEr2'U290$;r<3(0#<q-us3gMkecm!2=^;#s\cU_(N.5.?AMO%1Q$D-9AXXeGQ,N
%Oj(iU']SE"=78n]\m[`=a(Yc?g1G>+@1<AS>=!TcWS.dq;6%n#M0b).]-:lL\_1kQ*`jDbihi5\.=S7&LC+u[BP;F]dDkl*2`eF3
%c,U;oV%3,#Wafg:+sYRTD_e^3RO";"cXd0qCm:..h?&[BTgF)9Pt<Q'C3:4/>?&S8b0r[j8S(Kb648\h"ksf86Ah07D-TkWUMi69
%I'iIf^*cC@"%@8Z)SNOratMqNGLrpu7`!Yg%F($(B]&#(Er@s_[B!%9'T_N9+X-JW>`L!6Ehd#XA3u_(NAe3m\^@sYD!oKro#FrE
%#jmZA\We]Nmo_?#Zr=+.08'\cnGskPN.ZU@T$52P0]K5Nj"]!-7n6bgf^gD]U>bLJbm4]tX'(%3#uuOh"^5_%BH7.6Wa>pPoq0p^
%i`dM9R"/gC^YuEDT?(s=B6i]]O*?;qiPo0,.\AB)3`oKfdBX/+#F9b.K>mdq'+aXubQ!3h,DC!V9I$A:RgT&57F?8I]RXUGZhd[@
%<r^n5]]2]8AQUt1eW`1);5=pdR8DG;K(j5mX=6&?+*cV?Q+[E<6imo>m[BXHA1ShtiHQZ:?A-LZ_Fm4pAJ+P7QPG4ud0M,ZAOX-:
%Wp7W^Ei^\0MXnZe./mc9L2bb%&e^@iI,KVISW%BC58C$DTFshoE@Pt1kU%-49$Z($orFacI]11P,p"Q+F/VM%Hpi2%)I?a5Q]ipY
%-g4#G3X!('D],GF]ldd437T[_:@-o5'0Y,gg)7f,IMGi4&"Rt/`'YpOBKEC\'/"F&&M7ia@sQ7A*Hu59@SAMh(FD$'Y^qhb]-nRP
%EtfgN9eqK;E]HPbY_6]DCU>`RFC,OKnbuuLmKDTRgf9('eVf#\X)[LbrGkkr$\<Q.JR<,l"5j46MBqP"*!(:E(UsMfkJpq,j#3E4
%0XpT]+):^MiubthLD.SM2g=$J@o%:;L[4J3X$hkG/p$SJV%ZKcKsJB+)k^5]Zi5+>d#)2XMCG)?r9b)tG\G&`.t/;:\@]+7#YT>a
%^]fpS2+fn^4$;7M$9TgMg+5^=-oJ#3"a0K*_]@M+6c4<^%2W^PIWO(S"nuiLNIFMd[]?#o_53$E;XeT^Lclt(fuc1FJ`g7o;PX(g
%:fT^og_C"Um0PQFXm3Ak'RAiMUu1_l,B25coijS5kjCR)6sKjS=FW+)2Ou[iIcH2\>Q$IrFm$@1n_DSUo\0fW%PRa0_Znnii''cL
%h7#cMnJ'c&\B9?PMGup[Q[S&,fGrZoL]b<VH)$7pW#RVE,1okZKZ]LU0"Gc]r#Sos);-ZNI4kKA-f\+YoP]8KlZ,T4:XXCc-;@K\
%hpD8m%tV\n=o4QA.Jr++?7)V]*k,mqItOUN\SLD7qM0k%e\t8_ask8'mi%u]0'6]8okWG34^E*[aSYUHpPoAHk2Bhan[^n:)5-+Q
%T&c2:GAiSm"g>U@H2I#T7!L+\S`kR6E?V>ILIZb*pb%\cQ$C0.lG1$so0QB@gbn^Vr<kG1[@d!^rWUZlIcX"LPO%-<*\4Dl;`%Lr
%>sn)0^Nup2`_HK]$$Z,ZpBIL>/ojOqp23c--$RVH9CF&+bB^Sj0"R5s-Ek'1E,ls^ZA-o;Iu:*Q\SLE#rk7kc_VW63^!!<W?.ede
%Jr42oK(O?USYA,;?M.lSqpC&rMt\1Ho!LPIc*t+%l0/'!77C5nh7!"3#4HcNI,=qUY8<Hik(2eVZGJubA2d+LUIkM5&S8:G<LU'C
%]5-ehP#a1,pGm)E74J<32&fsu<"$M",'L;1.C-;D^9&JM</:u"2`_.%>J=oqMum#J_l9GJ2fb?D<QSN6mjY0d^C8kA4$ZCLG1s#R
%$ClMlgWmeU<[fJdWoQ%HMB>8Z&^8:T/Z#nLX.S28?uArY$Jm(jht"T'h!9rFhS&o$5+$]ORoOeTb[!H#o;(j?XX#ql[d2"YHr$hE
%%G9B`@p0?2relY$++?X#dZuI-OPQT@%t/]d_q4.j^Fn3.E,bq2k\IGn[OKg33(/sS_=A+,)\'hYO2QnT(cO@Z2B!t2EhS?u*d2!>
%E<6+Ra\!nTmfM"19$)n0BForX[PfOI"/js?"pX-e!#3+h$@7je0.H1Zd#2_$:!IJHI.EC%Us;FbWIKb,dC<VBnRP5uMXubuV]`8l
%UR!kAie%alZK^u0F([&Y<%?ckkh+>S&jtte'%_#O7$(]\@?TgM!%:8W#)&IdZua/&d$g`'8(9,tUJ"IXB0g$!@B!R.,qMb5#E$1"
%BtQRNBU-Mu2gIB_n,%0u3M,_lDEDpcJQ8S\0rIn[4b-Y>!QR\7.:+$QNlF3Nb)V9e%f9pK)tQ=*kbolKWi>UO2N-2!P9=g---oZW
%hX8]3GB(%)f+^Lp)OK.^bTr#UM0q2.2<XpG8q#V2O/*f7C-=T6gCJtXP699OhGVHUSC<N"!6*@mEYEtT`EgSnV9LuqUaON?WHNk^
%PLFSnHA1e!nkKi$hmP%Mp4'Wlif2e;,&JmcO(q2Y^A7<C>^:Hf&O`"]3*T:K@%Vf2Oj(!9UT+$3RRX6>c]ujj_ZN91?3RXR$7#Z/
%$&XnK"_uKi)+a71,AU1Y`)dmT#G^=ZKqn<&c;[*R4N^_olG"nXfpMP$L%7:lG\tOU9SdmdelR6CI*'"R2t6@@Z`U>#(4AJ<,7^#4
%6^UE#%p)6nmRVlS"oEY[C-lUW^rL3Z6k(,kU^#N\nHr".T00<r(!4`]P,mQ/Y5SHuC'-5NpHtc74E15MNmL0=Z6euZV%-gB!g#.7
%/+Z0fHoRZ\c]Z.Rk;scYQVWkT6,i>I_49T_^#4F3GTeTTV$5QFoR6+[8fpe#=[&Z#'&R?n#pj6;JbfjeNY+U$;"!3e-DQ?*0+)Ec
%6&_NLN1,]QDkg/nLR4Nt]a6=1F0TfW-pqH[c!m#NlIn@TXrD?3PBU.3BR9JXkO^6@WpUb;d2/T)/lC.`?R,Cj"p/IWU+Dergu-_p
%/b:_VOJY=9j5P=$/Xl!&<eZq-eioc+),mlM%q&'MCK1aY9cH!n3[]?]V:%2?.CS,'OLC&dE7^<JR2_qEU=%l>QQ$?>mu+7hC%F@P
%WIC%RE6I&Q)(kZrV?&JD`qtH1_/eHGmGN6jh#LIJX5L)Yo'h:&MCi[LVE#URGlbe_<V<ENXT$b,i>cn6Ol_ZLjt;DG`W5<7Be&<g
%c<&fI$8)8CAo,LMf4s3SYQ<&W>hn/pF.f]8%e16V]R79/o`-uP=PS#[.ep_A?%GJiVR7oo_U<?"%4A*aT%1#r0BpV<:TVs6SlgVL
%4Ys88lPd6ZRa609qhBHhY,BB6_NX)%Z%M5S\K78><PJmdlGm?0[EHN50#GBR_t:k4s+:g1ICLfk;F5i/42(X,`Q%<@-[P4rm.n%j
%N8j[C>o.415g#$KX0%n'$k/O]')#A5Qm1RV=%FP,*@G]"r5c3s&3Oeg"skP(_*U9=lNl%a\Xh-l@W5q>$`/^("t/(!R\W"5q]7r5
%+9%l%THT@5P4Zp@J(GJp8ZKaDcN)9!W)f6fr@0e-+%sneLU:@hL`K.6Z/g;P-0Ns5gEd(2WPXET1pbS%IRIrZmR<7b%ed)W3?GKb
%Z]3BXr8egTDnZc-,tum8\nuh%1TC-!^U!V0?5n[WrT!>eFnkETT@:]]^JAJ(".F/*ORXemMChlSU9A>Ye_L0ub?tY54oC@D"A>)D
%Uf[=?O2e>TXmuPe(A;SBIk7#&rThu9&(=G7g1'+CoaANPb>CRg#t`TP6i::@Q2R[Chj3ttEWI\VF&Z=<>=V@MFtmP/D0#Tg)./3G
%Oogs+&Z.LTm;5Uo1\Q'q:GOlq_gc*/k9fTQh-:2I3m&slG'S\0S]ZV@*(QoHp!^n+h+RB#([89l4cr(%M,%V92*8));nDJ-J,H=7
%nmB,K[lFPoPF59Per$M/au.p`?i?R;M:\2up^m5"T<bPUK.$W?h8H/sV(,gU&%h-&#Q.`AXo;AgWZqSoGIOXJ'uI)7&3k_cot0\j
%bi2i,]h51W<W+e_GuYgOCHn^@5>@dI")2=lcBm&'aAhDj'Y(:D55,:D<c0ZU_7L@P*G<o0EW!8Cj4rQph`gA:_2i_</Ue4@1pXk%
%nU`H)8AQ5bg\iS4`9P!<p\Q&>#7jAJ9E4jRrh[']E7KlTX[d?tqm(aZKn1U^::U7UieqcZU4m&oRQL)YLYfBWWsZeB/-SIV!j+UG
%o+m:KQK.1Tcq,:FcW9M^)tLq0<#Si5f\h.=g3)oL`@CcR/seg&YQ'!@_M4DM>p`FD\s[JpjqpOqHD=RYUc6m2Y&j/K][om2Y)Aq2
%E_/9e'[S7IL\_m"s5D<(qG2V:dsq9aJ%XB+G!"mQ-&LdArS,*NEj,<Xs)oH8SW*4I;1Y:GX7?j'g1(ruN6!cR`j/BAODQmN]OI\_
%c-`H`lgLr)gG?#aF-c9/qIL7o;!=QW"#W`(05i0]'3X-,3VgDMnn*uX:Jb?RA;0[A,(;=3MX`jV6>@]UF'YRZS"r+:q`[3hj!;T=
%R($YpA3"a$a0HR'K?l*/M9M7a:GBVINg/IpPh_9:2fHlQ!N=E3@V,24;_$D15JbXs+>nE$p$hKe7oB*ol?c8a1:XH#(OcSfD320G
%M,BRfALjr#'o39,@bFXLScoMWHmR,SNk5#X/_6,p/iI[tqQkqVlE'nAWu[6p5=]N]Eq\FFj\[L_n)tl;J\@^1kO<Ra"3"kqQ(OFR
%T?S\ecb@>!Yu^V)@aY6Jg1@I5fWk;D`U&B6J,J8Tro_%'rq_s5YP4Qk)%kDgmQaOtkF51NhhM'<J,bQ_J%E:3(\1HYI)^$ErN^b$
%]uWjdj$gN$kki#*-\@+-pR\X$ERXk82^56Z5(fJ4A6SJkCZ,c9n7@GES8;$E,=!.^a+_]gYiFdX<tgZ/STf#:8i>T[E)aSg5\UB6
%/S!;#m+=JNo.A"G+JLpHo:_b*'(u/_1/Y]HH7kk'_lB=&i.Z)/BG4bg=KEdtR]:Ep\q1urf#<FdO/)[>TN9DI.':9&hs7+Jcg[X$
%DqWH.7.m$Md%BQkqBo1fG@+AMOBVLm#6^"*-g:*an`\fu_0Y4$:`G"CqTcMq"NH'k;bQjd$Ybf!Opk>4_`#3T!"IVmA1:k$%'FS1
%iI'#uZ'bL3JFY[a(s%n]m2Ou;%io^*A_t5=>UM`:iSj#n#KA4@no40MJ\l$mGDBDZ9`jDdT)[s-1<Rr.5P'2BUng'lU4/mGj81XT
%4#/Y]>[e8P$F]&oGhYWd2?d4X0d_/l?bML?Aq2^Wie7Q>jUGQGoF1=C!^Y00&HbO7M;o36"BeN)3U`R__CcF7>fL:\$%mIEWQphu
%")55!+aRFqONs0u,+[4O>)SH)X$XVIg\Dc*2\q@]nnPXIeZ+nmMZs:R9FWeU]98Ks0+[51s4cj?#3o5)2Um*XeZIQEbu`a<3reN\
%rP.ACq#u+);td&j?/l\gR'L]@WM`sLXW>F*jI5ME_li("FU/B6qloa[I4KKlQs0H$jf@=@rO1!jccjnORA>*a5P%B@c/=**=d`VO
%/'.csVe"5kGlW0IjVu9(dr9`^q&MS10hY_GeG8a1JW#5aAtq,YYCW_M@::5np0hD0BGNKD6a>M4PA0Oq4[":CoPQ#L]@rCb&(8=?
%V`ebl,^(H98ADlJ3s6`8kppPX4bZ`$>d7"_UANh[`F`/0XfjQ+3Q?Y@'Kd&?*@^6S0PZ%-i_S,$2SLWKGH?AY:E/rmV]iUt]Yfof
%F%1n9gmVp%1_ZWIc,ANkT0c7qdt\sg]51^c%=^gT\:eduer4S&c0MKe`%r_VRUah4bs_DGgpKYkLgTJSHo;R&+!GEX8<abA(\^:e
%NCmX;SK4d_D;pcJL/O;4H9?=E*u";jc?tpH&nL6i%M>N'8e]JPP%d]NmS>+e\cI$R\Ll&jhYQBhbe,![OG5?n^S*MRcBV,c(kj[$
%88J#LVlF8pi5[r8`D'PC*!Nd&2pW(%YFq3s[3nlbqm=q<074hb!NsiQ?h+@1j4TNl^\L*a9.->le9D'K!&K5:3`VN.R"ABKBW,qA
%,ZQeeAO/tc8KZ`?C4dXaf[,MB%P^DdD:L$_>+5DDj,]8d"Hb=qJi%7:g)q_uHg2(]"?W&DElC9,2A4R_E'9V'cmltoY#:e?V]6?3
%Y[*oXk[SKT`f=B6-nTpW&L5Q^<88\;"u/Qb)<MmrN\X%QMKPnWcU8mR<'JqDjDslZDhAOG*He8j'0&Aa8U,R`1,S"tZ3V\UO>\Z3
%fW%ahQ9tF6(Bq\'JdJ1-?3&F]1'm@'#k$'_(3Km_b]b-hJAY&C<%s:C_Aiia,9Vg+[iG6QTGKmG*o<mMLAK3!'5&6l1g&P.QPJmN
%S;dq;9Q%3O&Y35p<,*j#qF3H+n>o@ATs%K-P_.VF5"X9.*<[`>dq#o7kE=gn9gn8P0P3BYNBLj00g2Sdp=!tOfeM4tBRD@XoWk4i
%>>pOR02ceb5%qi*0$<=/2?AAEdo)_rF0&;qekf1A02-A<2MrDaQ)33uH;-,heDf!?8hDNphbgd>FPV:T&UDZ%j*O"TrT4iWN4NcK
%poH6CEEkd_>I<=hKSt'\I%X3+<PV[mX<Z<kW1YLM@c1A8*P=4S=&Th@-op,%JhS]lUfQuZ6+m$7,sS=4n>ltU:.@:]g`Za4=5ZN_
%(@lfQ-G@S&*a#)A"!D_&D'QL*/h9E+o7JB]a>tp;5r$cK7;a,Njjm;ZpOr8d>*9c.<TFn>*aIeBaDO^`OW,llR2I')1k`E7%odGk
%43F)t;]Jtceg@ON1)r?D*nbUY22(QiTt!HC.nUHbG,hAj<%OOf!kZR;cj8JME:!!&[GaYj.G+jC(giTo1^?rreS2@Z('q*I]]=.e
%UR*QIO;ZYN>[DEmP(XrBbVm_tbWY2%.,nYXD'Ka@&_'6-T13ti$QOLLN(+Rrn@1tA/)%Tp)]=6pgh8^r-^m^Y)`c>=k:hrrp#7r!
%\/m1)WNk<TQRs[c75`L@Pi>0W8"S7S4!/`O]4F1c7k.ZdGn&"/jpHE;dIt-87f!@l\5?Tir@XU<=+AX6LYH8fcg%m9M5`VE`W?U'
%ZUZZ!g9m2\Uh_g+NRES\LMMT'Q2RdJQ@uD^YH/c5Yn/N8rk@%%Sts2+=4sE,HJY,Y,k-@47/#_]6/q[[#]T6KP[tI#JR^bH2n#Dk
%A3i>+l$`a1ZO`i]jg/m(jfGjrL4eW*A0a)3Q&r1Ae-MHg<>m$sg:lq_oSK"Z+&kWD;m_Hu$@ulI(ObRSFp_trTW>UOZl@IKkj!\u
%,eW?#^dta`>K';mZ,ia1POW6n[ABPh&!`pM$h5j&]`ase^q%#V\;6!b`XDGY`leJIEQN7H_U7p/@+1-%=r--l>:9kcTm[N"2+TV1
%I#GQ(0$&p8nVIOfn(ELSP!/o-g8_6GA2f3s[$PQ12<[C<U,L(pDi;6DB@RdE"KU1<=\.FG,8ajCg*68l/2bmu!ON\nAt4FJa:*SN
%KNZJHdX_D'L(.6F3!@1'/?M/dVl'.Y.2?07.m+8W="T`E$NmJ$07^5iZgg>^3h(,GQpe\Onri&N\e`@&#rfNiGidW0&=Q>tkBJ&'
%g;/^4X:[%/MqtaO:#eT?#UYbED'!m4KAesu/lYF*&IksbZ\^RQ7"su/A>c\_8FC^Dch'd&H>I-*-#(_%+\7%?j"$1t5/fOb:-+EI
%Q\bn"32;U<+Xq@)"AO'7Hh8M\B)r&CoS)l84VjVVpkkUO#f-bq8sUUri%%i.m*oasa9!Nk(D'@?%=i%egK2k6EX*W>%&(hXR[+i;
%C!eF-_c5>XHf?0V/P=#@"-<htD0T_oWdTqr,`rjVAt#H&Cg*BDT;@+f3HgX-,K\,f$S],8+4L2IF1lYSbt+k_Z)^'J,uK?`,tTEn
%6JpUBL(XtP?O/j8g6?0t='rlKbY8a.oIMK&Tb3,I)VCYR''M@^h:S[OP#n*`kN)A!F:mDENg#kaU.3dHHL6V0+C!BFp5i4f+pN'T
%3Tjf'QJK%C/mX,jCm2pZMh@@tG70l0X`1a0^Cd,BHtJ16AlTBm975%5l%ZLP`2bd[Ii-]BC*H%5!Eq8pUn>*__92m(4'8]t\cIqc
%Ajh`Y[:a7HG!^HL7Fr&mg],Oe2t19@DgYl/?h_=BRJDAc[DhZdj/rV,+kE.CEW,&"-*mB%0mW@lG1_,p>IX7jh1)XfYOgAXJ)"tH
%HMQKCG2Hl]WjZS@qaF29.-?:_bFC`?40?A^B?FqjXFY?pZGeF7CFWI#(L=)0(b-F$L:ArJ1cSM+MXn?slR%C%R6B11i-:9+6_36s
%,^q$Fg!?kI5LkDNT1ba4r?gt<e`kug<Shprs8ABOmodfQi8m0JIA(GSiW'%c;^)fk7;,TUr!)5Y7Io*A=mOG`ZA%UX^\@5F4knB+
%<,Y./g":P\_Ya.]oX:$&]h!F`<;F2\op-ip5JuW-;VjWjn*Nb)f6b$aIZ)3p_45n"pY4l&X_D@k2WUFORWDQfN1Tn>#5In>4.;+Y
%'Cb,lfgp]a@mXW`gDCV%G]:=Mio[WONPGA2hchk7rr2YX4`A"@G(C<!bFs?'&o-ZlCmd)JHq2/ZO\[cSQK-ACd"=SWJbtHd"ZA$5
%<UWMKg)uK@@&X,Hk7S#5E(UP[huO"RXOb1)D+MI4S=E:9kaJQ:D;LXFUG(W3PYu0bfH(&5!I6k"a#S@hS6<b7D]rIC,C_N[5LBpu
%oIt[]6E'Jc)[qWUa6gCD_@73@NMRY^H<eHQMRB'dD9b]VDF&,P&6$@9nrPUL/$Jt.(7]u7JODSZfWNbF+tAXoOD(_4Vu+;&ic_Ca
%eaYg,kM\;@c$JVu-bf*GX6EjkJf#Q`rNtl,0,`A:m6$5k^!KSWk:'?A]kAg$8T7K>51GQPb0>"PrK`QA_<hpTkSi4+JdGK'(CSO`
%D&^CPMrd%Q,kp\k,_1eL5UQ&e"u;?s`,R"^SV]#eEhTomTX^!*\JD_aYR)29#ti3?JHBl0!/`C.JVrh/iIM.+?JIo$(kkJQ7]mSI
%:LW?7S1GI,:sDc'@!g^[U[P^haPpnJOkLjt'I\GL<eTpc2]HHTO4S8-pd;sXZX%H,4@Z.S6<:BsG#3sX>^"J<jb2JYf.V@>Q/=dJ
%]pbho'F[]<Fqd:*DN6_BKC?cV..t&G\S%[\84Uq=b9Rm;*ZDh$Iin"+4Lj&QdBre1:djnWq:N>Hci!i&.M-6nAX%92,W4Z$<OA=I
%:6]n`,j%.mfk?!Z<sIJk"hlm8gGu;*Pt`pQ9e=@n7A68b7EnVC)nA)fEU<Z/itLs2>PW),e&?bE:JH+gG!4hegNA_kk=<AHCu%>l
%V4QE&770XV+CCB\(H]1\DM'!3*i%^!#JrAOeKa-`QUW<t\^>)#H]h$cgdX1D1.Jc'&&tp,.Jusf-+V_2FgU!&(n[lrg%0.s9Kn[M
%jAG3AH*e+3Yc#@6juTp'CkEd1(>W@&B]Af<!u9.6hA=W\!@H6?=]&d7;tH4,7PZ&A64U1ifogsOi1#.+i=_9Q6I0\;S(XQKTRc#M
%aFS50aEc/b)GR#=nq3g*3jmXWK-")0dq$J7(DX"EX:BIO;39O/LuMu3KkWt-:MLijI#OZ7]cBmQDrDSb^7g-9hckdml_\^:fRX+H
%US':8L).k!p'iHM/3-GLFDA/8#!K+?)T<,F7+h:+ebaPOgR*fZ7AGk,8^1"F)p*KS2[#Ts2PG4c6-Z$^T&nc057<u05@kZ8H.c2Z
%WFL?_;68f8)R_b>1MuG[Se[/(4U[-$<D3"(b+g)gYon[cM%6C1[F)CqA8[IT$XZT,0T5S6P;.sRMjF(hKn!:m1&9M7cVFDt`6F08
%quU1_E2"K\:G6tnmt-8"NCEq/Gt+)pV9gQ!6%WscU]Id?hA-\43g`U@!SZV"9UdrZ8V`mj^W8V59>To98kqb/m%`'IB]nlt79`PW
%,I>!D\NDr]?hKi_?;Cl5#fpHX`c.W*4l2M?/b6X'"ZRa[p.3NH-VTH.5qHJtX\71JI7=.\U<+j_[EI_:'86N(Ns1pO);A>1nB8)k
%Pi?VGgNDS,hk@E?kFJtgcVGWfS)`M[WFJ'3j(=_>GR;6<oD@nL,2MrYjO;J6FJo>fFl#t\6,G0WF9leX4BkX1<Yd??oR)29`*76&
%EY4P;;Ca/Dre7Db,Z<[3:QD.6EGRh3-P;icdEG!39pep+f;f/O1ieJ5d0N#jL8)1l'FSh_#3UtT%Qn?uMZe<n'O;2q1#DBfq+[k<
%+GpEbmPl#aQ!pH8i-,R[Zg5;0mRAJ$jgV9-K[O0g7a-f*-.ZApi\_1]Ugc=S#^uG(9a#Sd?W:6rWuPB9lga9tEIr)dOWhDKE<Lm]
%`k"Ub.nXE)YG,VDL$RrunC@!o>C$je";Kp_&tI.U#P>iR]LIfh6[W+nK@Ddai&*SDVeNE_QC?:O&d;?Qlg9`#S+V:pTVH3!R,jr!
%/sNHt\(2VbI*VjobKlpA&5&6fmo5.K/M/iGf[1/U2e*p?rY!OdW9mE7I4R:QaY_$f9Ndh\Nb8OdW-DGa,;po-$3=qu5W<62WWUAO
%a-k*Z8oP(!Qh#H',^0TP'nMrB$/<S]2R@6rpW\$BOXR&BAl(gmbu?S7,I-=IAeLpCO'o^r[lr8#j.FhMS&/nI;>UNXPLb#A18,Zl
%5gLUlBB@arbC&'n^&)2YZ(o$Er?lHMMX?<(:@Z&'75(BNkQ=?_AHdhCR9u'C_BI'TL*C>5nXe;[icF07AgFFalX6cC=hrlh_TU]@
%EjK9QE)=,pa%_k`M!?S09B#j'mEj+M^d%&s\XU;u<hDQ^pcTGLG_gArHBc/.I^\/mP,f=On^/d+^27^l2;smk8e\q4+h-i_`abHL
%8]@4t0P-eULE66KZJO^VX"Hr$XgK<%MZ<D[ja:!pN_em]rp\hFc[Yqts7FY;f,t"N+9(cUO+7)Js7(;O0"Z-r*/=Z2euEe.%<HLG
%8d[^7BS?OT8UXl^'X"3g_U#lbI&k:%ikr]Ze'%7D%p&In**ked)Y/'f$;#g!E(f(AiP=C\R;U"=hCKlp+TTrG-Z8P'B+A#V6;4KQ
%kSnRU$9Zu[-!*o3:a%s]7]K(F`DqTH6m+8sSq[1?HY^%$'I%E"cMi[$rXs8/$>29b4*Zl$V'K\D*JNs]eFi<e.1-?jX-:!t")Dg)
%ThZ1#0D]>.<r]J"]pW]qr":h:qi2ZirWd1O`"]a"YkA`tqk$DPh_2"%_V03?:6t<fD"[d6F!#%%M!XWIH5`\GVM[TRFFg&"Gd1/+
%am@5d`lis.jrZV--RJ)scBJ_*G*_SVkQ.te45;EXS!'q%gdck?=#=R;[d6pbBV;c,T=F=7rS(`o):"n5S&`s;FqQnb3A;kT)<!5V
%rR)klY&J.k)AF_E(#i!-[l@oSU<398,#WIicNmA8@??=%+Ku`XpdjQ7CaI^<:<D4e"^t?"KSA>?AWHQ+!?InMf,.OLnI++tXf&ph
%1f@q7i0K17AO*LI:<Q>3G\lgjFqQuG"/!9Bk`,Ze,ObuA"d,ee6^h[V0Z_1ViC)T)pQYU,,e$e,bPm2cS"iEVCTFl4)4&f3Yks_d
%BY0:=I^L38]o/j0BEsl'30;^QLS$oJbj$;\L7K:m,P[!Nkr(!o/h>QnJk.oFp1.gnRpud(fHiMgj%81BC[f$CqC*1gNt<H0ef!MW
%0#EFer3aRCn$!(]5(en;U*=0lCG'=07%2";llEhd)5/1:\8/4I0ESE]NcWlRitq5^n/Pk_T[8Z>OeMT%5Y!gQO$(M!HQ-,q(5VEs
%h$DcAU6cUK!uGE4c:6`MaFS^C1C\V5phh4qYu_tO(%-3;5`kK0)c2XUDi\4*[!-Gs0ncctiCC!S%^.GOHggk.Q\Ot9-@G,X_\^DR
%P:m8]rnd,JU3b@b_\]]Ok3E)oC(N,d40K#XPfHRHLc/&-BW"=W:sA]`maX#JB948W,pR.\OjC<B0HkAN*RXI!H]m!aIDegD$_Vr*
%fCgJQhOoL<92Z/0>BCQU1ngfY\*P7sTgJY/(7T]4?FFP+=,*`;-3qL`6_7>m)p15Y>\?VPnQm/C#\sm\N<L4Oma948p)^5'\fCEA
%r2A-VnJoGp\&gl5lLt?_r74ra(Pq@A:[[[hkO!I^M"Q0PPf]@lp6ddbT=18Ta/;IQp$)Y%`2dL4lga%/m]M<tbCrVW!LZe=i5fRt
%/.+O4eV96T0Urn9(k#!eWegeDC]C&0BulLf/<3Le7kqWRAN+HiMY#k_^%3$,h.SD(^2AUEcblLG3#;Ea]kiFtJQeEN*q!G=V,F`H
%J`nk$3u#4t%X?M,6=$@Z@\lHX@*F4G:X3k4?&,2[Gi"%I.t,3GIoinfb@&74q2a,<,A%G@X="D2Zq!ER;%#-CN/8ar#gQGq>EiKr
%W]!J6B5i`r%Qt,V/T$n.\0G(`m64.u%?K[(.X`1ObRX(eo0*7CL0AQNnVE"MSJLo1mD8$>-t&')#7I,#].c@]4(q!-:uk3b'u_L=
%*GI.1fG6(#d[!qf[.r:Dj;6[u)mK(0Ok79OV=D90!+h+^>O*,J<!b>,b*quGi41YdXFn;ACW^6#4RL^gaEn#\G!r1j;/"$_'LoX?
%,F16)0#Q&H>D>FfU,S`k\k;%3<XL+t8nmlOYkoO5XJhBm:OROT=me+%=7(Q*a#;bL5^+[Ya]N-g7H,16<Z:NSr-?%+[3Ocl9g21g
%%<pte._Y$Tbb"5jnie9QSrP?H&c2s9a^;uc7+?Y3a;g%f((OG2hFpVme7p())[Q+hJr5s+4\=I],YGXUg651aFs#i:Gf/QeMtXll
%2KX^5P'Q3k6"$IRp.5XmTh;,Ko=*9['MrNbOc5)nS+/a9b3[S4*XKWiN!9BRZ"Sj>SkrVF>K<FYG2Asg$bZSkd>^Pc*Jde34%XC0
%a?9:+&"5r</$I<Co5E+;R`<tWfsg8=s0+ah'$i[s_o)bmX=1\#_j=ahdTh;[2[t(:3H++McoU<t<6kd2n'[#D'T[V5ZD,$jWf\oi
%]c99)bfM*n_f=i210K"qQS7fHk&e)2?5r%shKIcRbR%E[j#rH1a=oq!S%F]NBLg.Tj+mA`,9)X66K+2E1,\^&)b/=u8,;EMfokE1
%H:&8q+9m+g$^\035tkua81.$)@9TUP"k'Dc/aaWK'*r+2Y[<d1FQdGt];$0.X066:*r&32[kSG&V>5$9esX6g5jmAP56S3WhoDi)
%1]_LN!.L@O!RX$QgTLm,bMlV9mM=>'=+n3?H1Mc%'7AWah0MM7[c"_@(nC";0ZU*$K_VG&1_k6+r.L+8bI#0)6odiA.[6L#WtcoL
%5oR@2Zh7"R$TW>o@$CA%#)C?WRfUT"%Z6@p\BPEc%PnKKetr(l*V]3I94p9%#W?,\bk?Di)`d8%jccGT;'\W:3*P1l=ADn%NMEC$
%BU=Nc`t&br1K$P$:F@q?924?VBA%/6U[2uk@5C;83VT-6`X++#3t!GP5&<ZeA4*P'4?"/iY8EsPdca%`U*h>?,)&/i#YFEZ'&Al>
%pLqMh!BmBQYIfpO"Ifr4;Z]a7JeHZ.-Dk`3K`h:Hds/IIBuh8!q+.$Nfs?K-/o;#DIRHX7#MoH<"ET+!1O1e/RosaWRDCi-^QN+O
%E/MCBALD&WIgq[Y41q1Z*(-Yj&o8d9=LTj!1/S2_[`\76Q!Hil1/L$28QK2NN:AY68;QZK+"(r^NQfG#0(sRJJ@N*)i7)"tcehsb
%C.pKiGk%<*80>p:Ln>6"63,Jpr,T5$+"IsX50<%q_UaoJ%SmD08mei]:5BL:&0/F\<iWND/`%">gBqOfAt;EH/Xff.T$F2%Am=D$
%#bt\Rc!6TGJ-:]a.JZsDSiXp?DClJ/+Mro5*M;7'9XW+s='8EBf7GP9`,NliG/31c`i#7`"/?I9+D<Ga6C"<00#PAj(N2/5R7iQG
%L!UtiNu;&1c8:XGb^_7-TJL-2B-h*q#MUS5M\hThYd/[dr>e;GqZcl78mtGYZ6ZtsmkQ0"+u1DX"O#r+5+LsSJkZO)L=m>7T9VFE
%jHoY7S,ONnKA7Vt)!b_`^f_@k\SuERC6X"36MkF-+!lRu>=nJk/snt="^U)^@RU4$9g](oCHkIuU$Jgo;`fWL*MfVh^+H3KU/<W!
%&.lP"hbp;17.Z`Uc4Fc^+50OE*?r&a]r92PCU2_`KnN(Loe2m)"mGj'UG%'D_hgfB70a',a/HOb@\8:]MWQ#q=Z@;iU$**Gc]%`3
%m(VSDI7BSFgU(iaFS%5,\0s#k8KJ&elt8>h8prRSTm=HtYB/\!R"D0jj6Wb:J*uJEhu(FLB;iT.4\C1c-ha/\<m/h[`1Ds>>L2*t
%mNdo,B^X"djWlM7>mFEU5RkG=?BX4EK#CGFQhYul8A4k9$a8Y#lg`&q*[F!bL=A27(sKJEEYT6[]8VKMpF2]LkEu.(K]NoEN'qK9
%D$LOJ,^!$o6Q-=N!q\@-2$ucWI3\H.`X4+%0!5^m%NpV;9l4T%WHn.Z7<U?oc.HJ[`JeH&%BUq.+YkR21]gSmb:@Ubn5DaEQk2os
%;5EWfbu;jRAI[?b64pKNQm!_8[S:GGE[*Y+*bSa(Xr[V@f^0L<`u3KK`q?>fY.L$`[lEU2+IDaqh]RBWQ/m;+,_p8uSA#%Bl]M4T
%h4\K,):?:l![@2'Hce'/SFRf];saB#8^ufa6`':ioFA:XL^eZE)ar$@_e8Yaj(MsiNL?]FSb]4TJGoN&Ha@!\P3Ya0?%Dq5]Ehm[
%O:Ib8LO:4_<>,fE<!B!BW1FpWD+`W_\71(X2>HpZQ]9bT/^B>3h2"%)8q8t512M(,[7Au[8cPRFfWR1<AB59hh,/E<0)m)='OLZ/
%reN'329GuLT>;NTQs;CKpZEi3:-,t+nG4.bR5F[Mc(:,]!:'6KPWR#j\YG-=h'R*S"6W[NbKTEgq1,(.S?s6VRSU7!dNMB/L\33%
%IYO/Raq%n-ntP57bP+BI/sX6`HWlH!:;PYHQ936'\YG-=j-K*[la3*V+o*-/+45/$P)NgchIg!3?k?i0j)Pnc5KCo2,3O$Pnm^_"
%atI79M^(<1#6qI?%M"F-1/@7FUJ'+a*uu2S*ZlC>8+^%]D!W,YClW@o%WP6-/7rnm1RtO8IK5:i(FLk2^*?C-SpPEa3;e2D?ndhO
%E^q'Y,/Q9"0Tb%0FC6*9F%4'mJ\e5:#3c\sjhlB[/O)bK-9m#LbDVZ&/\d:2q-@hj]XW2WSX35BSWZWnPiWF8igRsB$RO%C<)sMi
%!sN4QKI5PMlE!:GC!,,X*dP<H^HjrG(m/>0ns*c=ql+tW$Id?T:bZdJm^kX4e3gqYL`D,t<6/^2.[A^4TgVgT'DD]bbkM-%:E/!/
%.>(\_,S[)fIj:&+lr69YZVQ+)9?G'aVr**L:cVc,I4h1dUYeDPM3h%iR@FVQ1S/0X*c@PLl'1]e;i7Fu`,.,6_*jB+q='c32SW91
%78[>U>(q"D9-ONZONMk#"9kTkVTIbDQ7Tq"O`Mk#8tA^(&1W?"O#XjRf8CS@Fd*j4;&NCZofl.t3KebZ<D5Vn$2bE=2UZ3YjL-=m
%[7pgK1i>gmW_AQS/JYZaBZu7_OL8fpP7Fr$='$qL#RHN6\r8.9NX)mVi=_WPS]tkC)MMg??Er7H&X3i(&(N,n6CnTXlK'O-OZo7A
%9Y:e-gob=)$MCg6/oPnuIW@fH[,hF^_f]^E7*'HA0^[rMjQ1\?G6ibLHGuZmD[cOS$+Ru'qHfk@C$e(51bF]Cq3GfOEg(`uoKD4F
%Qg_V*.:r;gYpE6fhk3<Mpp^/5Mj/US<$4tTg_m%9SM(]j#"kEg&NC5hZmVpD8-#Jb2:/U;3Rg#S98?ED@O>kbmjK=4qbi8*i'kLn
%PUJC/U[fiU)tTB["A0j[PI%uRH6XpdiAL]];F0BL'GjKb;"BqsjZ=PC3FM$%V)qP*#+s`S'QE\&D\mi":Ql7#@Bi:O0mDbt;TQ4&
%TVL[=l$F+[]QPr/$JEs6p"!T3f8fI"'J]nZE(U)iMB]3WFm`.*gTG"\("ZK&,^f^icc>10]o+9VPf$Sg=K:Wg!JfNQakqc+,TKA\
%#e5%<M,9\eM@i6C_e0RM:XB672Th>/da)aX]n#*cR&#\/U]D(gONjgL%+;+#)HPn,R&ZfjI=P.jo"E*Nc$D`BQEQHS6-FJ1PP.;b
%Yf[kfef'^3P0^ce%8E]]e:C6?'p=:udQt%3oft<aL1YL2S@gehBkYWEJ0.6#CoePD9Ln'G&%Kji)O_,0$uMd08OX$DQ#SBnc)`C`
%:\iX.ZSIi1Uo?#@Q-)ou]-[e0I]@^k>hQl<BI9E:SS>spK$E"PY$4/@.8QR5da%Cq5<r5?6T`c.m%4\_%&&TY]NUBm5X%Kjf12E-
%0;ZeKpm3Z2VnC)S1nd[6d\CppMP5cNOIG3!De_Vi$8fnWaIH23"6g6AQ>1W[5qbX.K=kN:coA@tT_b[F(pXY=nT#tY&?gYM`InPr
%f2G_E%((&I0&4_sO@Db@BnfBI0l<.XL%^mHrE]7:!,:K:-4<UaH@geuZh$Inj208\jm-/Lnjf.,_:('bh,M._BW+58&k%cUWcM9@
%/sX2KGL2KCdkokMo6ei#FgkO(mVC-K3E)bG?O]hs%+%sF%oj+c=a,"nf(AS8`YUI&RfS3VSI*A\%;NoYX925Ed[sRfB2kNZ&tk>(
%XH7]"FF'fp%%#RI_Rq^*X44j_SI8;JW`I,UFPu9hS[]9P^=-pt.!JHo<e@8aWPU*k/Sa_T4Vopm-Np<aP8GO;E-U4nT5<<#*\KnS
%GsrIuc1D7Q0UJNF'\1qdW]6K-)O?G]W4puD3K`"PZF&MGp8RiEkm:_&hD)#EVZIo>O1fut<F[B@c;Z7HBhu_0[F;KX)*Op/'?+gk
%iD!:fUV;!"/!Ji%=$]UcgoIH%D0E)R:6adq$@U:/^LZ_[VjF#23`4fGCB!!0Ql$<3o3u?fUtP*/Q;b58G,EO6!1I+a'9d0GGjSJG
%03MNO,.Y@[/uj:rUk'cIV\0;$XhiA[JYk21R'dJh+\mp#rCKD+btUR.#_B;27YIeVH<F7@8H7/G>$\m2e>^NX(?n#f^?r9I\-#Te
%6'[5`Jq`c,nUd+:cmr66n"!(!.d0b(5%s.9<W3hiW%)Z`8#CbKXTVLYWSthi,%al4-mN"8_oH@lQkUB.%SmdO3T]/p&kEV5\!fOK
%6asO^2rAmL"-%YWeAX]0kHAQ<7os,JQAPlJX(J$dG`?;^+n<hM(K)aq5.[K)4/lilD+]\a?6"j0:W9'CAVX24->:IUVmrFRW;5lo
%22;f:d`/lXiXj1u5L$cFUj1:3(""R1>bq.O825M\nAW)),&T!4"osOkJ.s5k,^d!7TJMn$"ke5\e">*h==sUj^(aK;8f(C\GIpCc
%:5Z$&U3QYid7&qN'H`,F,u!HV-H/7D]I;&LN>eK^;oGfH<RK8^[MY^$2&PI\M.4=dTo8U1Z,`bFYDX&I.#Ni#ae^C<:Acr==>%73
%?quYmMnXl8"cE8-bD@H=R_jp/R$(3rH@*4OME9WAL\=Wtqu@t+Wp&+$iku4pLq:ZVl%t<357Jtae>==D'5>'&ME_L(Wo-6:9XMY\
%6P9-LhAMqX9S]8traR@563oNh'$!p!Nr:O7QH4`F3A`$lN=O3";tD]oUu0YnW(N'^]fqi^Dr.=!4A*o^klVAT434>k(^S8-9g.>/
%J<NR7,Vqsi;P&7sXAmX%&Q89>$OE@*;(biPpS]2&6\]PS6lK(RHWm206AmU6oJptDTugHrEK@FkS.sTMg+ofu4n'0b1hj]*8RlN!
%<9Bq<KN`\%;N0/+]\[`fUe[!XWNA[agmZl0YT4U'[e`N'DQkN07[jI_ZrOu0OgRd>=bP=Jq3?gpNiVHm'VHcVHt<W%!V5_>-ckL,
%58-Xq-c2f_Qe?%Xni@@:(&;;B>V(H!FQh>0csJ1SRj-uI5<';82=iAp&7hc`*qM*(HJ)eGBb1MCO@Us;<"u#*P)Z(V:#/&PHo6b4
%PN@q&;`hKC<lHgF4Z8^L$^<5Q3a9N$$6CNs:mp#e>^E&`DlF"++Q[F-?9k=c99**]DsIUbRb13<XnCd#DJqeQe&M$oU#\>!),c&T
%n7>]rmrFHR,1`khg[mKK=DPT!(DN\+L'4LPbcRnESW4a]SW%RA.u)uepGjl:pQa5156_F6,t$&>d8_N4^3g^MeK[G::\6Y!l>@7b
%EA/l5otpA281Q8SBk>$W_9t6"EpSS6;,n/GAkI6j=bnJJJQ,W72KKQb._pE(2)j?bV*f$(\OD,l6B:XFQTf@nX:`ljKsNDH`#<K.
%rhC.,N9p'(T7PF;&oF$\4YdQo]tO6U#3Y27b)i<eP_"`+=q8LP/Nm:8b?YlSNWC>?b0t;n^Nbr:>T&gQld[&1^ou7g=%;;oW-k\*
%8hD3,*q/==)_rlR@_:\bmH+4B#rjCB?aBO5;_1Z]SS0,N4_:eC9JiB0HF-VG^1=?^e@86W4DJIim;9#e9sha9cF?e*^Z:#34%8d@
%d(RF[d;.nPn3g3HkgOml4&+k1U7X2ed,cVns4fGufFUP?j'[sraVN1IGW?N2B]\STTrH!fZ)jhrf1l_OOu:7Xdp6A.(i`OOS.?p8
%HoI0`c8_.#%0p=bU]o$u-V1._bVY-7o`.Q9,R,"$iEhM<`Q!:@(%e%8#_?l/lc3\?.E>L@OsKA:M*sb1`_shI$k+JQZt3`@IB0-f
%lJ"V24r&1CJkm*RR7@4>X@e>6lcK>cQFN$l'd31/=8@pk#fjKG]rUAIZRld$R.iQJmSlW!h(C)=KsXHML[DL'eWpkj3C3,j$#1`G
%<BQ?VF:oE_pX7&*f3F/u7iF6(U<jdjC^qm_-@[@-3$1rX(e2l+'n\!`nmf.e'ebrY%OHQ>.kXm#1ouN(:_+R!2^r[Xf`8nCb_eC3
%Pg2$Mad+ejNk=23,o,?PPjK/#nR(ed)m<40GPs-t]T?91ZaRV^EREbnTgcXD'Ol;l>1De%ZRf9#!^t^p[OApnPXT"i$Q5E"!$Ju%
%8Cn@`kI[Sn/m.i/[tfDK/RHd>jb@NlM\[*\IMQ*d\?Gn*'@%g(_S4B`&*7V:1oPUpB[Pe-iDW373U3ch`f@`_J9*#X8D8AJn^-a!
%`=(BDZtZj[EREbnU;a&Pl#>Wto.(Du9!tH,9g[(c>E1Fl*4/.#m1:oUWTF5`8[kT.8ZsrV4sNaT/*W$E[43d,SQqmi+l\q@SCh'V
%#'V#],Ye[JMA/9#aJ!QJM&+6=!sg;ABo"7-Qn$KcPXTdV2:IrJ<c,Y\RA5I<LbIe7Pr$O4lC<>rW'H_&SaXdFE\.-q6KM=J$Y<S&
%b/u#hWa.)W"&rHjiiV)",pW!B6\[uH^tP7EBkbQN^m.=hpZa<73/&j*4p[:O?OC(^7`6"?7G(_,;2(tm>t!^OP*ZojlTQ\/QA?OQ
%@[/.Uo\K:A[j>;tX_[kX+%4dJ&T%&DL[<=+i^,8?WH)8jMcUZ;CdcUE/>N'1L)*Z<dV%)*;Ro?[C5^T2OpIWA)EKcD;:]8R=6oHc
%$X?F",W(1[']F/:Ip')2BFnZPGb9'bX3.qAe3!^u7T4bZoW3,!-Yr:!74rcda?U!P>89d3Tce.0,.n2YApY/*@d22XH?ToI%C.Tg
%lBLpk4:dVf&SbJ:R,=g#igWP[>ERMfE3LrBBBJg)fIC6k4h]a)Y&dIgg):nG\[=eqWp3)!PLH@pL8_o;b*3AN$@MgiV6hiQHM<7[
%VaT?XH=]@H,&E:5(D:GZKdM5VYmm^(78j<\["TZub"%dr++;F+6kC+jSY/YS"A/GG5JI;H/ndf1NRBdPk+YEsf/+^ClL\'7Z:dJ.
%5[N36%U#qo^`9TgB;"mg-rjksPXc&_cH)g2'nW/OGnL8Ej=N':<int$_Z;>PqNu:VBSWCh2DqC.;O1%pRlB$@Q!sL$_]b\#r<M57
%[PBC8L?38-/>YfR]O+R]b(J>!=\o@n5#D@kg-VdQ^!eN-)*Oo@#;p(qbtQWYM/m^bU.SSZS]5e%kYX3!-u`*ZDk[k>ou<POq'DX=
%)HG0`em].>lU8"KCVWG7H)aX.o^5VtIT4]j"l-0L'8:pR)&u>+M4lZ/8A=.7P<8*l<7&=H1GOXH<n#""RMoTr<U`YlPf9J6Rn7IU
%^=Le/Ks*:IANlY.Zmn0'@nHd@q1Fp(R0F8#SggAbV^NF;[,%b(8h[6f;q08q4u/AK;;pf/Erf#)oi8p\k0jK1ALf%>IgHIrIKE--
%CQ8n9or4`emre,pVEWJm?]nfr+YtS[i1SQ.CeT'k.qs7klPV;nTW%P%;RWH6X((%_OLanH8p:.c2s>r(92_:t3b?%<TV'12W_cXH
%5*-S&&fafZ7&(#L;Ed]lLr_U2Tb)B&2NLg0Zd5NgK565t64Okn<$j(Lo4,On'e^U@[-!N7YZPnMikr#F=U4)_6fq5=Q"VLp2>&$@
%?tH_]S-lBi]h2n$Z^\nT]2QD"eJ/V!;PII(3Hi"onNt%H-WPY9io7mP_heso)'5+Xdfh2/\uA#p#8H!+S(#X&Eo.&gjiY"rl%CY!
%dM#RUU*qKq%k&L1?)2^2;2!H0nfHIQMMi/jJJ<qP*r.&kI+0L8\Uio^A]qjMbXdk74G8pQaHg)*nqhRGRVSU`&]j-VJAun#n^-`6
%`=&[i4PMBoEj=UO@RZ'^gr$AUCJu_qE7-$8lU<A$.m5)@0k\hB:]j+li7'lN2<jl-+h<m1R]'2p7O.j[QI;$.`ER.J"c@7AdcY[K
%(lb;V?K^7=:,Q)Qko(er3[G&GSC:G$(L9o&glY(B:(n<%Hu=d6l%5rn@8`)TKGpJHaFN!7HE'iU,pb8hJfDnKd\]9?MBJ6m8Qadp
%IS-fPbc&<7bNUX>O;G"_5N5j:5WV%Z)HR:iCUkF'dX`o88UeW.kBsAC?t(aCWEb>WC>:J4dQA+H:IS5>@[K$?Ma2Zi[K=sSW3<1o
%39j97'H8qiN_njS&UH$+DNS\tBU%B>25EZaA7NkfjLZ7GY-16'=I#W4a>sT<=Q=1]4%1;u5uB3\L$!I@7=l^3!KaQ8E(V>t=Bt,A
%Pp/BD6!<b@EG_RH`VcqL\-*@e"Qk(i%>U(33M4+-19.]=cP'Ank@[;`#e@7)G@`8LUg*t",Fj"`9MP,s.V%/IZu;joH<3-a;<M\]
%_W:C,5"k\]aM#Y*:?E`a?ZXH@l29mU$0I+H.PDT>8u'%^O7e#X?E8BJUlY>M8_u\`@_sV(2ATYSY=XuN$0k1e$;[gPnlj0+<<T4(
%lLjQQI85R/gXJjLZ@)DE7SlS=9Tos_c*7cdq%#[?^qB@i0Fq+dRBdlDc:1b6n!qKrjs]=g<32n8*mi?1OD2IpcT*(tCas;!*5)k4
%#QLVod3=1(9*7AAW6sSH>blPRE[@F)`%l8q_2f5^,0;E%O@*8;5rR9TeAP**F4(1S(Gt:Zl',BDKJ@;?@$tB6aW@Ulb3*%>`+[d!
%?WU:ib,TifX@bc^L(rp><4DEHZ+jjaIh;!G"^n5WPX=.eXl<=,Sb=d8;<GI67-Q^H7L'C&e0c?'X]#Gu9%cUT]:e1YPei4!\5t7T
%iV&fXHHPG>>s0UDF7"1G-I6euS^.0[T9%^jkGNq"(&<Kn5IV#t#/nI(37oJ;#4A&LE[pb$pI<HH'Ui/u'>nQoIN>f201BAE6&26i
%L/PMoTa7\,)Ioq%9j2;b=)1^b-Rq<WKM7=j4k=["-J5&8aA?20O3>&]q[.JD.&KSDQ1\pO.'e9HW:]b":RR#hXB4NDM4/m\FQHVi
%lA.g\j]p80Y<HNWI'8&BQ1UIss,sHU;j4BSXJ@Y;=e]p/I9.__'Qkkr%J)QW'AFO?->Tmi3kUfWBt):cGp0.BipPm;*2(IUqFM["
%W#oj#@u#apUe7>a#iEY2luo[4'iq.1Y&"$4K6!1$1b*?R4,B#O70XJD9<e?Hn"RdZ#6VXuM\[*\IMuD.q/QF"EM5s--$8ln!Jh^I
%7olENfI6(<;X.<1hY9Eq_2!1@bN7IWKLT%dBcQtT[!3`t*jWAlBQ;GZVkHOt*[t>XZ(WCOhF4Iio=USeoUBcJ2f%^GhaE4(L;fn:
%r<RE::(]&b;,8M[qH^IQ6!Mi0cX!ofB^sQu+te=ln=tiMeZ)+3&^:6?'-gMkq@J\T:erFLc/aNF`.-@L<^7egUH&P1rR@$fqed3!
%?I0F,D5CU8\4H/=O<W'TMN9k..D@^J12J7uRc:(!8gI$/OsX[\M%EDA;tF,B^=1OfWU`1bT&A9qPs6N3o:]6*QQej9,oQSXkCfa@
%OA;$+*H\je=ens7oOc$@Ka*Y4)6l6ClOrD['T^U?2l6.Z6n5Jej[S#AF8B-8*X@:]p:9af19%@79\8^_r(Rc%Z+DiObn3AI%?hG-
%TX,sK2a`CDK".C$5rRO[R+><M$d'59ihIt$q-6:Kp-thD%3UjFS4#bOk-?hU%D5]L'.OT"54j"WfhRQ6a`q[QqU_T+]jNLBl01qr
%fW$m,42#$l+-Z,gkXF"`;?GEbe"(m-[td/+e=2g,#5>GNhEr/]RENIdPeQ-4lA]a?\N:V]6lmk]IQNetS89=HYR+YV,faeh/T<Ef
%1noHOZ3?OGE5/g]l-&L(QTJ4V`/:M4n]7ef>Imc#@\PN62#V?hpp\b,'b0FJ(([ZLWI1DVmG1B8&$a6e#7AEc9CgW<haNG>BT]A/
%>hZo*EREdDTg]nQB&#TT/]Q'$PRB("oT3S]/\?FRc8m=P<!&"HL?W;p;@Bn2\Q<bafkLa19.o\<gVo$dltL\goO>eYMP#V<EOGS\
%DXWZ%?gB[H`R=/&:C9\'c4o.jT`Vr!L&XmtAbI/)[lFD^KZa/N.JI4u!/Q7]Won#Sh9N^Sj[f@ic8h"Qmtr2ePhEs*)q':;M5'?&
%<_onX.1/VE_h"6:@SR[",q91r,4i;S<#7uj?GLaLHAA(!C9p:\D)g!q<"3>YLDIod69;k,?1p_!HpIFA.=pU/_,d3gJHp='kArPK
%*h;9tap2ir3kQ[&h*KVfS7:^I\t$,u\)(a,hSHIZ&%Ke"b0VV-PFs=')-7d?o6DRVfVQ3ZJ>V5_`)A^(-#q`Mp'U'+q%*s>06"Ff
%99j0bAW"=hfPV4!Tbo'I(<UaI.I+KR-ZK\D,"*s)YRX+Y^Lm;C:&1>MmW8g$H='.m8t$1M4'Wo^iALX5$SrQ4m?MD))P&Mp1ruHs
%jEt6NeBU8>if3cMU&;GR%XupQf>Ul<F=Ogr>:"-3AK3k;"PK<=/WjeGI4Zn_6dPS7:aH<sa";=[LYtP$3uE#RLoBkIZ$fsPE's<g
%7q(\^RGmhR&>OLc2dH3fn3*(OG\??57REp"5Bu^hlKE"rXAO?$UGdmbW9>DQ],^F$>pb)$llueSQ+Zh#@4+e(q^l9a`'##GCH4VO
%mSHHQK'*XLi*ACaVGM:tA0g8B&OLDo<V[s8Zt>0DG=plSL0>uIp$/=*TdX'9SfN.HXtCWR5cQr0_3G^JNYuJ]'PTU`Gu"r_V+6X8
%\%qH[&GbUfJ4gi5b,C6LkB!0'UEGPRmgFq+Z-4hp9OG>PbC^=L.ri(UA.PE/+'r`:6ZL89MTY"1^d,9<OJn8tgp3=*ClZ[*jum'Y
%`&T\ZVG0G=omu%!=bH@Nn=:h3L3>2QL;)Grk`k=_l-ZZGH3jhi1&E=eKLRJ37l6s)N(OmBjeuh+,INJ?PRa)jZ-G0F%4[f?Hb-jh
%<)t6VW'nS?buSR;VIQSB,D:/F1u_Gs\O00ZRED_Ck\Yl=n<Gb'mLXS1Uu0Rq&GJl3foR_fJ=Y0#67iL1Umtak[K5V,W5@(.HZV42
%j*1ArQRno+^@5G'C\c2&\m@c91D;G$Ml-5NV'*&X7G97ljM)jH(fN7o=CS<&Yq,$PQDj0u<1(Vc,2Y.(28&i%"<u8[S:kPuZk'DC
%8b<#R!_MK%@0p'F`1eda&7JO,$uHNXM6JbdL=Ur7*)7a-0W?SXlN5!siQ?C"FJLaP6H\h2=[J1*Z"(\-X&Nj6Noj..*QO+i+NTKc
%*Vf+LimS\#6C&gk(m$#\[t+?h%.7DR8e]V!86j`-OX+j&Z:U>+m6!#fTQV7>^aC6:Ce6i!3!;nW6LH1'$RE;'G))`sXu+(l"_+-/
%TR1)T!2^oiBK"H3U;M7^"'$$,82GHL,k_mh2ShCaNUKR#<M]jgr26nX0\U[+0&u2#_-TR#[N=:[nYQ%Z?fluiI6m&aCA44Ti!A;/
%?4<!UasUnW3Et"&DP0U:?c]9e*`!boPjir5'(9jdUPJuo4,a9fl/bUH>&]0%2Ei:_YlM_SS:6P<8mbm\#h@^[E+LD.7UhT"Z+6_=
%VB>>UIR5c*O!FNIp.<!\YE(LW]GL^]D0\t!8L[G;VqZ!+pPhQ%!#^u8?qP/Uh@#&6!I-?_@Jfmb8V_B(G[$=dR!8rq#W*%+6ZL*R
%j^^j/%=k:K1O,YpRe-dhSDqku-4.oOOH^0G43.)UL'kD$6dR(,0YP75e2GXCbTrAf(r5o2fa)XJf+c$d)9[f9dN+#C0*P\@r`&V&
%s+YHd_%Ug"HBh-_`#4#>4,EM$q5UIkKg@a:.E;r2!]qj%rHlL6QL(%59d<,iW]T]G+/#e7P6_63me#i_LP/&5@AFh6YI1?g'_AG1
%\BCVQ(6Fb1_oW@&"#Sn1JZ&ec0Ogm#,Q[EFE]-W\"\ebd6+R\_N+ePWj_q%om>0Co3^<+X"p4r@UA"VY7*jL:VOKO@cf!M6VMh%)
%pea@hYe4U?OQEX8mD:K:La8lN&qN%De[N[q+9q+&Iif0(bt[)(M/0-9^nu?dD'>^.V45:8,ZX[tEu@$2WqZ)q3,pAM;u=k^jGuhS
%BiKU-)^m$m&-fpH#q>BO+g`lJ\-F[tNFnt7)#U6DOtJ?e@g`HP[K@]]s#![_0VIq:2XZ6SKDO<T'e3T@EPb6`Au\<(m`a4+cY3KP
%D0-iJj)qlmJ<<#LZMIRp!#45*$RW7HiZfT^WHq7\!0i'CU\#TSQ*q#Nep3Tt-M^5j!gghI^,08HH`Hf(q!;qo,/RJP<(N3=iANfr
%i`G^]C30W139]lta9[tS@U6N3X^MQ.K(LQ$B0lAr,>.+FX("pa!sVXld*R:L'0Xj;Tj3Dl/)7`$80<q'H!2UbKA=F0F]A91GPtMe
%2+/`(48t*_W#9qs8/na@.'\D?")6mp_%Lf\UPXAL"[PM6E),=Uo;1qNn#@UK7i>A$*Oe=<4$K/(&\d4P$6`k2n?uHSXXI#h:o'U`
%iQ676Lr,('5@VD[K0*[tV[GZkHBd(UDaeAU^o7G#I`ZsDF`0/A>LOBACoDZYX=7M3-)S%06jEa)PM<'^Q:N)1Z+--6_imZl;l5[L
%+,GZp9m,g@0fUG+ECJKf1T\&k_7E4B:4`hk0DAY$X4(BVYjU4Qh5)iNSBg%0_8V>EH(YWJ-$AI"mk.@jT[S[.\ipdSq_%+d<a;`9
%=E1V*@`A)MY*?a'*X%!6/dfoPKb]J5KBgO&$2OQtXl)?tjYVMbf!!JNHbF>FOKkH@g$U=1J$Uo0nHbXT3?3N)?<I+Qf*Pe1?URQp
%H??!&(]qJ:Id@E531-eRI*A:lSme_jiqt%aX&RNu\Ae9%o7&%KUHkiko[XJ9DmtOTV,qY#105#n^GF:k1eHbfR\aC=7Ck#KE71XX
%0:<e7!]?m<%YUUF3$o'"/.;iW]eq$%c:DiuL:-[_>7C<i6R(fOLu2[_`K3<G+TmkC`BuPUPTeqc861ee^lfA*RkeGo-QJi!Ol,+g
%`8&(Jqt]6m`K<fOHo"8*5pBGQkp?o)*!19#K)miekjsd^VFJs,bn;r$]DsRE8?!juV>B9.?tka_@68_n+K*N9Hj[1AM^auN\X;qO
%Qnm2!EL0q.S18Mogr7FA4/PD279uu^G&*t^7V@>&egZ0&'Li@5@O+kNDi-cI-ublD8BK%MpHM-^UsWC#6&g?8$4_MV33uKQC,!Wi
%?uNcHEd8uJ;r.aX?EI-ugsU=V26(b-`8.Idq0&L6Fu&7&An#hQll`(Aep<'&Q<]aM@`cTPT7A5WlA(%7&^@7L<cCk_Xk]Fe]9r:3
%m*->D/p21HjX2BI*%8L*_tDu6ZKcn/-Ca#9BsNAM&R4Q=[RbFQPD^\&8No=0p>d='8MAjOB<m&?1?jm=n&$bDEXMO&M^OiH\TmZY
%o;(rHnK1rsmln*McBCC=M",!\)'u`B1Mj>WdO#c'/sa.19+hWsi6l<`Moll-';@M!PY,Y\c6qlb9Bo^I:`Cj38MJb>$N]@9Jjc<V
%>cU/*SATOk4O(Yt#<`D2BiH]?f\N,1FNcH83m/I/BA0$*Q=b!glrs.=q0nkdi`=:):`&Z]-%^2aIe=^X5:.32eQ5"a#(ljLgRhfl
%c`anSklpP:a)eUccW/aB07A.Yg,kJ;4j^,-I!6j\b(M`R@*<22*)&n6]gn8'>*=W.;VQ?E@s'p=A;F[m?D3XR7%(f-pbVCrJ17m4
%mM4G#ef.s[$QA2BWUI8H)fRR_N6A6ZYUo*[S'C0TSNsmQ%2U>"Lni/RU'c/!JI5tpGHU9M<ZBq6=U*u#]c*5;_-pKF_IW#CKIPIk
%hf)_5$W?CnQ*JdJPL-:(A(ql%g>6dC:^,Zm9c4o$Ua(oPlqYJmYho*=2%AZ1hU)E4I8S28!Eu_Drs<8C,pKU(OqY(-?AAE!IkJY<
%5*X'J8NJ%B-/uR%Sai9,T8Y&miQ"]Vr'4fQ6Zs[ELb4Kh^<]61M]tBT=\WGij3IQRfP-+4\6*rC3Q$5lRJAikb3rD;8NE"[hjn5V
%i*K?rWk&gY]VN>@PRgZ">mbi6;?1pY?0>Jc&_EB.p9VAp!q0&_:PSeHrhOKBOjfY"ElNRKk0NVs#HpRSXF(LnBc91-FqmmW[Vu,!
%V7^#$(G<=s.sYPlQR02.rN[^#P$GJ_>jkQ+YV=krh18RZ4'>Laf5u:F+hbW"H@>\D:=K7+3NKkp'YN6g;\muliJo+oBlAnc95c!3
%[[%8l#1+Se;,3%Vk#8KC?NT2gaWaA#/:m:S!^YgL[Hef9&U2?%G;KG(mFWB.XW^13cTCSq^(oTuVLL)G3J.^4%'H1"W`!+PSPYsm
%KBspaClDD`:;Pf^hr&2E07TU/JLbEl\2l-TOUHaQR'(LGi+W2Yk#DXZo-r=]dt%JoT3clbc@:+86%X>D/k6obM8U^YE[OBraCRhV
%4p@8qH/9p'qp4':7'n72Q69=^jS]4<`eF/1-V3;FXAq>ZdQfED>4X1&'.+?Wk1i_!TX'WF4(6Q&/iQu*.<poj`"Cl7[hC*us&,he
%0PMYr)m/oM>f,QIX+\\pCt^OBR&i"=]*f8r2fhhmHif/qX.RfID:EB/Ie0%9J,T5qDnl20?[e()s1O'rWHp&\A<.s$@f0!p1m!W`
%g3SLu,`fhpdqU7U4H];3F>/daRFZ`mhP9/2^+67n(d]5@@20d[@FihF7ZOXT3S9fSag:nRbD^^#1Ic4^gIhdQp4ll6VQ>.Dil=.N
%LCmSk(F/[0<J^IgLqK8*NR:AI.G,R]rF,=?M2L]a&$+XH&$olsg,-#jT7XcPr<SSO],CfDFaX^NUk)c_[,t;+$'OB\>CpAlP5>e9
%eTWkVP3Vl^6qIKkgh=s1i(TM;hpiiCWp=F3-4T$VUG\ZqpF&_8mqNC\eb(d*P6Q'<d@*kI,tsUhD#(sigE1TG''0>sYX.t^f@M-l
%)T]lkD*>dKP,J/Z#0BeL?\@ER+;Zf8q%UJ3a]!UhNrDkpN;g$g%fS.P,06)!qRu\=m*1mX=oPX:`dD5O7[#0JX'0EpF,)b8&$4p]
%YR3+/Qnqr[>i1uF_;=tN%O5::;TI0*<l)Tm7V$5&/8NM.?uLKYEhp:L#!#RE?\9>4+;Yotq%R(SA@]UD**I=C0'#Rr>Rb_L3kbei
%dQfEC>4X1&P9nb#29:sGp_m[7"1d&tc)9J_b*)&#)IuE^Hk!BWJR!#uk#66@P3!-WhQU@I2seEcapjkLKBT:`Y<he;O@u"qHA9ZI
%:N]nOJuAIY#/SbR/n8)V.<po*V`Cn:rDJB@1TZ,%1Q4u%M;RXOk7To#)7GKka"q0MOf#_^_nF8+RfXD^Ynba#=,!0T2iR?NJT(p'
%XW#WV:;Pe3iXIE$BCppuER[7e\QJ.`p?#;X2npG#dQCT9O>Ouo(F2oqfu3E'luNJrjUGFGA-nEGEJJO"dQCm3c`)G"DRAP)E$e8I
%l\Z(6k5"#RUk)cg[,t<V*ed1,?#a<$4C;?\9RUFbce#GJ,tsUdCq7G)e/`^>''0o.0J7^@lYCT('p+?Ag3SLu,Z"#;EQQ[7?X3.Y
%O:.K-Hj\`*jJfjDD)N&Rb!^E$<H.G_l*,l?GNU15?uNb)cgliC1ZlNt)#AWr(fq"aTf*_T4/uZd=#t4kLVWjs'k7.r+toq=jds0M
%'^Ug?r\,NcCV1P`@20d[@JT1"3P)re?uLKYJqV(G\#9TRF'6nr]2F<BSJ\6S-=]]@c>@22CV,8@&gBu)gkQG<>BKN)?PCL^6=3r[
%fP_s?lLZ]>Ltdl?0;"WSRU4"W42nuK#Dp3cZ&R7Ro-qbLG<)BV@l8@BZ2dV0J46.G$V@#rSd(8n>.YR).F"buDgjokUrG[,UL3lR
%U&,1g#*@R\Xn`[tc'KtaEKqhCmR*:f85bi%RoB#(%c%X"8I_@%-:n;2/!ddQaqU>5,W,WYQm=P>170<rFIO)X*U5&tVr2ul,WPo]
%LlrZA)+7$u\^Y<;Vr/16/#onL.ZYTM\M&5KK;cp8H"m=jO?<t_;Pl@D5VorLiu`p/WSs%,mPL#`R+?WlhP8k?jp$mG1i%fc<2Oi`
%`*,1p\`D$k@?q5kGUCX-!r51"1N]B2L0nW2'QX2]ZW=T4:d?'gC!EP`Da#mbZLI[u1KU#1C)@JS[)Q%K[D!_Sd]<m18Xcp$--=Z<
%R2@Hp5*mNt(<j'l*n5eP06)"?$\f$1AuorMTn$CfeCHEl-?bagd_lX%<gqZT(mcqYnJ$AQfHDf+,%rH[hL'0\:n(!kP&:ZIkK(@b
%H)$nU2dciP78"cN@[u,&qrXdqhOBI<46t='f]Zein+1.t,aB<l@Ml^%\[@u:XR-Xt7q&EW,,J$t+51#;F:$E?2Tr8;3*Fuf+sqc(
%+=/@m;-ceQHfUZ[M89on*@!dD88cS)Xn<*,%/Cou%/E)Z`K6!$Iiq)_+p3>ZXo"n&q.;K>`6HHg8",r&h4,*nlP[-Enp-ZlWI(n_
%15dKG,5KVC8K?tH.*tL$Fn/72'+EMj6luSgdjV^7n4.H?g\s_&aXH@_<VGZ)+1C*;N\c%WpYkqHi/*)V4BqD+aI4cZ>RKS%b55R=
%kn-_'k%$a4U(irC\3JG95DC!K5+0h;SI&1-LC"J,'LE2SU!V)p7$(9e#e-k:+i!Tgka42Q$RVgg0j-7!Qo#(f=u4mlF0N,[4Ln^\
%M^RtG-a2)Ljefpa*H<1\Mbp2:<M=e%9f=eqdq#ei3DXg[EFNiM"W(#gdsD\g,0E\HPYM%]W-hOhNE4l?@U,P4Ec]mq6$8]M^%J,A
%V,&_4r5:E@_kuPYA]^hGEL(F0,H&Wn1.poXVr6RVV+rY7>WhiW4P;N@8@QFoJK\m9?sK1C@e7Ek?&mt[m&_'s/o>X6j<nP2AB4RO
%eHl)8l6N:LSef7hZ@e)LHh/\rLiTJYM^TB=hOH!NKo!OmOWl:jrc!JOlr$0HFm4FWW^Ni"1[4h"2H'C7Af`gme'6?;6..ECh3'rn
%4_pe?#+fGbR=d\@d:r9L^"bq`adNocbVK#Ub8iof;/HY$CMVX9f=F2jpZlW-[pisW)&Y).4IFUhYQ+:AIm!c(0Dg;b;NZB!3mp[!
%pSeGp+92,6DneNo%mRg>54q4Si19cH[7\t]K=aOL@mQc#VS+3gj#.M/*?+nTf^(\a+FsHJZqS#%Xnd66ftl,;VYkbnPZK_tHIL&m
%6/t'ZotApe_e*C4j-hGWXN>dO)kPB*K(Of,>ER^8=*h?M!hOS.$6fldQpS4Fc.6DLTjE^oWo1*.OtbbF@0&0_2ne%9:sDT"QB\Z'
%%[/ZZ@JWnNaR>Y"roaMOolI_KASbJ1N]:,sb^KWdQ<,_1En5S-LM&fV5PR;J`8-tfe&Ko@9m/42!k-+lLgT#aA]3J]K(q&L7KTtd
%DH+=87s[678+tu'SL""Ca@;!`%-.Or/@f#VM^904IPNFBaNhhs_-+"k%[1k1Sqa*UaN'VbS:d:.Ias[IgS/cLTr!Y6o]3'Q.C$<S
%!%^#'+95H)g\V`dDA2.n2l_qdk54!&:&qq&ofV^6VtuSi>Ehlik/[l)*Eta$p)gr3i3V,t/>[(TI+h;W+2E<r2lu->._'HF2.+O"
%/%@.h[B,]@]U&&u^$p?78q;WT7dgh',,q24EE<F'7XBP'<;ZNu]s@[aF'a9s1jB9&9Pn+6d"C/]\&Fb(G-&PDM%r,^TLY*\e/Gfm
%q%W2?QU#e2B#kSj9-Cm.5^5SSodJmtf5lEQ6kMT7)qCpuWc38LD/PcPasg=I?W,"ZNu^=lTZnSBBkT[6Hh19"SJ]hd82cDM)556E
%\O;GraYOAg%3Y)EX^Gp."afjQ\[@(`9j(mo@=mi4gl+)rP7DWDd@*kI,tsmH-?c`8XR"6"0Nl9R#7-N(31*R1&?D4(HA;fj%W],-
%RSUbV0_'.Ha;,\I$1bHW*G%g[R+1>ZVr0^q'"nG\oZf(oRmNG+BU:Q;99%MM$8,3H]VC?*S2AP2pRbTQX>'O`Mis.2!:$0:aUc#a
%M?qNh)g?Ia:>q2'*Rd8+AQn[S34!,=-EWCl42u*QS"8p1+?*G,o-npF_P]H!i3<e9N_Zhd%SebEBK.5,s487Wc'Rp&:9eBN4I@/\
%P,m&sg_B;D4kh^AJONfY>`>FVXFc('N!RXqRc<%i:VkockS0fl89AZ<VcX*-VjK?2f#EaLY;t7)hiBIj%P05+RfA9RP7DWDd@*kI
%,tsV'C^H:O9^Y98<!O0T-I)S0Kh2N[gh=s1i'`qh(D[f6eH*[$8]-qFk`)Lu4c5Ef^`)R&lMhdhOp5s+d@*kI,taJ%CcTHUgF7;Q
%o&LQ]Z,)I"ria.uBcr`tXn`[$feM$.2:sY6s#&F`%HJj/CH_pj;>=)qQ6Y(WN#A0q'c``Qc>VRj,Q"V='^X)2n6&MkA]K1-4%:aK
%rGPZpm:AI9(H*_D*dqK4*.23**+/NU24oK6q9^QZgh<LDUJItCK29]W2T6Gb.*\YtDgjpVV#%:)/8=N*/k\7H`C=W,"d^cC5-ZD,
%Q7TQS=]4'W>a@58(RHEgjC4lAT7R_ZdMu@oQ;mSp(F9N#6DHK2K(gZbWr$P88uhW$YY#hTKgoiA"d^K;0!XLNqrP?+5$XW5_BUs@
%1"H(W=>:9G6DcW4JhnpSHERN'VE2Hr/#ImQ?tml`i'#5Sk.T489,VmoYl]q,0eSP7cEC`M9D0otfWns-c\diQEU(s_pL6X/$=%\n
%Ak[8Q'lk@$@[s\BLg'jb911DWVdOF,EJYG#1V1N79PU6W>V(#AHh/]=S)98\C$mJu9Y0tV$'V?\D!([Wp:5juEeuAVZ@p?5pr&OR
%l0^4mH>4Rh)m/oMS-Y>H_.(9Wq7i:JBc*$P^$ufL7o@_4=55EBmOrIE9H@[XpXc[r,taJ!D#)!je0fEHo&M,m0lG#grti.S)T\aK
%CH_o7G"csbEBC&n^UP<55]3m7k#:ajKhli!BsX4(h2^%c<PcL#VTGKfH?W&'%ef$Xpai>qZ==s"NhOc8N,b-<&ScCG^17&jJYhD(
%i/nnI@MKlQ@ROU%QQ&,8o-r=]+.Zk/Nn/G23lNR.35tHB,-?H,Bg)]IoD9+HRZqM#JW@:pB\?d/XRG)(K3E+I[ZnDRGQP.I99(P`
%ZK0)Ta:YgKk:^-/0ZNaMd+;;Jp7$lah\^?S0bRkX&5QFRRM8Vt;r#/%#Dp0bZ&R10lP[\\G8VSqYEmPHaTs`b:)7ReSTc):%3Vp^
%FtL@*RSUcVr-i0I%>&7`^\#/0pD#e"+LaL;o-r=]00ulF.nbuZLEQDSj=m8dVsHd@^ZPemMkP*BUk<OuEYh'1@M<gY"[TXY;F;kf
%)JPSn][.*<NMk]_)C%6F_?EMhTQ!3F5qXrso-q0PaU5)MYf^I2<UNMKg`igTGf"1uAak@1O9q?+HA9]B?o7p>pq^_CAFP4/O@bks
%Hj\`*k\9_p$`\;iK`tJRL<[qI3VL!Oca$uF%J+g&bY*Q`JpLE5HbD'OVNCDYS[m1.Ka.,C8S^KnHh3(/PGQU7d9rpTWBi(Yd[O"J
%f(a^T82E2LE5#I*4?,R5CF7WTZ-O^dQ3jlkQj5KWmRrr&`.VQ>LKc:b;J70h0s16cSB)^gKiGV#c';lI22k&m>N71->00-6r14T8
%;HoRW)tkc$FLuMa8^ojg2MEPi9X77K.cmR8rU+<c\\J)Gd?aanB.:]I9#(:js%,#TAg9$>PEfck(.VDB_T7b.#0bJ,j<.NB42Y7V
%-&O%D8B+@sn\"I%M4u;RhEASkoqh#Y]cZXq/2?-Ho6d:T%B^lBi^P]cI.KMn7R>QWZ"P47?Q-7"mlP^PR,<iN_PfDbK"^iXXHgHX
%pK=@lRl3,Y\1Z6mR3>QIf@`HuVVZ\-^2]i:J`peP(<]WB=KA`BOV1XCE5-M1$;Fi9[%#ZuSl"p\h/[+3Pd%]'#L<BaP=4W%%WN_-
%LOTigZ%!:R1\Ao+64k'.1P84N>2&Js/cC0US$DkK(&?"M=hup>\(Th%ltnm;(FEPY^*.;r#Ojj+F[</0[cG>DID(bJ-\^0kM[JoX
%\GuD4s89q/?iRDRq"rM<V%&ih8WU];-[#,i?9:gq'//!r-EdC=O+7$"qst2,r(AF4@__"tB([Vks+7?cYF3lj*f53f3%pEe`4\'6
%Qcg3<`HQGPm7G&g`,R=%jVo%D7/YbtN.1iDLltF^g5o'Z":U5rs.*$Q%QZDE;KD05Z$%(V1]@DC=!H"L'tCU^1`)Ru;XM1CCg%)5
%4FhQ?XoGij_o=7IIua&a[s>`;fo1Eg=n`iSQ](CKS%X6<a<-];03E6J(B?oq,\Vhk8CJn!.16-/=etC,C_a6iFbCR3Jm.B_-iXu+
%dJ<l@S&b>q7(3WTRnY`nH8<R9Lehj&Jpa88MPc-/?Q+`'.'g^Di,+b9U^\1Jd1$@qk^rfL/38T&AqYJ>>uc@B,8LF2ODY_N))`&T
%O>LCUnsDBnZoH;^L5p58fYAg7CKF5h[1Oq[-$sJlY!?i3nu^>DZt@)&QqrrO"EoIQ@L[,X>OAG[FEL!c)r>G[#X.S[n[qoX'%3@8
%&2-0#m>eE+d_YeHH<9e8p(@26_-YmqDA]'\akh-$RaJQGdp>0AoG<aCjZR3=Q$<3%SU=#'5?ZcFX%``*;>>l&rQb"odTUH^.`:tU
%,A^.:=SJV8<VN9u=FdT#&g;#1Imo:(dd`nI_?XmbRoepUc$d(<YM\qM>]A=CSg%CmWoS-(ak\/J%jo]S#53)V$PUVN-\X,9WS/IJ
%/U>^<(-*pCk>\]"a&jb"[@La>m;g<E1q4B:ch)8"0:2TtG0-4hXE7o(Y:feC+aijaVaQ]=<l^=84UEfe90":VN1VQ"D.hLq`+Rnn
%8H![[;<"=g7>^J,M>q[SDb<66b+2FfW-(`2LpHrP"76-A1K<N/---mS;tTa76BqlLYH[bon<8j#%SnMk:]\WloYaVo&N^E#kY^eW
%Nq+7jm@Y9Ie=V0?O&BMi427Ch6a^!b,:b4(jiB,IM4IRe=MqE$7IjB?Q_a@:<74qq^I\?p8D_-HGDU,rdqba)`(LuYK?M[Te[\=j
%aH>gHmLTgDlWAPIcZ3t*]UlHjljRcbH\RLU*T&_RHbX9W]iCTEBB\rW4W0*rQVjLtTc.-ZF;S^UX6Bs<j*SI.A^kVr..Tki\QaPN
%LQPaNF7_QS+%Q0N8`FaSa@;WEC:]"RbY7gT/tFW!WQZLa&/H]XoV_H/Ubj/hql]H2Mm\dK*P$Z9.%$rqIks3qNZqXu?V^9DQQG;Q
%GG]59$H`1J26@feSX'JR:P"so;Q"U]]^PUtNd?>]_W@"-/4#GHO$<%>e0T@Lc5V'6W]'7GAuKfloBBWi+=3lHOGLu#9)_)9RSCj?
%EfV6kR/.I8UFr*3VF"XFM=Y":0'AEK,Hm-&&j_[uBeSQh^0;RWTbuS*a&.>+.`q!CW)l3C+)pF>DA$T\^9<Y%AAhi!:]pEKa,,Kh
%Vp2kHSg`WUd4M^%P3!Np7GdI6_2^S.Z93I=;inDZ$'R<8]_c-P?(<'*%5E=7%Dk/nJr]$!*ofN=j@.ZG-c1?0OpVuugXf7?0e2/J
%j@Tr(o^W38f,+>\bnVM@XjTnL8\/?cJhVN#G;tKNA>3ag]n\W%Hhb'c@rH9kQAhUDBQmS09Y'7u?NBP'No"/HMV_@rKH->TE2B$`
%kj/^hc\;$G7u([#'q=qX9_JMA6O&)eIbnqfGDq;c,?PItoT?U1gGXLN@>'eEmroJs;,10*LH0[RYjX/ZYcqI^etf/:I'AToF`!7H
%ZFAj2.Nlh@?2#E&kl+M1B/9i]"ddL"14ce8ZT2QHFS))#/L$f<+JHsORkXh'M7[:B*PjN:*=:#aiY1Y7_7gQYM9Ve^?\^XC'HKdN
%4"^$c"IYW'D&oE>I"k/`]LT6<5"+.Uj8RjabE\["Q5=tRpQFW1A@<pTAO"[*Hbj$9_CX<*=_H?)eXK7>(Q@tE=ftY>#$#ZH3D-L1
%Q17/B?)EY:=_M^hBUUcA+As3k]a:+m,;N4'l<%SLLJXh0n9=u94X=!imODI2,>JV%Hc_?eJuZj"ZERe9f&4BIl5#V@Qb_$s"PYVT
%:*HleS'5m.?fiNQA+3@IPPpdM][9l2''c<N$jC09.d@1nAs+99)+]Q[72.2Y7B%F#XP(64kmkf#g`*6q#a:nu;dF#=.U6\&Yu[FI
%.Qt_@(0`UFQ-r7:ldK$KbRj?$>tAfim\WQ*]-6hs(i5'Qj!8oAnO#T'*?_D'"WaC,C73gcU1o&n7%!P_EncN,I&(le&isa?oLoB/
%g=Q777$eO##`Z33>+;9-84t2QYbYk\K`R?u74PiGH!"Wun33NXR6Z;P@G?"PBDQ/f*ntdjJrP##Z7;bKUtdbf`brQ/+k.?Q;#41\
%*CnS!'BJa?r8ru8#mqlEi"h*MFDDh3RPSdab[*t2lVrRi+=kT=&Y^_1[6D(LoEll8T26p)DIWqB[0d[Le3i(,*%aj?1VqS<hPY!Z
%BRjGN6%'3iq]40&X,jjo^NV1%d.ct4a7HM$[G!T.9HjgiC9X,?%3VXg7V>U1E@[p)'L["H@U`c@mmq"HA<f)R<@Y_IoPSZ)*iuZ(
%4uc^[d\>K3@[P>Pl!]@ETqK/t^k/^&_FJlRpN0JJnKh2+p16f84S775iYhT?A>_M0?5o"(SqH5g!BH'j+5m\!\D"b5r*D4aqF+^2
%NVngOjf/`X9j)&UTmk]QKp+/tG;A7Nk@LAaL]:_hK9YNg'2BEI).f(U2EPjZ8U9Rk[pL;6l8e.oTD9#<?)CB!g->Fg[N9U**U5V^
%^Kkp]F@X@*m:IPs?us^!7<0\Tb?os.TKqP+L\Se2P0T)RpWqk18Q&&W^*-BIFo&O"TV[Dag4n<Wl,W,nihJ3kP2FDb;7;(4;qCRk
%'<QW@&<o)@h[5*Y3e:Nu;GTeU%m.-.Fe$pAfo,hfZF</Y/H=Cu@M!l:(s8Gbp/"i@AX'kC$uJB!Vt?a.,!t22iHM`I8=H!PL2R61
%7L3YHXY<*"I#]/42b.'_41#H>R+%,Y$GI=I"53kq`:fq!_l=XVbgBiP(ts^*bj!17"gl9IU:Gas:;RM$Df&"spX);#+i$^mb3T:r
%I3&g!"!-Oq[h!\dJ'<*,=0$1;He]WM03/732lQ,k*$*ldL=Up9'D`jkq@:gK6`>/ElX^*%L6=T8I+X-qVdOHC9W[tokU&aJ!gAf)
%7^NK_*g.pLnpamS?hEK%ZjYr]`['G-"X+Q2jZ!lW0ghF:ciYe7`RAc6Da$[H'jl4#59Ls?%^3Ht`\^dUM)?"#ph%8M$tU##f#&L+
%kdV?:V+p"_Wj2bCZYdeC<eQVF1PBV87ZIrdm0l7<$Q[XdJ@;[[+//q2qHS:3Wm@0TXp>b/=Pg^DR;In#H*S;/_"/&Sid1?9"-38f
%i`=Bsm=iU2b3/B"5(DAQId1p$[^al\AY:,%GkI*>o@jEkM'll(cdZP_KV?UC%/7@-c_/8CRS_EXA9Sj-4%hs\;l-S`_dsC#(Gh:9
%L7tA4[<EECPdu\i>!:?1NgnDO`JOC$CVSe]Ig7.a11uWM+j;C(_-b)&jr.\WpU*=l41\ubb$7:BD*o?+oKs%OpJc>W&fg">h.:8*
%/(<=A\pH`hlcnVV2<sVMVOtQ>$`V6/4mX.UgKW)`=giBMrK]C7UK?iQK9Je0pV&``50(_iD$'ZVGDte7Gp'Fj:FUfG@IgFGIYAhD
%NZ8SnU#5#8(U#!/8JLE"MNhjRV/_Rg[h0'++WL"54a!/bh-<3D%lr_3gh'NCmhtJf`=X7-'2"f6=s[q[EsRJ`Lu?&/9r]W?-$'PU
%2T_9GM)eacfV*"-N)!;0.3P30jIR]6IjR/M0#t-YF-5.2mILY,ntnr*'LU4BfTgN@JO#$a;[=VD8s^c3OWX'M\(m\?&WP:DjAT,k
%Lkm]g54PTdkj(4qJtDS-/)"p^RhJ1CSDn$4Le[DqT(co%+<.*D_Jp*)B:Hl`GI67eD>%I7I(`o@Q>Lg<<kZm=]6^!.cRD7e4^=H"
%mWop"n6C/Gh.5r`nYr^9OUK<cA9EQQO^!qU<oc@$$@4=NKuaFa$47i`0cO.]]-7P^%TWP_"?l5$Lh`Ap&3.db;,;!d(&Bu8]V=S`
%\N'&'F"k.+L(?%)D2q-Y]LVQ+q]K`#Nr-=s_ibI%2Vb]VTWd/:CT8l!6o8SH\`6_biE\QcaY$!>pa=i-VI[ua9fAe>R2QelQDG'?
%[VSedfpHASL7C-86cXX/KVI=2'H^$&3q]9D4($?VP&jRth9ogWjg900m%N3f;HXWZgb*7d6]6AQHUk^HF"/1QNVJ<ih+hUBeHP!C
%i%0aN</+'+dO.c'UiAi5Vp#'m&8(.YmrA8dZ[,R)oH5l5FYV61f-sk/U.)\N8aiTcdQ;Q.'Nu3Q1]pW^JZhLH)U\-t%8pcnV@6=.
%.mB4"I3#4kcu[l3XW26hXWtRdD2\L1;`pf;&M4B$A(4dDmbuT1Q=dH[S%I6f4AGpjZXP/-Arap@GoNMYGO?jo.QU+S$8PpH3:o$O
%G*BFP@$D!54mu7GMGP`h3"jSUO9u^@V*[U@WR.)X>&RmZ:n-GV*Ml).+<.*D_Jp*Q<*3%,8VLNC<03M.DCcN/D_=)3o9tsWkdMO"
%%,Q%44q22UKhk&HF-Q@eR4ABR\kMXPW::Oe.DD5bn#e"qh3KM(.Pc[7!nYdBgfsWtHp%dQkk;K!^4?cVRO-4M%\&ApTYp3mj2BPq
%R%oQL^I*eK5iQu;8hN/0FL^Q(8'k]"ZkmIILHW)^l&\=r3:XBtk3/PWn'IcIPIY?mI<mr%gksL'98D,kl$,ls][q2!&kBc4gf:nI
%!OYo$"\<1>SHQNo`k^[=#n6H)lZ_9\f@/htAJlK)\;?7kSB5=P*Q?D7lZ:B1-Oa9K;\,Rr,tj(k(QEm\_I?2oq,>#A*tT-WU/&G`
%%B([-aNB90YZ@l(`;0O=HJ"p*,l**."]Q)7o5RQiV13I80lh8>b+4EIA=p+!Gq2RnUMr:"'Ne"Na=7P<BicF4:ca@gMR0-AWsO+/
%UY;OldKe0h6W,h79nC$=1G@rPUIJ?K1oJUC-[GP2*9qT-T]Zo(9C.;<NB$:b%8V[-EW=m=X#?]eO0</Am9V>^qpepDel/9oNq3@c
%m/i\>=.KRRo%M%BR(;89K<QW+JoW<H-uLLo>t'C&.FM>GF&<KBWlS=?&:*cN5dk][LSF:<MM<-t*mfH8E0?&o&;$tj)(Mtld+;^g
%'eMgK7U6k"6cf*X%+:eWNX,3h7r=MBAWXV<LOEF%@>T^b)X^cci/kNsDp_s/k)RJW4GJP+;f8R%I9ojr1GT0"o*d2tU56N'bnhPT
%(deg+eOltah=Wig'&R0SmZ#[Vo:m0b?d<JF;j6tSZAo$ML.e?s([IU/(0.AD?-tEi&5sn3CAaTZ`5["D5f[c?P=Cm>Vg*M&RRIPP
%+dWioB^*t">anZd`^;P;D)k2!6cXY:j+!TH9+NSLF8X>FgBQtjTIg8(@[$,b<=js\;)3IMkn:i61"DTF@HSZnMm&gr?J["eLOsmo
%Vd%Mhfg4`ed$gQ@a9='Y#TRQ"gOnZP=Ou"mBT#+AgsTc"0!fYf]@LQ[VW($soX28heqlFOK9]XYXnZj*=\un2()2ib3a&L4laA%:
%Q;B%L*5M.U[(,s`oq01'jPlgT4)n*DSN(;b4/KD037R,85^*j7Xf`2_[c"B>9-PpDYU%(=:Ela)\`7*S8T8*i(^Tn@NZ&*N$q!f8
%=qorEfY\]r4fh>?[rULVbTp>JFZ2mn'=bmEdTacV&6GB-EXM7-A"q7fZ.S7bYb<3EF)K<Yh4_mBYbR`_H4P(=Z/P:j#lEaGmc)3?
%M[^IArW"kKAGP@CopcJ<+G7"/7lg&2*p2Zq_ro\apJG6Jb5M.hE+Kp%3u_LsAc.p[Gcs]Yb(i^$rCrU)+jJt,_a$<K_AHKW5&N^!
%YQOWjSh?oXX,p(qkqU/EUHP#I"aX#91>!8!!IBlHQ7WE_R(nf]Vu7)r:GCpE:F4#L6BpUfg(TE*=qZe!*fZoL4i)BKn;g9t`jA:!
%jf-2UnoCM54C.ZN?NClDc`74[^#ReT*9tYX'D/q-;sl:\UkHY]CjL[fT6X3d<o2m#4\#P+I+<'QA:WARO6CjWlOqknFX)qD\GY^>
%kmP!c9\=+kBms5Mqpelfo!<hq[5/>^AUJu/2A-2Y@!V$W&LCaQSmGWW?T?$rDujYtGdd#GeR[PDH61G%/'J3s8PEqY/0UG+S0]F.
%NQ!<;cOAf'*Z,up6[XnaoXm]c')Neg,EDZ27*-&f99e5H.!a1@jS-=qlHOO?_0hK0kOoZO,#I<5aR'-\V:h[pK0`u]#P?C3g]W%`
%jh/'Mlc]ktnpEIH.8K9pG=u>`9L>o)bVGQjKd8nCR"1\pP>&O>/6=h<eL95ch=Wk#2YqMZS^q=#b\1j8ZDUe+E^FU_F-TZ/-Jsii
%6cX)*_ge1V%JA%gB6&D4]\fP>X.947;*_9(B.h<?,@mfO]a)l1cki$<*ML,GHn%:CR8:G-18gZO6Yf#In8&4;eB.*_o+&t0lCHPG
%+89ZP5>1rXlHfF05ED5RI#!GuB>C,1bUL.O4`bKo-l2k00pk<kYBYYjpLm/lk(AmH.%a5[IHE?S\^-5pC[3SXl4=qL'0Lf?%&p;n
%rRWV\mbj6O984u8ndC^++.rE-hEp;r-7E"Y?K@$LHR9.fT114hk-8m4kIg:*k30s@Gs<oeR4p-)AnAj7%soe]()HZ2ftE?74Zgf3
%ZM-%C(OJ?lSmh69XusS?Sr5`RNBKF>0h/cb:DSpum)`)DPH9O"]%HV"p9_nm\FaNbIeI#Z;Vms-5OY#)?bmtFs*MfalZ[CO8$aXL
%%qd.S[Q<O3C4TPjP,%3!"rp%sW"t]kc)<FoUsp@s\=DBP$rr<+`1B?aZ(i3nIpup;r,"?[$@V%-k%Wh1`I)_*I_?uW=]D0o?q2br
%=l0/a8*hmh`F%YXIDOD-;-!MT-Gr7kN:T'8(GBsB,BQ_7i4e4fq^e1T,QdYYN+Zf:@j3DA\P_C*QZ%69\"]qeE"HOj*dTtT5","r
%I%X$Y+f7$m3o[eGN]o343C#L`\^QSK93>p\.n49#])NIkBH`Dc(4GJpcjDXE"WW,070FTZiFobM[Hrq^6=32T%m)TWV4U]qo\B$)
%0kiuBBsR.;5'fRldtr2.5k$TrYNn7oXATHY,2VI&<##QND(aU7?Qfk@+u\R+l3'82BVa3'Mtf>&ge>*GM,1!6?cS!>oUJcM$3W^r
%9)S7;%Dnf&`sI(KUKAZ]UMRhY(Y:g]\(<>%rZ9mB$MAkNHZZIC12qp+ik8<p]h[1J9H]CkA\<pHM8nTb9cKYFJje5>Xq`P$Y=*=<
%"ls3Slk2r!.<gjg3IbXmT(cp0eqX^oEFYJhChg;UcrWF$$5Pp:N!Tmr,YZ>bY%*DeS`0c8n'SL/2FuYZj";rMZ388^,kir_kY([H
%''$`-NbFpXirS5^q]*5!`L/4@>D;D9A/6A"B81Ln^S8\X%4\31>,$0!d:T\aFC\pC%c,E)f!j;cHW0ap-*)@+SEU`c#5GeN\q)gL
%2WY$/\I#,'Tc9.[5'k,n@eBtsU0lHT3gCcW;4Kd1p,eg'<i;MM1:F+ialVC,d\g.AnfYK*Kl$)SBVfA*f^EhXO#*a!OjVADe1Z]]
%Dh9p:U$&^\YPD2)J=I/3T%T3qhAn$u_:RIaLS"6RONKcW1!5En-W?\Aj2;=O/plj3=lkMf'uaB@a9^<V:=/Tgjq[GAau2q:ETob^
%%pF;+rTc`j)7o:<#"bHOirRZ&pG8]d"'4=M-q>aJb)qQ:8O/A9,@WU2e6\/7oXm\b.Uo?:;6DtCP:=j,7k-RBObtn[:^7l33l_Of
%b)rtr5"=4[aY#2+ZK0)i,JR&8+u=X0NZ<=s5oN>U"NIq.EX5W[b8L16TN0Z/nIDE=C]BfDBO753q'$mYKK5,EKD^Il1RjL*)X]GO
%`i\pcE@:B+s,0F<d/nb+.JMoV*0(,HFuNsp8_1d!?1dq5qEus^0DL]s7A#K%+-f#ioNO!u@>iM\Mp*mGj7+%jB!rcCkb?Dld&2WY
%l1nfsT:%kb2g>.:l1:>W3024Pmr8K.&a**l8#CbK*thd<;_Q'9`luQK8o3)/&p"@BNMqEW40p3u@?1%&(*=Un:r^"*iI8>HA1_rp
%-@Da_:%9$j5b&B#IJ*<^qft;fBVYMs6@Ad.iLF4HS,"oq\>%7npgp!/)W<A?,U]6a.]_h2Ud%OQ-+-h*!$Q\L]$-jFDI2Gg;qPP>
%b2OEs.O,&A"QGYQ.`>LV*;T-Y<FsU'Ni5\2I)oB(a?fYIZ"Z&fJG:EE2*VUZ)'s$&K[$E=>fFs^;0RHl;4'm$`HPS[De3au.<i>"
%oc8^ZmRW=c_-[(:mf'0>Y>r\f]&ki[8&k7F\u\77h=HmDI_Z\R8idP_G(T>6ktJf&<)A6*g#P7ud#l',nJeO)FYVA8JJQ"++A`9^
%c%^U.O#<P]^%l:fa4G(45D1!E=e!)L>5Ug'ZWC'LZ(-[Eb-IBAAMJ,JLi6<jEF^o`k@t]kM5FNm>b.)IeYsZ*<"BiX)+](T(\q\h
%AjO0?0grhQZ8i+)mI?DTA)ZK[YV\QT?l:9/NJ=oY-HB+;"ndTqN3^i(4hZT*YMQ6STq"`]Oll;]6nIG30@Tg=1GMg(UXB3SCo"BA
%N,,h?8P^)Di%d0S!KQd]i]gEu2D',R.f/T@Q^=D;:a@@m)5ACY%Y90Y%asnWg73okF-Lh:RE9FtW(TF),R)`ablr;c"ZWt/Ha-Q*
%^1*2WP*U<-%97c@6K1<`'D"5QRXqK="T8E0[$;>"4].lGX4dY+,#^b:*@hopFFbq)r&<k_Z/T63`JP2IM@qA]<sG?\l!d]N-j]L[
%g7fk)g?6)u;56bgn=gY%%$lMn#'-m4mH5nd@.E79`Pmc0_2AeG%^*A'k9\7pFW0@s(4Q*Gas*T6K5(m67u@I4?!tf8rCqTDUprs8
%OlGD`i_+A^-T@*uVf.j)1s\a>]ABJEiR78j&2p8nX>eQ31??pr7X2#r*+c5g3A,>WjEMd-BMhjR>a+(E&s^l@c!@3p7oC3dIlS^s
%lsHiA=HM!j+m7'.l#6+Nikr`j&'0MZd2&k@9Xp@#n`-uFiQ:^$WC/ko<Yd>u,hk>EJummE!'BZ>p2dTbYW-ZCjPn8Xi(-3WBY8RY
%phP"AHC;2:$uX)1?Tr9U'K9MH^^?Yc;!"5I-G;$4>cbG;nGue_-(6'Y6cRI8B,#Zu.::l.bt*_e1E1XMi+W0QmBPePYW#nl\Hm3f
%jF%T8Nhfoc/E$)6[8ChYIKik`Vls(2_s]"YJ>Wc;3G#s8T8O<u,q_f;5Y?E\cD]P7jdgW8haq78&bfn8&jf!#-@6Y.:sl)FIMFtb
%OE"TF4p>*\`K#is(H^I[4%e9Nr8-[s)V#cjJY/(PQe]6\IRf4u4C-me.Jk._>a2`HEDb]t;W:=`7MRgZ_4Ii(rIYhS0+>"s+]^Fq
%%&u^V7S.9Rc78"nMUJ1`n)TO:rU+<-bMV</IRF/,T2OprJ,,^ds*):rb)R3c!fi)gMrSQ/*X;=I5-=>X>1J$:>;!@s2mtR8<F.4+
%q67hdfS-\N0C`OdM]tc]BoBPdafZ*\7X8D".FnB:-=)q;r>*IT+2M,bkJWj2YRSOeYXrQg-'/RXSEHkXJ,6GGT@Ce024cJiBK6?_
%:Q7/pA\\\<a&DCMb-OGQb4D;`WUK*raE%J6aMMD^dRP>U7Bh,s)9A<n1oB,VTKC53LCSL^J\"o4`/A#AhEgSpVDfV<`4l;X3+3'h
%17d*W;Yh$I[Z5oePF]Mf]AXsdT3MWs+Yo+&H@N6%KDj>7+?s^YFh3Ff,1u2rFHDi4Ob<qo=F:/2"V2HmO8Bu)rq=`j:K4;#r\&c5
%Gaqos[qEI\66ikI4s[#'9hZ9B4Sh_U0Q!YKY]Un0ih/,t%/EM.ep`Xb%[L#%Pe*^@h1nlu[T:>kITL6+dU-.r(53%-]3'"=7sP8P
%@6SHO`]=JOZrSZImauY;g2%$bU=)Gh,tqc5QEY[$X2"TN=7Q:PB-R"dpi9QEe3KrQ=VgLKJO/J+39bRJjW_l:Q4HNPEf7Hol8l4M
%\..@;lK#TXV*nLpQ-!-fE.V[(R+-CmP-nH/'*C8Hp%EHkGHc=3n`&QIqqsp'2g+q:Rb'$O/o3kt9-jB/8gL/h\%-2FN[tQ_]"jt[
%>+G5raE!F),0L3:bEjW>:2fQ0_=*j6CjEWZBf;r<WWkarX7tjZ0<A/8a1r>n)=Oj(F-LgO3-'$"ilF4?87IH)YImEgC5(*U9a1:h
%S];8C:j-%6>I;96aKg>o$Of(o`C[7k//MGAZ@"pCI#11(bnd.d;.e*DC6W`P-6UDWaA(r9F?=#3KT;T-XOA5/4\&`R`K6!$(IR$a
%6Y`rAXfb?']O%-C8@Q1d"U?-P:,Z.j/VSef*iQArV`B6%8TE2AU<5oiM^fg1.USoD)Ri9SDfeV@j-7Y&Ls9rX1:??XA7EVNA/H/,
%i`KhVep%Pqer(Ud5;%Dt%t7Jddji"S^8-m\Nu)`mH?`GQYo<Stj`;N7'+8uPF6Ac#O$,+e>WfQAnc=%,-$lB\Ro(!fM;P0Gc^U1j
%92q5&R3=%iFNPmWWq/i%nAIU^HG0+gABboR/p^dpGUN,SWf4Nl(=2YWUt2$>njZ295<t.nUt/320VW)J@V>$fjhtZ$M^TB=/u!_U
%U3qe9M$cD40/:,)47^YX-_f:''V6&i.0SnC)_:;tOO7BQ4p>*\7?EEM(I?me5q;-&ao5/,<:Q,p\7\@A3@euKo_/*5MJo]l8CBi%
%ngL"Wm1rAF\\ac?JjoqGIF]<Po-q2:E\ZZbb55[@kr.Mn,o)Ou-%3QqaD97TaFjui7`Q4XJ#<+&V8@lBS?P)P7&_OQp=1*4a9r!U
%k#64Rj^QBOPkW4_*k(8i7^k7b&`lnQAl"WuA^Tq-.!Z-?[q_5"gW50\<k4>G.sTd!_O2E%?34p6$fr9k??^"f8S:fsDM866=%JAn
%<T;'<9YoT`*`cr5j7\NfA)mF0k.GoMV+e_VqAtsc2s%I&Xfm98!o7I?frnrop?)+R6IOp]0$hKP;o!C,JTR_n5a"!sK"^t#XO%>a
%<G0>e<q*HuWQQ<W>QS^4HWZuq>h$BhY_(mBaTNE,*HM_ak4c)H&u4QK1:EPON[rTu;<Elpk?r4W%kDak4tJBtj8/+SA_9l&*,MbG
%@<nipnr?6k3%iQr>1jpkbe`06*`a,eW8rt0.sTd!&fKc.?1TLIS);$hKA8R58Abcb334g,5&o@4arKcmmpUp=3\`]?Xl-]U[<^eU
%N%tWbo6XT5`NA;bSuLYX6D?u>%jeLC;m83qLDBXpeXa\`Ao(]odA)[_cCBNhofXiZCsgrWO]LtY"(`pk4Z&d_[J:iE0T++:[3O*,
%N[lB$oK)=S1BUeOHWZuqW2gr$<cD/L,^Kl.a-h"Q2nt+_RLPhT<`m.WKt>6Y=S!uoS);*jh'Rd.&SVEh'bWZ!ZfB7ifULd9$N1`-
%gat3iV]DXffQ$%"YdD-"j[G[ffb%p%:HO[)KH4]3!c.D^YL!PHJ*E(d)`Yb\"IZSr5ka>=YW'=P'l*S2[(@%gE*OQSZae:r>g*oK
%c0o(p(A[Q>\&&3,/&[\s61#FD"afif=J=W*dXJ[B!fedQS'k@+(,H,@o6XSJfRht^00uKV,`HiWKj4V1^6>tHe95BM#*/#->;3n^
%Q8/PFo6XT5g'eUe`t]A/=J7!X[!"s,F0IU<LD?7P=g;Ja$B?V^DC!6W/S5@`jtC'"G`0mPDt<=a80u"LD9,lF62)ObM=_L+87\0>
%^%i#]YOMGsceh6;rq]#0ZdDElAQ!nPYY&i#'`UP;o8MF;'<QI?^+A3`Q_[HPGf`L9;m83qRG_S]nQTtPmoEQ+dgd'U?ar0ST7XKH
%$Wd$uQ\7kS,;,3nYss!i>ZudN.-\%Kc0(:slqhOUfT:2s/=<?mriCd#qT[@/aF84>VCVRra^e4S-%-MH]TYB<Z%]XOkmUC+->8[8
%pC9]\&Z="J^]u9LOWcl'qj#kr8TXQb%>,]RNU:`a0sl3TanX;oi@mZ*Zs>'>'+uCo%3.]qd3Dr40_Cl:'@Q!(%>Emn;3$_IE`hqb
%B>jRF-i76F7.<6HIrkt80G?3s+&WM1lKiq"Lg=Im/o8s87l?^ni<^q;g'Tc(QJQt*=^,^,V=b5bfJ)M$!nnNWGK&"RN1t1:3QlUf
%\,'47hg&I1D+GljG<U^BGiN2q"'(eLE*Vm,p>#q;nC;e&;<@([g3?eMor&L=KY1$dOZ6C+S?KjrmR\?A#HtuSOs]b.fI'BH(Hi`r
%%XQWN;]uo\QQ?S&$iNn:&c(R']/aE>N'!(Ne(jG4SF_&9(nY$NIANBnEEr,fp)YQPp"o*05(/JemIi`l\r8OpUZnP_IXE-_D8?Re
%g\YAua)'Pu4h["H/qNI!r@hoaL)8GTWOY"V4Y0XuU)WhjRB0hAmpYuoPoj9LA?tLPDuSTg&k!3>:Ebf'A0;tHZLgW':(dmg4+Spn
%H5I3X,T\fa%Qt[E9n"EWO:'t=T<tH.7'W<T4j_6Lo:_.qSjkPS$7C\V"6shp0Ar$J`'pX6%8jn3,S9I1GhYt-MbrUdeU@cMKb"u(
%+oRChL7AMsiNY^M$GC5@6!psc1.bU?+%D72\`V_qHfS\K)n:h70./JN?k[&i;4#,nVQBOXFN6",rP-(mP9LmIkf*Shch&.Sk%?'Q
%"R"5Do]?oL_Oa=ba62W*Lbd'-o:p^LA8h)&k;B'4j3J6tFh>]W6#;*:4[Q5+L-N?YNDHbVYWohT>CUmG;"j8@jObg/-#ffap$6_/
%Y'G2R\C78:'2_Spr^a;BH?*>:&&@3[V<a#f'*Bi7j&Z!65,lH7rRlLCE^iis*(a=PF#G*>`X9<Snjj,+Uj_5coci4M%XpnK't2^/
%qHmAdP<S=Map665rf?<&Y1XhAG=C)kM'5f'(Lh,W0<dZ/\i/)fW@p*Ar5l-Po7g\#BU=2FZSV`+%CgEc]$r(&l-S&KbH%3+LfATU
%P)_iscr8@G>s=r_+e<?QZDM!5MtC-B3sXRg@)EC1%I%GuVBY"W1rL`gVdW0&7iP?1E(mM/$/cQ=.u`IG$pnbrVu+;5;oBHY94(U<
%"0*__[[t`SZJ$s5Cq^_*7r0`UF8.lf5oQ"p;Fc>[S,OlYs/87eVGESD6LFCCek&o^,Ze]/oW43V@@`8a+iVFI>Zj_d'Bq.#j@qr4
%*?2"!;/C\D$C\&D6G]B=PKm_'l^.6;^6BF;HCL=fb_W>Xi[>CkTMTs*e,\&8i\l&MfcUj[,3d0k-HEN#Zc-jKYt99:RNtV^Oj,G'
%7?fP9`&CC`daH7=/C62tT7?07Nq+6?b]8:i7ALjcY%]ogkp7RXTr/LaX6`!ndGDc]YT=gdA6=un/YB6@[2c9k_>;Fe<g%/.<T!PS
%C,!_ok<p%^ER6YZIH\q-1mneV3(D>Q(6_')pXJ$H@QC%"*p./)@F=(n(.nC_(LPNXMi/?8KGFZ;d?b,TUd[_<`HANn'A0<(h)"]+
%Zm_%lkAleP$<OT';W<o3595;oq1(^c/W>MP[lZEH3mQ#!f'aUG4o>;NfYRK.HoBlf2D7q#C7HM92%E,UQEM<&_;9W<s.&r7qm<;O
%;?%0/#U"c1mT'l,J(f$Fn%jhVG4eK%f`c;5IqF1]Jbu]3Cl)k#obUH68HOuW)fiN"o(%#Q1[:f%nB,Z%#%&K4hR__L#RR<f4^tAH
%N%&#tWC_(P)l:rQ6eT71R@%HUL\Y5!$XMDj0dn9J8CBm1j\cL<H:>NaYt:+4KSN/g?ZVN"hP)>,K>l6JYS3074_L"4VIV(t8>d(1
%L)4i_%*H/1c#"tgHht+Q4]W8'EVN>_+CT?4khrcrd+<8t"[2$c-_YF4jrP"^57Gu617K3F/81IIH&n7;p-I>#luqa+=PJT<9U(FI
%=O^h521PS.J,\L(YCG49r-bjGdY=riRkGeZZ1[d:dH'4Mrp`eAIXcg?n9jI'?S"?I199"5cg/&4]Ok'FGU2Q3j1HdYDaT],22)qn
%dZ(C[W^Ag*nfhsf5.s8sTMUFN.`\6RbN6Aak]oQn(.TJ_k&^#Q6"C+t"N;?sWmK@fC1M]$a=$VMd?$Ar2>8P7k4p,..^MF%8+aGa
%Po&kF%72g3g(a3uZ`2=']Y6/mMO%8/-2-JKHcdId*F#8r=](h`+o>$"r$;Z8,^?F:+:H8K936CeZoC>,?;SGXM1]03p%dh(Y5IE@
%^]+*&YMXg'a1qNnK^cg0"4^:?1#<4s,C1EY`p%B!_:X>7h.FPI$kgfh1AklV<>-A/O:aDW)*lni1CV\T/iX@)H&lQ4mt3IZn$Cu)
%UX,G<NkWHgS8V1@jKN,eE',X1N83ne^Mq:<QfM83j&M9&-R`:nLNkW&@GPOWh2I"[!N4\])-C-4;P[Dg7?PXO6cue]8>Gt4#^L!&
%>'<8q_PrXiF5EZedrXc+!/afha,\:;f*1umB%XmS_[plaGAE->&TSkC6YS0lop!i^n+.SP$`nubD:idYOrE6L4CQ!Rfg92:)kYCF
%KO\+MhC`^Gm_PA/jK;[$R2'A5h^!5;@g@)I]=FtD`E_7>_%3muA6k6(%<9j3T;W[iL,pPh8lodm7sF9hMhPO:Uc1lK>1E#:$G:dg
%9Kk9hk5*N/KP9a*f9`1IZWI`ZFQN?_.jpGk0')VJTRZ+JL9'^AQ.^,YCeQ*q8bM'Enj*q<hj[*mSchQ*-^:pKgu+RF_!MYZ0U-,L
%ZQA8mapifk7T#Vq/fJ"PqVu;^5neq?MFN*g]:TNb^o%,LcdAWD'?8a3JoU:LpF3"s-Q#>n%p!_;@*DH5VT\h,UI0Y'""Ejt352D2
%fqQkXq6Tj");9.p=U.lE,q=C?SPS_9P!_kPrFe4`T\7KV7\]A=)[d5](ht[C9l,P'6tXQY&t>$Ul>%#R$5`oqXtb[m20W[FcYI-+
%cYH#1;Vn,p2Ick5,gU9j:@QG^$`af\ORD\0B1O,lF5C]sLV."]9[%du21'Ru>(SRu=b8ItC[Q3bUF%t,\Zl"q,C7Y6cA;tB\Suj7
%UI-RsR\;8sH9fX\q]K_t%f<Z.<:;3;5Acd&jYhKcR-JG>rKp1)mr&0<6?!&A+-jJ!L*KlIhPqa#:QY=nn_jEI[HrX&%bV9nRSsaN
%+?`#ac"9Lb322,j*Sc.W3GR-eE=`Vfr.]q9q$dF0Q<4A02Ia.*96>R-j-V`@M2ilC5+Up4pb[d'[JI%%'EAu%hW6r*%d)scb7qJ+
%<dT2_/"*l$B5OO[9`\k3B'<qoE?Y[RRnlB^F-Q@%S;sqN4X$/Gr1uFp=*91?G<0&o?g"jGh5.1Q/pSZ/AA0<_G*5@JP/Qr>Q9Xq(
%L8uiu%mn<0'l:I`+:(rmbiQ-12-=[:A?r#@:'`<ar3`IA/*VP5o<XUBQUPc!W22oLpEY58k]s76NS=.G[;lAlS+>!;W2LTo:g#n\
%0_`*M2=0UfCK-n76cj.]iFfH4&-g\<U`L'1GsiC8.QAd)#E]r!41HXrRgPiZA*F`W$q,ljDc.q:VmSEnZ37;Qh*!aec68X,cSI\6
%k7Jtbm3VVp6dWISgol,U"\JZl/U?7mR/3!l6A$-oj.oP`PX'uJ_LQ,eUpm8srf62f5S[uh;OJmjL6<LT)"OZPV'>.J"WX.l*(>Y1
%+ZiWof!sG]ne!@eVmj^l*%ME_ICIc$8asEOLdHdnk!bM&if0FfeXm>(qP-3(k7Ofa72qo64)>u:c"#W>HhH%3<Dia(QIgKSXhMLn
%]_j1Dd2P63d!",RQ8tUPeV^q5)+t]=2b#98g2iS_e6eUMH61H0^9Kuh43;*P?KhcbH:123B85R@`M,%G+/D3?*"V7Y7,&@/+FPIE
%4*E-`M4tek>eJ,@DVQQkjph2a\&f$Oig5*Jj98c\-F_))`qf+V+_DseH;1(1fcTW8'!mufDHi8Lb62:"r)6C9#at.n.Pg>E'KtWS
%E'ZN;$e%s4A%;a08=.&;lo\ZIE;M$>I3D6IO3X@2'HQ0=\)^r.)'E&-a'_`9h>oa"?sQqXTe6;K:Q+,&j`b;-L+Rj]r;O8%>pe^D
%Dnj6T2[''TJ%,I@J,PH.lh((hrS^O:rC"Fcr:f+Kq]Gfu5Q1T]+c?*m^\dais8INHiT^+:nK76Fs5F!Ss7GsPJ,7'Ts742prSd"e
%s7[W859OXh)Z7K;r7CuB^]",grVstU!7C~>
%AI9_PrivateDataEnd
